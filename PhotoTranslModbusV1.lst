;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 26.10.2018 18:35:47
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0x0FFC2000  	536875004
0x0004	0x148D0000  	5261
0x0008	0x1E2D0000  	7725
0x000C	0x1E2D0000  	7725
0x0010	0x1E2D0000  	7725
0x0014	0x1E2D0000  	7725
0x0018	0x1E2D0000  	7725
0x001C	0x1E2D0000  	7725
0x0020	0x1E2D0000  	7725
0x0024	0x1E2D0000  	7725
0x0028	0x1E2D0000  	7725
0x002C	0x1E2D0000  	7725
0x0030	0x1E2D0000  	7725
0x0034	0x1E2D0000  	7725
0x0038	0x1E2D0000  	7725
0x003C	0x1E2D0000  	7725
0x0040	0x1E2D0000  	7725
0x0044	0x1E2D0000  	7725
0x0048	0x1E2D0000  	7725
0x004C	0x1E2D0000  	7725
0x0050	0x1E2D0000  	7725
0x0054	0x1E2D0000  	7725
0x0058	0x1E2D0000  	7725
0x005C	0x1E2D0000  	7725
0x0060	0x1E2D0000  	7725
0x0064	0x1E2D0000  	7725
0x0068	0x1E2D0000  	7725
0x006C	0x1E2D0000  	7725
0x0070	0x1E2D0000  	7725
0x0074	0x1E2D0000  	7725
0x0078	0x1E2D0000  	7725
0x007C	0x1E2D0000  	7725
0x0080	0x1E2D0000  	7725
0x0084	0x1E2D0000  	7725
0x0088	0x1E2D0000  	7725
0x008C	0x1E2D0000  	7725
0x0090	0x1E2D0000  	7725
0x0094	0x1E2D0000  	7725
0x0098	0x1E2D0000  	7725
0x009C	0x1E2D0000  	7725
0x00A0	0x1E2D0000  	7725
0x00A4	0x1E2D0000  	7725
0x00A8	0x1E2D0000  	7725
0x00AC	0x17610000  	5985
0x00B0	0x1E2D0000  	7725
0x00B4	0x1E2D0000  	7725
0x00B8	0x1E2D0000  	7725
0x00BC	0x1E2D0000  	7725
; end of ____SysVT
_main:
;PhotoTransdModbusV2.c, 570 :: 		void main() {
0x148C	0xB081    SUB	SP, SP, #4
0x148E	0xF000F8D9  BL	5700
0x1492	0xF000FEAF  BL	8692
0x1496	0xF000F8CB  BL	5680
0x149A	0xF000FE4F  BL	8508
;PhotoTransdModbusV2.c, 571 :: 		unsigned int ttt=0;//счетчик
;PhotoTransdModbusV2.c, 586 :: 		ReadSettings();
0x149E	0xF7FFFDCB  BL	_ReadSettings+0
;PhotoTransdModbusV2.c, 588 :: 		GPIO_Digital_Output(&GPIOA_BASE,_GPIO_PINMASK_7);//направление
0x14A2	0x2180    MOVS	R1, #128
0x14A4	0x484F    LDR	R0, [PC, #316]
0x14A6	0xF7FFFFE9  BL	_GPIO_Digital_Output+0
;PhotoTransdModbusV2.c, 589 :: 		GPIO_Config(&GPIOA_BASE,_GPIO_PINMASK_6,_GPIO_CFG_DIGITAL_INPUT|_GPIO_CFG_PULL_UP);//вход с подтяжкой
0x14AA	0x22C2    MOVS	R2, #194
0x14AC	0x2140    MOVS	R1, #64
0x14AE	0x484D    LDR	R0, [PC, #308]
0x14B0	0xF7FEFE4E  BL	_GPIO_Config+0
;PhotoTransdModbusV2.c, 594 :: 		UART1_Init(baudrate_bid(baudrate));
0x14B4	0x484C    LDR	R0, [PC, #304]
0x14B6	0x8800    LDRH	R0, [R0, #0]
0x14B8	0xF7FFFF58  BL	_baudrate_bid+0
0x14BC	0xF7FFFFCC  BL	_UART1_Init+0
;PhotoTransdModbusV2.c, 595 :: 		USART1_RTOR= 35;//таймаут 3,5 длины символа - 1+8+1 бит на символ, 35 бит
0x14C0	0x2123    MOVS	R1, #35
0x14C2	0x484A    LDR	R0, [PC, #296]
0x14C4	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 596 :: 		USART1_CR2.RTOEN=1;  //таймаут включен
0x14C6	0x4A4A    LDR	R2, [PC, #296]
0x14C8	0x6810    LDR	R0, [R2, #0]
0x14CA	0x2101    MOVS	R1, #1
0x14CC	0x05C9    LSLS	R1, R1, #23
0x14CE	0x4308    ORRS	R0, R1
0x14D0	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 598 :: 		Soft_I2C_Init();      //программный I2C
0x14D2	0xF7FFFEE5  BL	_Soft_I2C_Init+0
;PhotoTransdModbusV2.c, 602 :: 		Dir_RS485=1;//передача
0x14D6	0x4A47    LDR	R2, [PC, #284]
0x14D8	0x6810    LDR	R0, [R2, #0]
0x14DA	0x2180    MOVS	R1, #128
0x14DC	0x4308    ORRS	R0, R1
0x14DE	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 603 :: 		UART1_Write_Text("\r\nReady, I2C initalized\r\n");
0x14E0	0x4845    LDR	R0, [PC, #276]
0x14E2	0xF7FFFED5  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 604 :: 		ByteToStr(dev_adress,txt);
0x14E6	0x4845    LDR	R0, [PC, #276]
0x14E8	0x7800    LDRB	R0, [R0, #0]
0x14EA	0x4945    LDR	R1, [PC, #276]
0x14EC	0xF7FFFEA0  BL	_ByteToStr+0
;PhotoTransdModbusV2.c, 605 :: 		UART1_Write_Text(" Adress: ");
0x14F0	0x4844    LDR	R0, [PC, #272]
0x14F2	0xF7FFFECD  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 606 :: 		UART1_Write_Text(txt);
0x14F6	0x4842    LDR	R0, [PC, #264]
0x14F8	0xF7FFFECA  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 607 :: 		LongWordToStr(baudrate_bid(baudrate),txt);
0x14FC	0x483A    LDR	R0, [PC, #232]
0x14FE	0x8800    LDRH	R0, [R0, #0]
0x1500	0xF7FFFF34  BL	_baudrate_bid+0
0x1504	0x493E    LDR	R1, [PC, #248]
0x1506	0xF7FFFE0F  BL	_LongWordToStr+0
;PhotoTransdModbusV2.c, 608 :: 		UART1_Write_Text(" baudrate: ");
0x150A	0x483F    LDR	R0, [PC, #252]
0x150C	0xF7FFFEC0  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 609 :: 		UART1_Write_Text(txt);
0x1510	0x483B    LDR	R0, [PC, #236]
0x1512	0xF7FFFEBD  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 610 :: 		LongWordToStr(packet_timeout_us,txt);
0x1516	0x483D    LDR	R0, [PC, #244]
0x1518	0x6800    LDR	R0, [R0, #0]
0x151A	0x4939    LDR	R1, [PC, #228]
0x151C	0xF7FFFE04  BL	_LongWordToStr+0
;PhotoTransdModbusV2.c, 611 :: 		UART1_Write_Text(" packet_timeout_us: ");
0x1520	0x483B    LDR	R0, [PC, #236]
0x1522	0xF7FFFEB5  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 612 :: 		UART1_Write_Text(txt);
0x1526	0x4836    LDR	R0, [PC, #216]
0x1528	0xF7FFFEB2  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 614 :: 		UART1_Write_Text("\r\n");
0x152C	0x4839    LDR	R0, [PC, #228]
0x152E	0xF7FFFEAF  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 615 :: 		Dir_RS485=0;//прием
0x1532	0x4A30    LDR	R2, [PC, #192]
0x1534	0x6810    LDR	R0, [R2, #0]
0x1536	0x2180    MOVS	R1, #128
0x1538	0x4388    BICS	R0, R1
0x153A	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 617 :: 		RegistersUpdate();
0x153C	0xF7FFFE22  BL	_RegistersUpdate+0
;PhotoTransdModbusV2.c, 620 :: 		Dir_RS485=1;//передача
0x1540	0x4A2C    LDR	R2, [PC, #176]
0x1542	0x6810    LDR	R0, [R2, #0]
0x1544	0x2180    MOVS	R1, #128
0x1546	0x4308    ORRS	R0, R1
0x1548	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 621 :: 		for (ttt=0;ttt<16;ttt++){
0x154A	0x2000    MOVS	R0, #0
0x154C	0x9000    STR	R0, [SP, #0]
L_main81:
0x154E	0x9800    LDR	R0, [SP, #0]
0x1550	0xB280    UXTH	R0, R0
0x1552	0x2810    CMP	R0, #16
0x1554	0xD221    BCS	L_main82
;PhotoTransdModbusV2.c, 622 :: 		ByteToStr(ttt,txt);
0x1556	0x492A    LDR	R1, [PC, #168]
0x1558	0x9800    LDR	R0, [SP, #0]
0x155A	0xB280    UXTH	R0, R0
0x155C	0xF7FFFE68  BL	_ByteToStr+0
;PhotoTransdModbusV2.c, 623 :: 		UART1_Write_Text(" Register: ");
0x1560	0x482D    LDR	R0, [PC, #180]
0x1562	0xF7FFFE95  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 624 :: 		UART1_Write_Text(txt);
0x1566	0x4826    LDR	R0, [PC, #152]
0x1568	0xF7FFFE92  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 625 :: 		WordToHex(ModbusRegister[ttt],txt);
0x156C	0x9800    LDR	R0, [SP, #0]
0x156E	0xB280    UXTH	R0, R0
0x1570	0x0041    LSLS	R1, R0, #1
0x1572	0x482A    LDR	R0, [PC, #168]
0x1574	0x1840    ADDS	R0, R0, R1
0x1576	0x8800    LDRH	R0, [R0, #0]
0x1578	0x4921    LDR	R1, [PC, #132]
0x157A	0xF7FFFF3F  BL	_WordToHex+0
;PhotoTransdModbusV2.c, 626 :: 		UART1_Write_Text(" >> ");
0x157E	0x4828    LDR	R0, [PC, #160]
0x1580	0xF7FFFE86  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 627 :: 		UART1_Write_Text(txt);
0x1584	0x481E    LDR	R0, [PC, #120]
0x1586	0xF7FFFE83  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 628 :: 		UART1_Write_Text("\r\n");
0x158A	0x4826    LDR	R0, [PC, #152]
0x158C	0xF7FFFE80  BL	_UART1_Write_Text+0
;PhotoTransdModbusV2.c, 621 :: 		for (ttt=0;ttt<16;ttt++){
0x1590	0x9800    LDR	R0, [SP, #0]
0x1592	0xB280    UXTH	R0, R0
0x1594	0x3001    ADDS	R0, #1
0x1596	0x9000    STR	R0, [SP, #0]
;PhotoTransdModbusV2.c, 630 :: 		};
0x1598	0xE7D9    B	L_main81
L_main82:
;PhotoTransdModbusV2.c, 631 :: 		Dir_RS485=0;//прием
0x159A	0x4A16    LDR	R2, [PC, #88]
0x159C	0x6810    LDR	R0, [R2, #0]
0x159E	0x2180    MOVS	R1, #128
0x15A0	0x4388    BICS	R0, R1
0x15A2	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 633 :: 		USART1_CR1.RXNEIE = 1;             //бит разрешения прерывание от приемника
0x15A4	0x4A20    LDR	R2, [PC, #128]
0x15A6	0x6810    LDR	R0, [R2, #0]
0x15A8	0x2140    MOVS	R1, #64
0x15AA	0x4308    ORRS	R0, R1
0x15AC	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 634 :: 		NVIC_IntEnable(IVT_INT_USART1);//разрешаем прерывание от приемника
0x15AE	0x202B    MOVS	R0, #43
0x15B0	0xF7FFFCDC  BL	_NVIC_IntEnable+0
;PhotoTransdModbusV2.c, 660 :: 		iii=0;
0x15B4	0x2100    MOVS	R1, #0
0x15B6	0x481D    LDR	R0, [PC, #116]
0x15B8	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 663 :: 		Soft_I2C_Start();
0x15BA	0xF7FEFFCD  BL	_Soft_I2C_Start+0
;PhotoTransdModbusV2.c, 664 :: 		Soft_I2C_Write(ADS1110Adress);//адрес
0x15BE	0x2090    MOVS	R0, #144
0x15C0	0xF7FFF9F4  BL	_Soft_I2C_Write+0
;PhotoTransdModbusV2.c, 666 :: 		Soft_I2C_Write(ADS1110Config);//конфигурация
0x15C4	0x208C    MOVS	R0, #140
0x15C6	0xF7FFF9F1  BL	_Soft_I2C_Write+0
;PhotoTransdModbusV2.c, 667 :: 		Soft_I2C_Stop();
0x15CA	0xF7FFF987  BL	_Soft_I2C_Stop+0
;PhotoTransdModbusV2.c, 669 :: 		while (1){
L_main84:
;PhotoTransdModbusV2.c, 671 :: 		delay_ms(67);//15 измерений в секунду
0x15CE	0x4F02    LDR	R7, [PC, #8]
L_main86:
0x15D0	0x1E7F    SUBS	R7, R7, #1
0x15D2	0xD1FD    BNE	L_main86
0x15D4	0xBF00    NOP
0x15D6	0xE002    B	#4
0x15D8	0x2DBF0008  	#535999
0x15DC	0xBF00    NOP
;PhotoTransdModbusV2.c, 673 :: 		};
0x15DE	0xE7F6    B	L_main84
;PhotoTransdModbusV2.c, 683 :: 		}
L_end_main:
L__main_end_loop:
0x15E0	0xE7FE    B	L__main_end_loop
0x15E2	0xBF00    NOP
0x15E4	0x00004800  	GPIOA_BASE+0
0x15E8	0x00022000  	_baudrate+0
0x15EC	0x38144001  	USART1_RTOR+0
0x15F0	0x38044001  	USART1_CR2+0
0x15F4	0x00144800  	GPIOA_ODR+0
0x15F8	0x000A2000  	?lstr1_PhotoTransdModbusV2+0
0x15FC	0x00002000  	_dev_adress+0
0x1600	0x00902000  	_txt+0
0x1604	0x00242000  	?lstr2_PhotoTransdModbusV2+0
0x1608	0x002E2000  	?lstr3_PhotoTransdModbusV2+0
0x160C	0x00042000  	_packet_timeout_us+0
0x1610	0x003A2000  	?lstr4_PhotoTransdModbusV2+0
0x1614	0x004F2000  	?lstr5_PhotoTransdModbusV2+0
0x1618	0x00522000  	?lstr6_PhotoTransdModbusV2+0
0x161C	0x00702000  	_ModbusRegister+0
0x1620	0x005E2000  	?lstr7_PhotoTransdModbusV2+0
0x1624	0x00632000  	?lstr8_PhotoTransdModbusV2+0
0x1628	0x38004001  	USART1_CR1+0
0x162C	0x00082000  	_iii+0
; end of _main
_NVIC_IntEnable:
;__Lib_System.c, 163 :: 		
; ivt start address is: 0 (R0)
0x0F6C	0xB500    PUSH	(R14)
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System.c, 176 :: 		
0x0F6E	0x280F    CMP	R0, #15
0x0F70	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System.c, 182 :: 		
0x0F72	0x490B    LDR	R1, [PC, #44]
0x0F74	0x680A    LDR	R2, [R1, #0]
0x0F76	0x2102    MOVS	R1, #2
0x0F78	0x430A    ORRS	R2, R1
0x0F7A	0x4909    LDR	R1, [PC, #36]
0x0F7C	0x600A    STR	R2, [R1, #0]
;__Lib_System.c, 183 :: 		
0x0F7E	0xE00D    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System.c, 184 :: 		
; ivt start address is: 0 (R0)
0x0F80	0x2810    CMP	R0, #16
0x0F82	0xD30B    BCC	L_NVIC_IntEnable8
;__Lib_System.c, 189 :: 		
0x0F84	0x4603    MOV	R3, R0
0x0F86	0x3B10    SUBS	R3, #16
; ivt end address is: 0 (R0)
0x0F88	0x0959    LSRS	R1, R3, #5
0x0F8A	0x008A    LSLS	R2, R1, #2
0x0F8C	0x4905    LDR	R1, [PC, #20]
0x0F8E	0x188C    ADDS	R4, R1, R2
;__Lib_System.c, 190 :: 		
0x0F90	0x211F    MOVS	R1, #31
0x0F92	0x400B    ANDS	R3, R1
0x0F94	0x2201    MOVS	R2, #1
0x0F96	0x4611    MOV	R1, R2
0x0F98	0x4099    LSLS	R1, R3
0x0F9A	0x6021    STR	R1, [R4, #0]
;__Lib_System.c, 191 :: 		
L_NVIC_IntEnable8:
L_NVIC_IntEnable7:
;__Lib_System.c, 192 :: 		
L_end_NVIC_IntEnable:
0x0F9C	0xBD00    POP	(R15)
0x0F9E	0xBF00    NOP
0x0FA0	0xE010E000  	STK_CSR+0
0x0FA4	0xE100E000  	NVIC_ISER+0
; end of _NVIC_IntEnable
___CC2DW:
;__Lib_System.c, 27 :: 		
0x0FA8	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 29 :: 		
L_loopDW:
;__Lib_System.c, 30 :: 		
0x0FAA	0x783C    LDRB	R4, [R7, #0]
;__Lib_System.c, 31 :: 		
0x0FAC	0x1C7F    ADDS	R7, R7, #1
;__Lib_System.c, 32 :: 		
0x0FAE	0x7034    STRB	R4, [R6, #0]
;__Lib_System.c, 33 :: 		
0x0FB0	0x1C76    ADDS	R6, R6, #1
;__Lib_System.c, 34 :: 		
0x0FB2	0x42AE    CMP	R6, R5
;__Lib_System.c, 35 :: 		
0x0FB4	0xD1F9    BNE	L_loopDW
;__Lib_System.c, 37 :: 		
L_end___CC2DW:
0x0FB6	0xB001    ADD	SP, SP, #4
0x0FB8	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System.c, 76 :: 		
0x0FBC	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 78 :: 		
0x0FBE	0x2400    MOVS	R4, #0
;__Lib_System.c, 79 :: 		
0x0FC0	0x2700    MOVS	R7, #0
;__Lib_System.c, 80 :: 		
0x0FC2	0x45AD    CMP	SP, R5
;__Lib_System.c, 81 :: 		
0x0FC4	0xDC03    BGT	L_loopFZs
;__Lib_System.c, 82 :: 		
0x0FC6	0x45B5    CMP	SP, R6
;__Lib_System.c, 83 :: 		
0x0FC8	0xDB01    BLT	L_loopFZs
;__Lib_System.c, 84 :: 		
0x0FCA	0x462F    MOV	R7, R5
;__Lib_System.c, 85 :: 		
0x0FCC	0x466D    MOV	R5, SP
;__Lib_System.c, 86 :: 		
L_loopFZs:
;__Lib_System.c, 87 :: 		
0x0FCE	0x6034    STR	R4, [R6, #0]
;__Lib_System.c, 88 :: 		
0x0FD0	0x1D36    ADDS	R6, R6, #4
;__Lib_System.c, 89 :: 		
0x0FD2	0x42AE    CMP	R6, R5
;__Lib_System.c, 90 :: 		
0x0FD4	0xD1FB    BNE	L_loopFZs
;__Lib_System.c, 91 :: 		
0x0FD6	0x42AF    CMP	R7, R5
;__Lib_System.c, 92 :: 		
0x0FD8	0xDD03    BLE	L_norep
;__Lib_System.c, 93 :: 		
0x0FDA	0x463D    MOV	R5, R7
;__Lib_System.c, 94 :: 		
0x0FDC	0x6826    LDR	R6, [R4, #0]
;__Lib_System.c, 95 :: 		
0x0FDE	0x1D36    ADDS	R6, R6, #4
;__Lib_System.c, 96 :: 		
0x0FE0	0xE7F5    B	L_loopFZs
;__Lib_System.c, 97 :: 		
L_norep:
;__Lib_System.c, 99 :: 		
L_end___FillZeros:
0x0FE2	0xB001    ADD	SP, SP, #4
0x0FE4	0x4770    BX	LR
; end of ___FillZeros
_ReadSettings:
;PhotoTransdModbusV2.c, 147 :: 		void ReadSettings(){
0x1038	0xB500    PUSH	(R14)
0x103A	0xB082    SUB	SP, SP, #8
;PhotoTransdModbusV2.c, 148 :: 		ptr = (unsigned long*)flash_dev_adress;
0x103C	0x4918    LDR	R1, [PC, #96]
0x103E	0x4819    LDR	R0, [PC, #100]
0x1040	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 149 :: 		dev_adress = (unsigned short)(*ptr);//по ссылке из памяти
0x1042	0x6800    LDR	R0, [R0, #0]
0x1044	0x6802    LDR	R2, [R0, #0]
0x1046	0xB2D1    UXTB	R1, R2
0x1048	0x4817    LDR	R0, [PC, #92]
0x104A	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 150 :: 		if (dev_adress>127) {dev_adress=1;};//если сбилось - т.к. всего 127,
0x104C	0xB2D0    UXTB	R0, R2
0x104E	0x287F    CMP	R0, #127
0x1050	0xD902    BLS	L_ReadSettings16
0x1052	0x2101    MOVS	R1, #1
0x1054	0x4814    LDR	R0, [PC, #80]
0x1056	0x7001    STRB	R1, [R0, #0]
L_ReadSettings16:
;PhotoTransdModbusV2.c, 151 :: 		ptr = (unsigned long*)flash_baudrate;
0x1058	0x4914    LDR	R1, [PC, #80]
0x105A	0x4812    LDR	R0, [PC, #72]
0x105C	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 153 :: 		baudrate =(unsigned int)( *ptr);//по ссылке из памяти
0x105E	0x6800    LDR	R0, [R0, #0]
0x1060	0x6802    LDR	R2, [R0, #0]
0x1062	0xB291    UXTH	R1, R2
0x1064	0x4812    LDR	R0, [PC, #72]
0x1066	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 154 :: 		if (!baudrate_test(baudrate)){baudrate=default_baudrate;};//если сбилось
0x1068	0xB290    UXTH	R0, R2
0x106A	0xF7FFFFD3  BL	_baudrate_test+0
0x106E	0x2800    CMP	R0, #0
0x1070	0xD102    BNE	L_ReadSettings17
0x1072	0x2106    MOVS	R1, #6
0x1074	0x480E    LDR	R0, [PC, #56]
0x1076	0x8001    STRH	R1, [R0, #0]
L_ReadSettings17:
;PhotoTransdModbusV2.c, 156 :: 		packet_timeout_us=(unsigned long)((3.5*1000000.0)/baudrate_bid(baudrate));//таймаут в три с половиной символа - в микросекундах
0x1078	0x480D    LDR	R0, [PC, #52]
0x107A	0x8800    LDRH	R0, [R0, #0]
0x107C	0xF000F976  BL	_baudrate_bid+0
0x1080	0xF7FFFEB4  BL	__UnsignedIntegralToFloat+0
0x1084	0x9001    STR	R0, [SP, #4]
0x1086	0x480B    LDR	R0, [PC, #44]
0x1088	0x9100    STR	R1, [SP, #0]
0x108A	0x9901    LDR	R1, [SP, #4]
0x108C	0x460A    MOV	R2, R1
0x108E	0xF7FFFECF  BL	__Div_FP+0
0x1092	0x9900    LDR	R1, [SP, #0]
0x1094	0xF7FFFEB4  BL	__FloatToUnsignedIntegral+0
0x1098	0x4907    LDR	R1, [PC, #28]
0x109A	0x6008    STR	R0, [R1, #0]
;PhotoTransdModbusV2.c, 160 :: 		}
L_end_ReadSettings:
0x109C	0xB002    ADD	SP, SP, #8
0x109E	0xBD00    POP	(R15)
0x10A0	0x3C000800  	#134233088
0x10A4	0x006C2000  	_ptr+0
0x10A8	0x00002000  	_dev_adress+0
0x10AC	0x3C040800  	#134233092
0x10B0	0x00022000  	_baudrate+0
0x10B4	0x9F804A55  	#1247125376
0x10B8	0x00042000  	_packet_timeout_us+0
; end of _ReadSettings
_baudrate_test:
;PhotoTransdModbusV2.c, 115 :: 		char baudrate_test(unsigned int bd){      //проверка битрейта по списку
; bd start address is: 0 (R0)
0x1014	0xB500    PUSH	(R14)
; bd end address is: 0 (R0)
; bd start address is: 0 (R0)
;PhotoTransdModbusV2.c, 116 :: 		if ((bd>=0)&(bd<=10))  {return 1;} else {return 0;};
0x1016	0x2800    CMP	R0, #0
0x1018	0xD301    BCC	L__baudrate_test94
0x101A	0x2201    MOVS	R2, #1
0x101C	0xE000    B	L__baudrate_test95
L__baudrate_test94:
0x101E	0x2200    MOVS	R2, #0
L__baudrate_test95:
0x1020	0x280A    CMP	R0, #10
0x1022	0xD801    BHI	L__baudrate_test96
0x1024	0x2101    MOVS	R1, #1
0x1026	0xE000    B	L__baudrate_test97
L__baudrate_test96:
0x1028	0x2100    MOVS	R1, #0
L__baudrate_test97:
; bd end address is: 0 (R0)
0x102A	0x4011    ANDS	R1, R2
0x102C	0x2900    CMP	R1, #0
0x102E	0xD001    BEQ	L_baudrate_test14
0x1030	0x2001    MOVS	R0, #1
0x1032	0xE000    B	L_end_baudrate_test
L_baudrate_test14:
0x1034	0x2000    MOVS	R0, #0
;PhotoTransdModbusV2.c, 133 :: 		}
L_end_baudrate_test:
0x1036	0xBD00    POP	(R15)
; end of _baudrate_test
_baudrate_bid:
;PhotoTransdModbusV2.c, 97 :: 		unsigned long baudrate_bid(unsigned int bd){ //битрейт по номеру
; bd start address is: 0 (R0)
0x136C	0xB500    PUSH	(R14)
; bd end address is: 0 (R0)
; bd start address is: 0 (R0)
;PhotoTransdModbusV2.c, 98 :: 		switch (bd) {
0x136E	0xE018    B	L_baudrate_bid0
; bd end address is: 0 (R0)
;PhotoTransdModbusV2.c, 99 :: 		case 0:return 300; break;
L_baudrate_bid2:
0x1370	0x20FF    MOVS	R0, #255
0x1372	0x302D    ADDS	R0, #45
0x1374	0xE02C    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 100 :: 		case 1:return 600;break;
L_baudrate_bid3:
0x1376	0x4817    LDR	R0, [PC, #92]
0x1378	0xE02A    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 101 :: 		case 2:return 1200;break;
L_baudrate_bid4:
0x137A	0x4817    LDR	R0, [PC, #92]
0x137C	0xE028    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 102 :: 		case 3:return 2400;break;
L_baudrate_bid5:
0x137E	0x4817    LDR	R0, [PC, #92]
0x1380	0xE026    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 103 :: 		case 4:return 4800;break;
L_baudrate_bid6:
0x1382	0x4817    LDR	R0, [PC, #92]
0x1384	0xE024    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 104 :: 		case 5:return 9600;break;
L_baudrate_bid7:
0x1386	0x4817    LDR	R0, [PC, #92]
0x1388	0xE022    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 105 :: 		case 6:return 19200;break;
L_baudrate_bid8:
0x138A	0x4817    LDR	R0, [PC, #92]
0x138C	0xE020    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 106 :: 		case 7:return 38400;break;
L_baudrate_bid9:
0x138E	0x4817    LDR	R0, [PC, #92]
0x1390	0xE01E    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 107 :: 		case 8:return 57600;break;
L_baudrate_bid10:
0x1392	0x4817    LDR	R0, [PC, #92]
0x1394	0xE01C    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 108 :: 		case 9:return 115200;break;
L_baudrate_bid11:
0x1396	0x4817    LDR	R0, [PC, #92]
0x1398	0xE01A    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 109 :: 		case 10:return 230400;break;
L_baudrate_bid12:
0x139A	0x4817    LDR	R0, [PC, #92]
0x139C	0xE018    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 110 :: 		default:return 19200;
L_baudrate_bid13:
0x139E	0x4812    LDR	R0, [PC, #72]
0x13A0	0xE016    B	L_end_baudrate_bid
;PhotoTransdModbusV2.c, 111 :: 		}
L_baudrate_bid0:
; bd start address is: 0 (R0)
0x13A2	0x2800    CMP	R0, #0
0x13A4	0xD0E4    BEQ	L_baudrate_bid2
0x13A6	0x2801    CMP	R0, #1
0x13A8	0xD0E5    BEQ	L_baudrate_bid3
0x13AA	0x2802    CMP	R0, #2
0x13AC	0xD0E5    BEQ	L_baudrate_bid4
0x13AE	0x2803    CMP	R0, #3
0x13B0	0xD0E5    BEQ	L_baudrate_bid5
0x13B2	0x2804    CMP	R0, #4
0x13B4	0xD0E5    BEQ	L_baudrate_bid6
0x13B6	0x2805    CMP	R0, #5
0x13B8	0xD0E5    BEQ	L_baudrate_bid7
0x13BA	0x2806    CMP	R0, #6
0x13BC	0xD0E5    BEQ	L_baudrate_bid8
0x13BE	0x2807    CMP	R0, #7
0x13C0	0xD0E5    BEQ	L_baudrate_bid9
0x13C2	0x2808    CMP	R0, #8
0x13C4	0xD0E5    BEQ	L_baudrate_bid10
0x13C6	0x2809    CMP	R0, #9
0x13C8	0xD0E5    BEQ	L_baudrate_bid11
0x13CA	0x280A    CMP	R0, #10
0x13CC	0xD0E5    BEQ	L_baudrate_bid12
; bd end address is: 0 (R0)
0x13CE	0xE7E6    B	L_baudrate_bid13
;PhotoTransdModbusV2.c, 113 :: 		}
L_end_baudrate_bid:
0x13D0	0xBD00    POP	(R15)
0x13D2	0xBF00    NOP
0x13D4	0x02580000  	#600
0x13D8	0x04B00000  	#1200
0x13DC	0x09600000  	#2400
0x13E0	0x12C00000  	#4800
0x13E4	0x25800000  	#9600
0x13E8	0x4B000000  	#19200
0x13EC	0x96000000  	#38400
0x13F0	0xE1000000  	#57600
0x13F4	0xC2000001  	#115200
0x13F8	0x84000003  	#230400
; end of _baudrate_bid
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 249 :: 		
0x0DEC	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 251 :: 		
0x0DEE	0xB410    PUSH	(R4)
;__Lib_MathDouble.c, 252 :: 		
0x0DF0	0x2200    MOVS	R2, #0
;__Lib_MathDouble.c, 253 :: 		
0x0DF2	0x2396    MOVS	R3, #150
;__Lib_MathDouble.c, 254 :: 		
0x0DF4	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 255 :: 		
0x0DF6	0xF7FFFC8D  BL	__Lib_MathDouble___Float_Aux+0
;__Lib_MathDouble.c, 256 :: 		
0x0DFA	0xBC10    POP	(R4)
;__Lib_MathDouble.c, 258 :: 		
L_end__UnsignedIntegralToFloat:
0x0DFC	0xBD00    POP	(R15)
; end of __UnsignedIntegralToFloat
__Lib_MathDouble___Float_Aux:
;__Lib_MathDouble.c, 1764 :: 		
0x0714	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1766 :: 		
0x0716	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 1767 :: 		
0x0718	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 1768 :: 		
0x071A	0x0C05    LSRS	R5, R0, #16
;__Lib_MathDouble.c, 1769 :: 		
0x071C	0xD105    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1770 :: 		
0x071E	0x2410    MOVS	R4, #16
;__Lib_MathDouble.c, 1771 :: 		
0x0720	0x0400    LSLS	R0, R0, #16
;__Lib_MathDouble.c, 1772 :: 		
0x0722	0xD102    BNE	__Float_Aux_Lab_1
;__Lib_MathDouble.c, 1773 :: 		
0x0724	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1774 :: 		
0x0726	0xD022    BEQ	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1775 :: 		
0x0728	0x2411    MOVS	R4, #17
;__Lib_MathDouble.c, 1777 :: 		
__Float_Aux_Lab_1:
;__Lib_MathDouble.c, 1778 :: 		
0x072A	0x0E05    LSRS	R5, R0, #24
;__Lib_MathDouble.c, 1779 :: 		
0x072C	0xD101    BNE	__Float_Aux_Lab_3
;__Lib_MathDouble.c, 1780 :: 		
0x072E	0x3408    ADDS	R4, #8
;__Lib_MathDouble.c, 1781 :: 		
0x0730	0x0200    LSLS	R0, R0, #8
;__Lib_MathDouble.c, 1783 :: 		
__Float_Aux_Lab_3:
;__Lib_MathDouble.c, 1784 :: 		
0x0732	0x0F05    LSRS	R5, R0, #28
;__Lib_MathDouble.c, 1785 :: 		
0x0734	0xD101    BNE	__Float_Aux_Lab_4
;__Lib_MathDouble.c, 1786 :: 		
0x0736	0x1D24    ADDS	R4, R4, #4
;__Lib_MathDouble.c, 1787 :: 		
0x0738	0x0100    LSLS	R0, R0, #4
;__Lib_MathDouble.c, 1789 :: 		
__Float_Aux_Lab_4:
;__Lib_MathDouble.c, 1790 :: 		
0x073A	0x0F85    LSRS	R5, R0, #30
;__Lib_MathDouble.c, 1791 :: 		
0x073C	0xD101    BNE	__Float_Aux_Lab_5
;__Lib_MathDouble.c, 1792 :: 		
0x073E	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 1793 :: 		
0x0740	0x0080    LSLS	R0, R0, #2
;__Lib_MathDouble.c, 1795 :: 		
__Float_Aux_Lab_5:
;__Lib_MathDouble.c, 1796 :: 		
0x0742	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 1797 :: 		
0x0744	0xDB01    BLT	__Float_Aux_Lab_6
;__Lib_MathDouble.c, 1798 :: 		
0x0746	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 1799 :: 		
0x0748	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1801 :: 		
__Float_Aux_Lab_6:
;__Lib_MathDouble.c, 1802 :: 		
0x074A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1803 :: 		
0x074C	0xD008    BEQ	__Float_Aux_Lab_7
;__Lib_MathDouble.c, 1804 :: 		
0x074E	0x2520    MOVS	R5, #32
;__Lib_MathDouble.c, 1805 :: 		
0x0750	0x1B2E    SUBS	R6, R5, R4
;__Lib_MathDouble.c, 1806 :: 		
0x0752	0x460D    MOV	R5, R1
;__Lib_MathDouble.c, 1807 :: 		
0x0754	0x40F5    LSRS	R5, R6
;__Lib_MathDouble.c, 1808 :: 		
0x0756	0x40A1    LSLS	R1, R4
;__Lib_MathDouble.c, 1809 :: 		
0x0758	0xD000    BEQ	__Float_Aux_Lab_9
;__Lib_MathDouble.c, 1810 :: 		
0x075A	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 1812 :: 		
__Float_Aux_Lab_9:
;__Lib_MathDouble.c, 1813 :: 		
0x075C	0x430D    ORRS	R5, R1
;__Lib_MathDouble.c, 1814 :: 		
0x075E	0x4328    ORRS	R0, R5
;__Lib_MathDouble.c, 1816 :: 		
__Float_Aux_Lab_7:
;__Lib_MathDouble.c, 1817 :: 		
0x0760	0x1B1B    SUBS	R3, R3, R4
;__Lib_MathDouble.c, 1818 :: 		
0x0762	0x0601    LSLS	R1, R0, #24
;__Lib_MathDouble.c, 1819 :: 		
0x0764	0x1DDB    ADDS	R3, R3, #7
;__Lib_MathDouble.c, 1820 :: 		
0x0766	0x0A00    LSRS	R0, R0, #8
;__Lib_MathDouble.c, 1821 :: 		
0x0768	0x2B00    CMP	R3, #0
;__Lib_MathDouble.c, 1822 :: 		
0x076A	0xDA02    BGE	__Float_Aux_Lab_8
;__Lib_MathDouble.c, 1823 :: 		
0x076C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1825 :: 		
__Float_Aux_Lab_2:
;__Lib_MathDouble.c, 1826 :: 		
0x076E	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1828 :: 		
0x0770	0xE00C    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1830 :: 		
__Float_Aux_Lab_8:
;__Lib_MathDouble.c, 1831 :: 		
0x0772	0x05DB    LSLS	R3, R3, #23
;__Lib_MathDouble.c, 1832 :: 		
0x0774	0x1818    ADDS	R0, R3, R0
;__Lib_MathDouble.c, 1833 :: 		
0x0776	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 1834 :: 		
0x0778	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 1835 :: 		
0x077A	0xDAF8    BGE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1836 :: 		
0x077C	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1837 :: 		
0x077E	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 1838 :: 		
0x0780	0xD1F5    BNE	__Float_Aux_Lab_2
;__Lib_MathDouble.c, 1839 :: 		
0x0782	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 1840 :: 		
0x0784	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 1841 :: 		
0x0786	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1842 :: 		
0x0788	0xE000    B	__Float_Aux_Lab_end
;__Lib_MathDouble.c, 1843 :: 		
0x078A	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 1845 :: 		
__Float_Aux_Lab_end:
;__Lib_MathDouble.c, 1847 :: 		
L_end___Float_Aux:
0x078C	0xB001    ADD	SP, SP, #4
0x078E	0x4770    BX	LR
; end of __Lib_MathDouble___Float_Aux
__Div_FP:
;__Lib_MathDouble.c, 582 :: 		
0x0E30	0xB500    PUSH	(R14)
;__Lib_MathDouble.c, 584 :: 		
0x0E32	0xB470    PUSH	(R4, R5, R6)
;__Lib_MathDouble.c, 588 :: 		
0x0E34	0x0014    MOVS	R4, R2
;__Lib_MathDouble.c, 589 :: 		
0x0E36	0xD105    BNE	_Div_FP_Lab_10
;__Lib_MathDouble.c, 591 :: 		
0x0E38	0x0000    MOVS	R0, R0
;__Lib_MathDouble.c, 592 :: 		
0x0E3A	0xD501    BPL	_Div_FP_Lab_11
;__Lib_MathDouble.c, 594 :: 		
0x0E3C	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 595 :: 		
0x0E3E	0xE040    B	_Div_FP_end
;__Lib_MathDouble.c, 597 :: 		
_Div_FP_Lab_11:
;__Lib_MathDouble.c, 598 :: 		
0x0E40	0x4822    LDR	R0, [PC, #136]
;__Lib_MathDouble.c, 599 :: 		
0x0E42	0xE03E    B	_Div_FP_end
;__Lib_MathDouble.c, 602 :: 		
_Div_FP_Lab_10:
;__Lib_MathDouble.c, 604 :: 		
0x0E44	0x4611    MOV	R1, R2
;__Lib_MathDouble.c, 605 :: 		
0x0E46	0x4602    MOV	R2, R0
;__Lib_MathDouble.c, 606 :: 		
0x0E48	0x404A    EORS	R2, R1
;__Lib_MathDouble.c, 607 :: 		
0x0E4A	0x0FD5    LSRS	R5, R2, #31
;__Lib_MathDouble.c, 608 :: 		
0x0E4C	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 609 :: 		
0x0E4E	0x004A    LSLS	R2, R1, #1
;__Lib_MathDouble.c, 610 :: 		
0x0E50	0x07ED    LSLS	R5, R5, #31
;__Lib_MathDouble.c, 611 :: 		
0x0E52	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 612 :: 		
0x0E54	0x0852    LSRS	R2, R2, #1
;__Lib_MathDouble.c, 613 :: 		
0x0E56	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 614 :: 		
0x0E58	0xD016    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 615 :: 		
0x0E5A	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 616 :: 		
0x0E5C	0xD014    BEQ	_Div_FP_Lab_1
;__Lib_MathDouble.c, 617 :: 		
0x0E5E	0x0041    LSLS	R1, R0, #1
;__Lib_MathDouble.c, 618 :: 		
0x0E60	0x0E0C    LSRS	R4, R1, #24
;__Lib_MathDouble.c, 619 :: 		
0x0E62	0x0051    LSLS	R1, R2, #1
;__Lib_MathDouble.c, 620 :: 		
0x0E64	0x0E0B    LSRS	R3, R1, #24
;__Lib_MathDouble.c, 621 :: 		
0x0E66	0x0241    LSLS	R1, R0, #9
;__Lib_MathDouble.c, 622 :: 		
0x0E68	0x2001    MOVS	R0, #1
;__Lib_MathDouble.c, 623 :: 		
0x0E6A	0x05C0    LSLS	R0, R0, #23
;__Lib_MathDouble.c, 624 :: 		
0x0E6C	0x0252    LSLS	R2, R2, #9
;__Lib_MathDouble.c, 625 :: 		
0x0E6E	0x0A49    LSRS	R1, R1, #9
;__Lib_MathDouble.c, 626 :: 		
0x0E70	0x0A52    LSRS	R2, R2, #9
;__Lib_MathDouble.c, 627 :: 		
0x0E72	0x1AE4    SUBS	R4, R4, R3
;__Lib_MathDouble.c, 628 :: 		
0x0E74	0x1809    ADDS	R1, R1, R0
;__Lib_MathDouble.c, 629 :: 		
0x0E76	0x1812    ADDS	R2, R2, R0
;__Lib_MathDouble.c, 630 :: 		
0x0E78	0x347D    ADDS	R4, #125
;__Lib_MathDouble.c, 631 :: 		
0x0E7A	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 632 :: 		
0x0E7C	0xD301    BCC	_Div_FP_Lab_2
;__Lib_MathDouble.c, 633 :: 		
0x0E7E	0x1C64    ADDS	R4, R4, #1
;__Lib_MathDouble.c, 634 :: 		
0x0E80	0xE000    B	_Div_FP_Lab_3
;__Lib_MathDouble.c, 636 :: 		
_Div_FP_Lab_2:
;__Lib_MathDouble.c, 637 :: 		
0x0E82	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 639 :: 		
_Div_FP_Lab_3:
;__Lib_MathDouble.c, 640 :: 		
0x0E84	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 641 :: 		
0x0E86	0xDA01    BGE	_Div_FP_Lab_4
;__Lib_MathDouble.c, 643 :: 		
_Div_FP_Lab_1:
;__Lib_MathDouble.c, 644 :: 		
0x0E88	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 646 :: 		
0x0E8A	0xE01A    B	_Div_FP_end
;__Lib_MathDouble.c, 649 :: 		
_Div_FP_Lab_4:
;__Lib_MathDouble.c, 650 :: 		
0x0E8C	0x2300    MOVS	R3, #0
;__Lib_MathDouble.c, 652 :: 		
_Div_FP_Lab_6:
;__Lib_MathDouble.c, 653 :: 		
0x0E8E	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 654 :: 		
0x0E90	0xD301    BCC	_Div_FP_Lab_5
;__Lib_MathDouble.c, 655 :: 		
0x0E92	0x1A89    SUBS	R1, R1, R2
;__Lib_MathDouble.c, 656 :: 		
0x0E94	0x4303    ORRS	R3, R0
;__Lib_MathDouble.c, 658 :: 		
_Div_FP_Lab_5:
;__Lib_MathDouble.c, 659 :: 		
0x0E96	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 660 :: 		
0x0E98	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 661 :: 		
0x0E9A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 662 :: 		
0x0E9C	0xD1F7    BNE	_Div_FP_Lab_6
;__Lib_MathDouble.c, 663 :: 		
0x0E9E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 664 :: 		
0x0EA0	0xD00A    BEQ	_Div_FP_Lab_7
;__Lib_MathDouble.c, 665 :: 		
0x0EA2	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 666 :: 		
0x0EA4	0xD102    BNE	_Div_FP_Lab_8
;__Lib_MathDouble.c, 667 :: 		
0x0EA6	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 668 :: 		
0x0EA8	0x07C9    LSLS	R1, R1, #31
;__Lib_MathDouble.c, 669 :: 		
0x0EAA	0xE005    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 671 :: 		
_Div_FP_Lab_8:
;__Lib_MathDouble.c, 672 :: 		
0x0EAC	0x4291    CMP	R1, R2
;__Lib_MathDouble.c, 673 :: 		
0x0EAE	0xD201    BCS	_Div_FP_Lab_9
;__Lib_MathDouble.c, 674 :: 		
0x0EB0	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 675 :: 		
0x0EB2	0xE001    B	_Div_FP_Lab_7
;__Lib_MathDouble.c, 677 :: 		
_Div_FP_Lab_9:
;__Lib_MathDouble.c, 678 :: 		
0x0EB4	0x2101    MOVS	R1, #1
;__Lib_MathDouble.c, 679 :: 		
0x0EB6	0x43C9    MVNS	R1, R1
;__Lib_MathDouble.c, 681 :: 		
_Div_FP_Lab_7:
;__Lib_MathDouble.c, 682 :: 		
0x0EB8	0x05E0    LSLS	R0, R4, #23
;__Lib_MathDouble.c, 683 :: 		
0x0EBA	0x18C0    ADDS	R0, R0, R3
;__Lib_MathDouble.c, 684 :: 		
0x0EBC	0x1940    ADDS	R0, R0, R5
;__Lib_MathDouble.c, 685 :: 		
0x0EBE	0xF7FFFD57  BL	__Lib_MathDouble___Fp+0
;__Lib_MathDouble.c, 687 :: 		
_Div_FP_end:
;__Lib_MathDouble.c, 688 :: 		
0x0EC2	0xBC70    POP	(R4, R5, R6)
;__Lib_MathDouble.c, 689 :: 		
0x0EC4	0xE004    B	#8
0x0EC6	0xBF00    NOP
0x0EC8	0x0000FF80  	#-8388608
0x0ECC	0x00007F80  	#2139095040
;__Lib_MathDouble.c, 690 :: 		
L_end__Div_FP:
0x0ED0	0xBD00    POP	(R15)
; end of __Div_FP
__Lib_MathDouble___Fp:
;__Lib_MathDouble.c, 2028 :: 		
0x0970	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 2030 :: 		
0x0972	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 2031 :: 		
0x0974	0xDA04    BGE	__Fp_Lab_end
;__Lib_MathDouble.c, 2032 :: 		
0x0976	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 2033 :: 		
0x0978	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 2034 :: 		
0x097A	0xD101    BNE	__Fp_Lab_end
;__Lib_MathDouble.c, 2035 :: 		
0x097C	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 2036 :: 		
0x097E	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 2038 :: 		
__Fp_Lab_end:
;__Lib_MathDouble.c, 2040 :: 		
L_end___Fp:
0x0980	0xB001    ADD	SP, SP, #4
0x0982	0x4770    BX	LR
; end of __Lib_MathDouble___Fp
__FloatToUnsignedIntegral:
;__Lib_MathDouble.c, 62 :: 		
0x0E00	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 64 :: 		
0x0E02	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 65 :: 		
0x0E04	0x0840    LSRS	R0, R0, #1
;__Lib_MathDouble.c, 66 :: 		
0x0E06	0x0DC1    LSRS	R1, R0, #23
;__Lib_MathDouble.c, 67 :: 		
0x0E08	0x0240    LSLS	R0, R0, #9
;__Lib_MathDouble.c, 68 :: 		
0x0E0A	0x2201    MOVS	R2, #1
;__Lib_MathDouble.c, 69 :: 		
0x0E0C	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 70 :: 		
0x0E0E	0x05D2    LSLS	R2, R2, #23
;__Lib_MathDouble.c, 71 :: 		
0x0E10	0x1880    ADDS	R0, R0, R2
;__Lib_MathDouble.c, 72 :: 		
0x0E12	0x297F    CMP	R1, #127
;__Lib_MathDouble.c, 73 :: 		
0x0E14	0xDA01    BGE	_FloatToUnsignedIntegral_Lab_1
;__Lib_MathDouble.c, 74 :: 		
0x0E16	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 75 :: 		
0x0E18	0xE007    B	_FloatToUnsignedIntegral_Lab_end
;__Lib_MathDouble.c, 76 :: 		
_FloatToUnsignedIntegral_Lab_1:
;__Lib_MathDouble.c, 77 :: 		
0x0E1A	0x2996    CMP	R1, #150
;__Lib_MathDouble.c, 78 :: 		
0x0E1C	0xDC03    BGT	_FloatToUnsignedIntegral_Lab_2
;__Lib_MathDouble.c, 79 :: 		
0x0E1E	0x2296    MOVS	R2, #150
;__Lib_MathDouble.c, 80 :: 		
0x0E20	0x1A51    SUBS	R1, R2, R1
;__Lib_MathDouble.c, 81 :: 		
0x0E22	0x40C8    LSRS	R0, R1
;__Lib_MathDouble.c, 82 :: 		
0x0E24	0xE001    B	_FloatToUnsignedIntegral_Lab_end
;__Lib_MathDouble.c, 83 :: 		
_FloatToUnsignedIntegral_Lab_2:
;__Lib_MathDouble.c, 84 :: 		
0x0E26	0x3996    SUBS	R1, #150
;__Lib_MathDouble.c, 85 :: 		
0x0E28	0x4088    LSLS	R0, R1
;__Lib_MathDouble.c, 87 :: 		
_FloatToUnsignedIntegral_Lab_end:
;__Lib_MathDouble.c, 89 :: 		
L_end__FloatToUnsignedIntegral:
0x0E2A	0xB001    ADD	SP, SP, #4
0x0E2C	0x4770    BX	LR
; end of __FloatToUnsignedIntegral
_GPIO_Digital_Output:
;__Lib_GPIO_32F0xx.c, 548 :: 		
; pinMask start address is: 4 (R1)
; port start address is: 0 (R0)
0x147C	0xB500    PUSH	(R14)
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pinMask start address is: 4 (R1)
;__Lib_GPIO_32F0xx.c, 550 :: 		
0x147E	0x4A02    LDR	R2, [PC, #8]
0x1480	0xB289    UXTH	R1, R1
; pinMask end address is: 4 (R1)
; port end address is: 0 (R0)
0x1482	0xF7FEFE65  BL	_GPIO_Config+0
;__Lib_GPIO_32F0xx.c, 551 :: 		
L_end_GPIO_Digital_Output:
0x1486	0xBD00    POP	(R15)
0x1488	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Config:
;__Lib_GPIO_32F0xx.c, 251 :: 		
; port start address is: 0 (R0)
0x0150	0xB500    PUSH	(R14)
0x0152	0xB086    SUB	SP, SP, #24
0x0154	0x9104    STR	R1, [SP, #16]
0x0156	0x9205    STR	R2, [SP, #20]
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 254 :: 		
;__Lib_GPIO_32F0xx.c, 255 :: 		
;__Lib_GPIO_32F0xx.c, 256 :: 		
;__Lib_GPIO_32F0xx.c, 258 :: 		
;__Lib_GPIO_32F0xx.c, 259 :: 		
;__Lib_GPIO_32F0xx.c, 260 :: 		
;__Lib_GPIO_32F0xx.c, 261 :: 		
;__Lib_GPIO_32F0xx.c, 263 :: 		
;__Lib_GPIO_32F0xx.c, 264 :: 		
;__Lib_GPIO_32F0xx.c, 265 :: 		
;__Lib_GPIO_32F0xx.c, 270 :: 		
0x0158	0x4BA4    LDR	R3, [PC, #656]
0x015A	0x4003    ANDS	R3, R0
0x015C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F0xx.c, 272 :: 		
; port end address is: 0 (R0)
0x015E	0xF7FFFFAF  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F0xx.c, 275 :: 		
0x0162	0x9B04    LDR	R3, [SP, #16]
0x0164	0xB29B    UXTH	R3, R3
0x0166	0x2BFF    CMP	R3, #255
0x0168	0xD121    BNE	L_GPIO_Config25
;__Lib_GPIO_32F0xx.c, 277 :: 		
0x016A	0x9B02    LDR	R3, [SP, #8]
0x016C	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 278 :: 		
0x016E	0x4BA0    LDR	R3, [PC, #640]
0x0170	0x4620    MOV	R0, R4
0x0172	0x4018    ANDS	R0, R3
; tmp start address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 280 :: 		
0x0174	0x9C05    LDR	R4, [SP, #20]
0x0176	0x4B9F    LDR	R3, [PC, #636]
0x0178	0x429C    CMP	R4, R3
0x017A	0xD112    BNE	L_GPIO_Config26
;__Lib_GPIO_32F0xx.c, 283 :: 		
0x017C	0x4B9E    LDR	R3, [PC, #632]
0x017E	0x4604    MOV	R4, R0
0x0180	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 284 :: 		
0x0182	0x9B02    LDR	R3, [SP, #8]
0x0184	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 287 :: 		
0x0186	0x9B02    LDR	R3, [SP, #8]
0x0188	0x1D1D    ADDS	R5, R3, #4
0x018A	0x682C    LDR	R4, [R5, #0]
0x018C	0x4B9B    LDR	R3, [PC, #620]
0x018E	0x4023    ANDS	R3, R4
0x0190	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 290 :: 		
0x0192	0x9B02    LDR	R3, [SP, #8]
0x0194	0x461D    MOV	R5, R3
0x0196	0x3508    ADDS	R5, #8
0x0198	0x682C    LDR	R4, [R5, #0]
0x019A	0x4B99    LDR	R3, [PC, #612]
0x019C	0x4323    ORRS	R3, R4
0x019E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 291 :: 		
0x01A0	0xE121    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 292 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F0xx.c, 294 :: 		
; tmp start address is: 0 (R0)
0x01A2	0x9B05    LDR	R3, [SP, #20]
0x01A4	0x2B42    CMP	R3, #66
0x01A6	0xD102    BNE	L_GPIO_Config27
;__Lib_GPIO_32F0xx.c, 297 :: 		
0x01A8	0x9B02    LDR	R3, [SP, #8]
0x01AA	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 298 :: 		
0x01AC	0xE11B    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 299 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F0xx.c, 300 :: 		
L_GPIO_Config25:
;__Lib_GPIO_32F0xx.c, 303 :: 		
0x01AE	0x9C04    LDR	R4, [SP, #16]
0x01B0	0xB2A4    UXTH	R4, R4
0x01B2	0x4B94    LDR	R3, [PC, #592]
0x01B4	0x429C    CMP	R4, R3
0x01B6	0xD121    BNE	L_GPIO_Config28
;__Lib_GPIO_32F0xx.c, 305 :: 		
0x01B8	0x9B02    LDR	R3, [SP, #8]
0x01BA	0x681C    LDR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 306 :: 		
0x01BC	0x4B90    LDR	R3, [PC, #576]
0x01BE	0x4023    ANDS	R3, R4
; tmp start address is: 0 (R0)
0x01C0	0x4618    MOV	R0, R3
;__Lib_GPIO_32F0xx.c, 308 :: 		
0x01C2	0x9C05    LDR	R4, [SP, #20]
0x01C4	0x4B8B    LDR	R3, [PC, #556]
0x01C6	0x429C    CMP	R4, R3
0x01C8	0xD112    BNE	L_GPIO_Config29
;__Lib_GPIO_32F0xx.c, 311 :: 		
0x01CA	0x4B8F    LDR	R3, [PC, #572]
0x01CC	0x4604    MOV	R4, R0
0x01CE	0x431C    ORRS	R4, R3
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 312 :: 		
0x01D0	0x9B02    LDR	R3, [SP, #8]
0x01D2	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 315 :: 		
0x01D4	0x9B02    LDR	R3, [SP, #8]
0x01D6	0x1D1D    ADDS	R5, R3, #4
0x01D8	0x682C    LDR	R4, [R5, #0]
0x01DA	0x4B8C    LDR	R3, [PC, #560]
0x01DC	0x4023    ANDS	R3, R4
0x01DE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 318 :: 		
0x01E0	0x9B02    LDR	R3, [SP, #8]
0x01E2	0x461D    MOV	R5, R3
0x01E4	0x3508    ADDS	R5, #8
0x01E6	0x682C    LDR	R4, [R5, #0]
0x01E8	0x4B81    LDR	R3, [PC, #516]
0x01EA	0x4323    ORRS	R3, R4
0x01EC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 319 :: 		
0x01EE	0xE0FA    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 320 :: 		
L_GPIO_Config29:
;__Lib_GPIO_32F0xx.c, 322 :: 		
; tmp start address is: 0 (R0)
0x01F0	0x9B05    LDR	R3, [SP, #20]
0x01F2	0x2B42    CMP	R3, #66
0x01F4	0xD102    BNE	L_GPIO_Config30
;__Lib_GPIO_32F0xx.c, 325 :: 		
0x01F6	0x9B02    LDR	R3, [SP, #8]
0x01F8	0x6018    STR	R0, [R3, #0]
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 326 :: 		
0x01FA	0xE0F4    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 327 :: 		
L_GPIO_Config30:
;__Lib_GPIO_32F0xx.c, 328 :: 		
L_GPIO_Config28:
;__Lib_GPIO_32F0xx.c, 331 :: 		
0x01FC	0x9C04    LDR	R4, [SP, #16]
0x01FE	0xB2A4    UXTH	R4, R4
0x0200	0x4B7F    LDR	R3, [PC, #508]
0x0202	0x429C    CMP	R4, R3
0x0204	0xD117    BNE	L_GPIO_Config31
;__Lib_GPIO_32F0xx.c, 333 :: 		
0x0206	0x9C05    LDR	R4, [SP, #20]
0x0208	0x4B7A    LDR	R3, [PC, #488]
0x020A	0x429C    CMP	R4, R3
0x020C	0xD10C    BNE	L_GPIO_Config32
;__Lib_GPIO_32F0xx.c, 336 :: 		
0x020E	0x4C80    LDR	R4, [PC, #512]
0x0210	0x9B02    LDR	R3, [SP, #8]
0x0212	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 339 :: 		
0x0214	0x9B02    LDR	R3, [SP, #8]
0x0216	0x1D1C    ADDS	R4, R3, #4
0x0218	0x2300    MOVS	R3, #0
0x021A	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F0xx.c, 342 :: 		
0x021C	0x9B02    LDR	R3, [SP, #8]
0x021E	0x461C    MOV	R4, R3
0x0220	0x3408    ADDS	R4, #8
0x0222	0x4B7C    LDR	R3, [PC, #496]
0x0224	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F0xx.c, 343 :: 		
0x0226	0xE0DE    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 344 :: 		
L_GPIO_Config32:
;__Lib_GPIO_32F0xx.c, 346 :: 		
0x0228	0x9B05    LDR	R3, [SP, #20]
0x022A	0x2B42    CMP	R3, #66
0x022C	0xD103    BNE	L_GPIO_Config33
;__Lib_GPIO_32F0xx.c, 349 :: 		
0x022E	0x2400    MOVS	R4, #0
0x0230	0x9B02    LDR	R3, [SP, #8]
0x0232	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 350 :: 		
0x0234	0xE0D7    B	L_end_GPIO_Config
;__Lib_GPIO_32F0xx.c, 351 :: 		
L_GPIO_Config33:
;__Lib_GPIO_32F0xx.c, 352 :: 		
L_GPIO_Config31:
;__Lib_GPIO_32F0xx.c, 361 :: 		
0x0236	0x9C05    LDR	R4, [SP, #20]
0x0238	0x2301    MOVS	R3, #1
0x023A	0x4023    ANDS	R3, R4
0x023C	0x2B00    CMP	R3, #0
0x023E	0xD002    BEQ	L_GPIO_Config34
;__Lib_GPIO_32F0xx.c, 363 :: 		
; mode start address is: 0 (R0)
0x0240	0x2003    MOVS	R0, #3
;__Lib_GPIO_32F0xx.c, 364 :: 		
0x0242	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
0x0244	0xE00F    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F0xx.c, 366 :: 		
0x0246	0x9C05    LDR	R4, [SP, #20]
0x0248	0x2308    MOVS	R3, #8
0x024A	0x4023    ANDS	R3, R4
0x024C	0x2B00    CMP	R3, #0
0x024E	0xD001    BEQ	L_GPIO_Config36
;__Lib_GPIO_32F0xx.c, 368 :: 		
; mode start address is: 0 (R0)
0x0250	0x2002    MOVS	R0, #2
;__Lib_GPIO_32F0xx.c, 369 :: 		
; mode end address is: 0 (R0)
0x0252	0xE007    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F0xx.c, 371 :: 		
0x0254	0x9C05    LDR	R4, [SP, #20]
0x0256	0x2304    MOVS	R3, #4
0x0258	0x4023    ANDS	R3, R4
0x025A	0x2B00    CMP	R3, #0
0x025C	0xD001    BEQ	L_GPIO_Config38
;__Lib_GPIO_32F0xx.c, 373 :: 		
; mode start address is: 0 (R0)
0x025E	0x2001    MOVS	R0, #1
;__Lib_GPIO_32F0xx.c, 374 :: 		
; mode end address is: 0 (R0)
0x0260	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F0xx.c, 378 :: 		
; mode start address is: 0 (R0)
0x0262	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 379 :: 		
L_GPIO_Config39:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config37:
; mode start address is: 0 (R0)
0x0264	0x4607    MOV	R7, R0
; mode end address is: 0 (R0)
L_GPIO_Config35:
;__Lib_GPIO_32F0xx.c, 387 :: 		
; mode start address is: 28 (R7)
0x0266	0x9C05    LDR	R4, [SP, #20]
0x0268	0x4B6B    LDR	R3, [PC, #428]
0x026A	0x4023    ANDS	R3, R4
0x026C	0x2B00    CMP	R3, #0
0x026E	0xD001    BEQ	L_GPIO_Config40
;__Lib_GPIO_32F0xx.c, 389 :: 		
; speed start address is: 8 (R2)
0x0270	0x2203    MOVS	R2, #3
;__Lib_GPIO_32F0xx.c, 390 :: 		
; speed end address is: 8 (R2)
0x0272	0xE007    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F0xx.c, 392 :: 		
0x0274	0x9C05    LDR	R4, [SP, #20]
0x0276	0x4B69    LDR	R3, [PC, #420]
0x0278	0x4023    ANDS	R3, R4
0x027A	0x2B00    CMP	R3, #0
0x027C	0xD001    BEQ	L_GPIO_Config42
;__Lib_GPIO_32F0xx.c, 394 :: 		
; speed start address is: 8 (R2)
0x027E	0x2201    MOVS	R2, #1
;__Lib_GPIO_32F0xx.c, 395 :: 		
; speed end address is: 8 (R2)
0x0280	0xE000    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F0xx.c, 399 :: 		
; speed start address is: 8 (R2)
0x0282	0x2200    MOVS	R2, #0
; speed end address is: 8 (R2)
;__Lib_GPIO_32F0xx.c, 400 :: 		
L_GPIO_Config43:
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F0xx.c, 424 :: 		
; speed start address is: 8 (R2)
0x0284	0x9C05    LDR	R4, [SP, #20]
0x0286	0x2320    MOVS	R3, #32
0x0288	0x4023    ANDS	R3, R4
0x028A	0x2B00    CMP	R3, #0
0x028C	0xD001    BEQ	L_GPIO_Config44
;__Lib_GPIO_32F0xx.c, 426 :: 		
; otype start address is: 4 (R1)
0x028E	0x2101    MOVS	R1, #1
;__Lib_GPIO_32F0xx.c, 427 :: 		
; otype end address is: 4 (R1)
0x0290	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F0xx.c, 431 :: 		
; otype start address is: 4 (R1)
0x0292	0x2100    MOVS	R1, #0
; otype end address is: 4 (R1)
;__Lib_GPIO_32F0xx.c, 432 :: 		
L_GPIO_Config45:
;__Lib_GPIO_32F0xx.c, 440 :: 		
; otype start address is: 4 (R1)
0x0294	0x9C05    LDR	R4, [SP, #20]
0x0296	0x23FF    MOVS	R3, #255
0x0298	0x3301    ADDS	R3, #1
0x029A	0x4023    ANDS	R3, R4
0x029C	0x2B00    CMP	R3, #0
0x029E	0xD002    BEQ	L_GPIO_Config46
;__Lib_GPIO_32F0xx.c, 442 :: 		
; pull start address is: 16 (R4)
0x02A0	0x2402    MOVS	R4, #2
;__Lib_GPIO_32F0xx.c, 443 :: 		
0x02A2	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
0x02A4	0xE008    B	L_GPIO_Config47
L_GPIO_Config46:
;__Lib_GPIO_32F0xx.c, 445 :: 		
0x02A6	0x9C05    LDR	R4, [SP, #20]
0x02A8	0x2380    MOVS	R3, #128
0x02AA	0x4023    ANDS	R3, R4
0x02AC	0x2B00    CMP	R3, #0
0x02AE	0xD001    BEQ	L_GPIO_Config48
;__Lib_GPIO_32F0xx.c, 447 :: 		
; pull start address is: 16 (R4)
0x02B0	0x2401    MOVS	R4, #1
;__Lib_GPIO_32F0xx.c, 448 :: 		
; pull end address is: 16 (R4)
0x02B2	0xE000    B	L_GPIO_Config49
L_GPIO_Config48:
;__Lib_GPIO_32F0xx.c, 451 :: 		
; pull start address is: 16 (R4)
0x02B4	0x2400    MOVS	R4, #0
; pull end address is: 16 (R4)
L_GPIO_Config49:
; pull start address is: 16 (R4)
0x02B6	0x4620    MOV	R0, R4
; pull end address is: 16 (R4)
L_GPIO_Config47:
;__Lib_GPIO_32F0xx.c, 454 :: 		
; pull start address is: 0 (R0)
0x02B8	0x2300    MOVS	R3, #0
0x02BA	0x9301    STR	R3, [SP, #4]
L_GPIO_Config50:
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 28 (R7)
; mode end address is: 28 (R7)
0x02BC	0x9B01    LDR	R3, [SP, #4]
0x02BE	0x2B10    CMP	R3, #16
0x02C0	0xD300    BCC	#0
0x02C2	0xE090    B	L_GPIO_Config51
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
;__Lib_GPIO_32F0xx.c, 456 :: 		
; mode start address is: 28 (R7)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x02C4	0x9D01    LDR	R5, [SP, #4]
0x02C6	0x2301    MOVS	R3, #1
0x02C8	0x461C    MOV	R4, R3
0x02CA	0x40AC    LSLS	R4, R5
;__Lib_GPIO_32F0xx.c, 459 :: 		
0x02CC	0x9B04    LDR	R3, [SP, #16]
0x02CE	0xB29B    UXTH	R3, R3
0x02D0	0x4023    ANDS	R3, R4
;__Lib_GPIO_32F0xx.c, 460 :: 		
0x02D2	0x42A3    CMP	R3, R4
0x02D4	0xD000    BEQ	#0
0x02D6	0xE082    B	L_GPIO_Config53
;__Lib_GPIO_32F0xx.c, 463 :: 		
0x02D8	0x9B01    LDR	R3, [SP, #4]
0x02DA	0x005D    LSLS	R5, R3, #1
0x02DC	0x2403    MOVS	R4, #3
0x02DE	0x4623    MOV	R3, R4
0x02E0	0x40AB    LSLS	R3, R5
0x02E2	0x43DC    MVN	R4, R3
0x02E4	0x9B02    LDR	R3, [SP, #8]
0x02E6	0x681B    LDR	R3, [R3, #0]
0x02E8	0x401C    ANDS	R4, R3
0x02EA	0x9B02    LDR	R3, [SP, #8]
0x02EC	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 465 :: 		
0x02EE	0x9B01    LDR	R3, [SP, #4]
0x02F0	0x005B    LSLS	R3, R3, #1
0x02F2	0x463C    MOV	R4, R7
0x02F4	0x409C    LSLS	R4, R3
0x02F6	0x9B02    LDR	R3, [SP, #8]
0x02F8	0x681B    LDR	R3, [R3, #0]
0x02FA	0x431C    ORRS	R4, R3
0x02FC	0x9B02    LDR	R3, [SP, #8]
0x02FE	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 469 :: 		
0x0300	0x9C05    LDR	R4, [SP, #20]
0x0302	0x230C    MOVS	R3, #12
0x0304	0x4023    ANDS	R3, R4
0x0306	0x2B00    CMP	R3, #0
0x0308	0xD027    BEQ	L_GPIO_Config54
;__Lib_GPIO_32F0xx.c, 472 :: 		
0x030A	0x9B02    LDR	R3, [SP, #8]
0x030C	0x461E    MOV	R6, R3
0x030E	0x3608    ADDS	R6, #8
0x0310	0x9B01    LDR	R3, [SP, #4]
0x0312	0x005D    LSLS	R5, R3, #1
0x0314	0x2403    MOVS	R4, #3
0x0316	0x4623    MOV	R3, R4
0x0318	0x40AB    LSLS	R3, R5
0x031A	0x43DC    MVN	R4, R3
0x031C	0x6833    LDR	R3, [R6, #0]
0x031E	0x4023    ANDS	R3, R4
0x0320	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F0xx.c, 474 :: 		
0x0322	0x9B02    LDR	R3, [SP, #8]
0x0324	0x461D    MOV	R5, R3
0x0326	0x3508    ADDS	R5, #8
0x0328	0x9B01    LDR	R3, [SP, #4]
0x032A	0x005B    LSLS	R3, R3, #1
0x032C	0x4614    MOV	R4, R2
0x032E	0x409C    LSLS	R4, R3
0x0330	0x682B    LDR	R3, [R5, #0]
0x0332	0x4323    ORRS	R3, R4
0x0334	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 478 :: 		
0x0336	0x9B02    LDR	R3, [SP, #8]
0x0338	0x1D1E    ADDS	R6, R3, #4
0x033A	0x9D01    LDR	R5, [SP, #4]
0x033C	0x2401    MOVS	R4, #1
0x033E	0x4623    MOV	R3, R4
0x0340	0x40AB    LSLS	R3, R5
0x0342	0x43DC    MVN	R4, R3
0x0344	0x6833    LDR	R3, [R6, #0]
0x0346	0x4023    ANDS	R3, R4
0x0348	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F0xx.c, 480 :: 		
0x034A	0x9B02    LDR	R3, [SP, #8]
0x034C	0x1D1D    ADDS	R5, R3, #4
0x034E	0x9B01    LDR	R3, [SP, #4]
0x0350	0x460C    MOV	R4, R1
0x0352	0x409C    LSLS	R4, R3
0x0354	0x682B    LDR	R3, [R5, #0]
0x0356	0x4323    ORRS	R3, R4
0x0358	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 481 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F0xx.c, 486 :: 		
0x035A	0x9B02    LDR	R3, [SP, #8]
0x035C	0x461E    MOV	R6, R3
0x035E	0x360C    ADDS	R6, #12
0x0360	0x9B01    LDR	R3, [SP, #4]
0x0362	0x005D    LSLS	R5, R3, #1
0x0364	0x2403    MOVS	R4, #3
0x0366	0x4623    MOV	R3, R4
0x0368	0x40AB    LSLS	R3, R5
0x036A	0x43DC    MVN	R4, R3
0x036C	0x6833    LDR	R3, [R6, #0]
0x036E	0x4023    ANDS	R3, R4
0x0370	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F0xx.c, 488 :: 		
0x0372	0x9B02    LDR	R3, [SP, #8]
0x0374	0x461D    MOV	R5, R3
0x0376	0x350C    ADDS	R5, #12
0x0378	0x9B01    LDR	R3, [SP, #4]
0x037A	0x005B    LSLS	R3, R3, #1
0x037C	0x4604    MOV	R4, R0
0x037E	0x409C    LSLS	R4, R3
0x0380	0x682B    LDR	R3, [R5, #0]
0x0382	0x4323    ORRS	R3, R4
0x0384	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F0xx.c, 500 :: 		
0x0386	0x9C05    LDR	R4, [SP, #20]
0x0388	0x2308    MOVS	R3, #8
0x038A	0x4023    ANDS	R3, R4
0x038C	0x2B00    CMP	R3, #0
0x038E	0xD026    BEQ	L_GPIO_Config55
;__Lib_GPIO_32F0xx.c, 502 :: 		
0x0390	0x9C05    LDR	R4, [SP, #20]
0x0392	0x4B23    LDR	R3, [PC, #140]
0x0394	0x4023    ANDS	R3, R4
0x0396	0x0D1B    LSRS	R3, R3, #20
0x0398	0x9300    STR	R3, [SP, #0]
;__Lib_GPIO_32F0xx.c, 505 :: 		
0x039A	0x9B01    LDR	R3, [SP, #4]
0x039C	0x2B07    CMP	R3, #7
0x039E	0xD906    BLS	L_GPIO_Config56
;__Lib_GPIO_32F0xx.c, 507 :: 		
0x03A0	0x9B02    LDR	R3, [SP, #8]
0x03A2	0x3324    ADDS	R3, #36
0x03A4	0x9303    STR	R3, [SP, #12]
;__Lib_GPIO_32F0xx.c, 508 :: 		
0x03A6	0x9B01    LDR	R3, [SP, #4]
0x03A8	0x461E    MOV	R6, R3
0x03AA	0x3E08    SUBS	R6, #8
; pos start address is: 24 (R6)
;__Lib_GPIO_32F0xx.c, 509 :: 		
; pos end address is: 24 (R6)
0x03AC	0xE003    B	L_GPIO_Config57
L_GPIO_Config56:
;__Lib_GPIO_32F0xx.c, 513 :: 		
0x03AE	0x9B02    LDR	R3, [SP, #8]
0x03B0	0x3320    ADDS	R3, #32
0x03B2	0x9303    STR	R3, [SP, #12]
;__Lib_GPIO_32F0xx.c, 514 :: 		
; pos start address is: 24 (R6)
0x03B4	0x9E01    LDR	R6, [SP, #4]
; pos end address is: 24 (R6)
;__Lib_GPIO_32F0xx.c, 515 :: 		
L_GPIO_Config57:
;__Lib_GPIO_32F0xx.c, 518 :: 		
; pos start address is: 24 (R6)
0x03B6	0x00B5    LSLS	R5, R6, #2
0x03B8	0x240F    MOVS	R4, #15
0x03BA	0x4623    MOV	R3, R4
0x03BC	0x40AB    LSLS	R3, R5
0x03BE	0x43DC    MVN	R4, R3
0x03C0	0x9B03    LDR	R3, [SP, #12]
0x03C2	0x681B    LDR	R3, [R3, #0]
0x03C4	0x401C    ANDS	R4, R3
0x03C6	0x9B03    LDR	R3, [SP, #12]
0x03C8	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 520 :: 		
0x03CA	0x9D00    LDR	R5, [SP, #0]
0x03CC	0xB2ED    UXTB	R5, R5
0x03CE	0x00B3    LSLS	R3, R6, #2
; pos end address is: 24 (R6)
0x03D0	0x462C    MOV	R4, R5
0x03D2	0x409C    LSLS	R4, R3
0x03D4	0x9B03    LDR	R3, [SP, #12]
0x03D6	0x681B    LDR	R3, [R3, #0]
0x03D8	0x431C    ORRS	R4, R3
0x03DA	0x9B03    LDR	R3, [SP, #12]
0x03DC	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F0xx.c, 521 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F0xx.c, 522 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F0xx.c, 454 :: 		
0x03DE	0x9B01    LDR	R3, [SP, #4]
0x03E0	0x3301    ADDS	R3, #1
0x03E2	0x9301    STR	R3, [SP, #4]
;__Lib_GPIO_32F0xx.c, 523 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 28 (R7)
0x03E4	0xE76A    B	L_GPIO_Config50
L_GPIO_Config51:
;__Lib_GPIO_32F0xx.c, 524 :: 		
L_end_GPIO_Config:
0x03E6	0xB006    ADD	SP, SP, #24
0x03E8	0xBD00    POP	(R15)
0x03EA	0xBF00    NOP
0x03EC	0xFC00FFFF  	#-1024
0x03F0	0x0000FFFF  	#-65536
0x03F4	0x00140008  	#524308
0x03F8	0x55550000  	#21845
0x03FC	0xFF00FFFF  	#-256
0x0400	0xFFFF0000  	#65535
0x0404	0xFF000000  	#65280
0x0408	0x00005555  	#1431633920
0x040C	0x00FFFFFF  	#-65281
0x0410	0x55555555  	#1431655765
0x0414	0xFFFFFFFF  	#-1
0x0418	0x08000008  	#526336
0x041C	0x04000000  	#1024
0x0420	0x000000F0  	#15728640
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F0xx.c, 146 :: 		
; port start address is: 0 (R0)
0x00C0	0xB500    PUSH	(R14)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 153 :: 		
0x00C2	0x4915    LDR	R1, [PC, #84]
0x00C4	0x4001    ANDS	R1, R0
; port end address is: 0 (R0)
; portBase start address is: 0 (R0)
0x00C6	0x4608    MOV	R0, R1
;__Lib_GPIO_32F0xx.c, 155 :: 		
; pos start address is: 8 (R2)
0x00C8	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F0xx.c, 156 :: 		
0x00CA	0xE00B    B	L_GPIO_Clk_Enable9
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F0xx.c, 158 :: 		
L_GPIO_Clk_Enable11:
;__Lib_GPIO_32F0xx.c, 160 :: 		
; pos start address is: 0 (R0)
0x00CC	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 161 :: 		
; pos end address is: 0 (R0)
0x00CE	0xE01C    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 163 :: 		
L_GPIO_Clk_Enable12:
;__Lib_GPIO_32F0xx.c, 165 :: 		
; pos start address is: 0 (R0)
0x00D0	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 166 :: 		
; pos end address is: 0 (R0)
0x00D2	0xE01A    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 168 :: 		
L_GPIO_Clk_Enable13:
;__Lib_GPIO_32F0xx.c, 170 :: 		
; pos start address is: 0 (R0)
0x00D4	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 171 :: 		
; pos end address is: 0 (R0)
0x00D6	0xE018    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 173 :: 		
L_GPIO_Clk_Enable14:
;__Lib_GPIO_32F0xx.c, 175 :: 		
; pos start address is: 0 (R0)
0x00D8	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 176 :: 		
; pos end address is: 0 (R0)
0x00DA	0xE016    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 178 :: 		
L_GPIO_Clk_Enable15:
;__Lib_GPIO_32F0xx.c, 180 :: 		
; pos start address is: 0 (R0)
0x00DC	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 181 :: 		
; pos end address is: 0 (R0)
0x00DE	0xE014    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 183 :: 		
L_GPIO_Clk_Enable16:
;__Lib_GPIO_32F0xx.c, 185 :: 		
; pos start address is: 0 (R0)
0x00E0	0x4813    LDR	R0, [PC, #76]
;__Lib_GPIO_32F0xx.c, 186 :: 		
; pos end address is: 0 (R0)
0x00E2	0xE012    B	L_GPIO_Clk_Enable10
;__Lib_GPIO_32F0xx.c, 188 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 8 (R2)
; portBase start address is: 0 (R0)
0x00E4	0x4913    LDR	R1, [PC, #76]
0x00E6	0x4288    CMP	R0, R1
0x00E8	0xD0F0    BEQ	L_GPIO_Clk_Enable11
0x00EA	0x4913    LDR	R1, [PC, #76]
0x00EC	0x4288    CMP	R0, R1
0x00EE	0xD0EF    BEQ	L_GPIO_Clk_Enable12
0x00F0	0x4912    LDR	R1, [PC, #72]
0x00F2	0x4288    CMP	R0, R1
0x00F4	0xD0EE    BEQ	L_GPIO_Clk_Enable13
0x00F6	0x4912    LDR	R1, [PC, #72]
0x00F8	0x4288    CMP	R0, R1
0x00FA	0xD0ED    BEQ	L_GPIO_Clk_Enable14
0x00FC	0x4911    LDR	R1, [PC, #68]
0x00FE	0x4288    CMP	R0, R1
0x0100	0xD0EC    BEQ	L_GPIO_Clk_Enable15
0x0102	0x4911    LDR	R1, [PC, #68]
0x0104	0x4288    CMP	R0, R1
0x0106	0xD0EB    BEQ	L_GPIO_Clk_Enable16
; portBase end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0108	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable10:
;__Lib_GPIO_32F0xx.c, 191 :: 		
; pos start address is: 0 (R0)
0x010A	0x4910    LDR	R1, [PC, #64]
0x010C	0x6809    LDR	R1, [R1, #0]
0x010E	0x460A    MOV	R2, R1
0x0110	0x4302    ORRS	R2, R0
; pos end address is: 0 (R0)
0x0112	0x490E    LDR	R1, [PC, #56]
0x0114	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F0xx.c, 192 :: 		
L_end_GPIO_Clk_Enable:
0x0116	0xBD00    POP	(R15)
0x0118	0xFC00FFFF  	#-1024
0x011C	0x00000002  	#131072
0x0120	0x00000004  	#262144
0x0124	0x00000008  	#524288
0x0128	0x00000010  	#1048576
0x012C	0x00000020  	#2097152
0x0130	0x00000040  	#4194304
0x0134	0x00004800  	#1207959552
0x0138	0x04004800  	#1207960576
0x013C	0x08004800  	#1207961600
0x0140	0x0C004800  	#1207962624
0x0144	0x10004800  	#1207963648
0x0148	0x14004800  	#1207964672
0x014C	0x10144002  	RCC_AHBENR+0
; end of _GPIO_Clk_Enable
_UART1_Init:
;__Lib_UART_1.c, 198 :: 		
; baud_rate start address is: 0 (R0)
0x1458	0xB500    PUSH	(R14)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_1.c, 199 :: 		
0x145A	0x4A06    LDR	R2, [PC, #24]
0x145C	0x2100    MOVS	R1, #0
0x145E	0xB404    PUSH	(R2)
0x1460	0xB402    PUSH	(R1)
0x1462	0x2300    MOVS	R3, #0
0x1464	0x2200    MOVS	R2, #0
0x1466	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1468	0x4803    LDR	R0, [PC, #12]
0x146A	0xF7FFFC35  BL	__Lib_UART_1_UARTx_Init_Advanced+0
0x146E	0xB002    ADD	SP, SP, #8
;__Lib_UART_1.c, 200 :: 		
L_end_UART1_Init:
0x1470	0xBD00    POP	(R15)
0x1472	0xBF00    NOP
0x1474	0x20340000  	__GPIO_MODULE_USART1_PA9_10+0
0x1478	0x38004001  	USART1_CR1+0
; end of _UART1_Init
__Lib_UART_1_UARTx_Init_Advanced:
;__Lib_UART_1.c, 151 :: 		
0x0CD8	0xB500    PUSH	(R14)
0x0CDA	0xB089    SUB	SP, SP, #36
0x0CDC	0x9006    STR	R0, [SP, #24]
0x0CDE	0x9107    STR	R1, [SP, #28]
0x0CE0	0x9308    STR	R3, [SP, #32]
0x0CE2	0x9C0A    LDR	R4, [SP, #40]
0x0CE4	0xB2A4    UXTH	R4, R4
0x0CE6	0x940A    STR	R4, [SP, #40]
0x0CE8	0x9C0B    LDR	R4, [SP, #44]
0x0CEA	0x940B    STR	R4, [SP, #44]
;__Lib_UART_1.c, 155 :: 		
0x0CEC	0x2408    MOVS	R4, #8
0x0CEE	0x446C    ADD	R4, SP, R4
0x0CF0	0x4620    MOV	R0, R4
0x0CF2	0xF7FFFCB7  BL	_RCC_GetClocksFrequency+0
;__Lib_UART_1.c, 157 :: 		
0x0CF6	0x4E33    LDR	R6, [PC, #204]
0x0CF8	0x6834    LDR	R4, [R6, #0]
0x0CFA	0x2501    MOVS	R5, #1
0x0CFC	0x03AD    LSLS	R5, R5, #14
0x0CFE	0x432C    ORRS	R4, R5
0x0D00	0x6034    STR	R4, [R6, #0]
;__Lib_UART_1.c, 158 :: 		
0x0D02	0x4D31    LDR	R5, [PC, #196]
0x0D04	0x4C31    LDR	R4, [PC, #196]
0x0D06	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 159 :: 		
0x0D08	0x4D31    LDR	R5, [PC, #196]
0x0D0A	0x4C32    LDR	R4, [PC, #200]
0x0D0C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 160 :: 		
0x0D0E	0x4D32    LDR	R5, [PC, #200]
0x0D10	0x4C32    LDR	R4, [PC, #200]
0x0D12	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 161 :: 		
0x0D14	0x4D32    LDR	R5, [PC, #200]
0x0D16	0x4C33    LDR	R4, [PC, #204]
0x0D18	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 162 :: 		
0x0D1A	0x9C04    LDR	R4, [SP, #16]
0x0D1C	0x9400    STR	R4, [SP, #0]
;__Lib_UART_1.c, 164 :: 		
0x0D1E	0x980B    LDR	R0, [SP, #44]
0x0D20	0xF7FFFC7E  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_UART_1.c, 166 :: 		
0x0D24	0x9C06    LDR	R4, [SP, #24]
0x0D26	0x1D25    ADDS	R5, R4, #4
0x0D28	0x2400    MOVS	R4, #0
0x0D2A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_1.c, 167 :: 		
0x0D2C	0x9C06    LDR	R4, [SP, #24]
0x0D2E	0x1D26    ADDS	R6, R4, #4
0x0D30	0x6835    LDR	R5, [R6, #0]
0x0D32	0x9C0A    LDR	R4, [SP, #40]
0x0D34	0xB2A4    UXTH	R4, R4
0x0D36	0x432C    ORRS	R4, R5
0x0D38	0x6034    STR	R4, [R6, #0]
;__Lib_UART_1.c, 168 :: 		
0x0D3A	0x2500    MOVS	R5, #0
0x0D3C	0x9C06    LDR	R4, [SP, #24]
0x0D3E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 170 :: 		
0x0D40	0x9C08    LDR	R4, [SP, #32]
0x0D42	0xB2A4    UXTH	R4, R4
0x0D44	0x2C00    CMP	R4, #0
0x0D46	0xD004    BEQ	L___Lib_UART_1_UARTx_Init_Advanced15
;__Lib_UART_1.c, 171 :: 		
0x0D48	0x9D08    LDR	R5, [SP, #32]
0x0D4A	0xB2AD    UXTH	R5, R5
0x0D4C	0x4C26    LDR	R4, [PC, #152]
0x0D4E	0x432C    ORRS	R4, R5
0x0D50	0x9408    STR	R4, [SP, #32]
;__Lib_UART_1.c, 172 :: 		
L___Lib_UART_1_UARTx_Init_Advanced15:
;__Lib_UART_1.c, 174 :: 		
0x0D52	0x9C06    LDR	R4, [SP, #24]
0x0D54	0x6825    LDR	R5, [R4, #0]
0x0D56	0x9C08    LDR	R4, [SP, #32]
0x0D58	0xB2A4    UXTH	R4, R4
0x0D5A	0x4325    ORRS	R5, R4
0x0D5C	0x9C06    LDR	R4, [SP, #24]
0x0D5E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 176 :: 		
0x0D60	0x9C06    LDR	R4, [SP, #24]
0x0D62	0x6825    LDR	R5, [R4, #0]
0x0D64	0x240D    MOVS	R4, #13
0x0D66	0x4325    ORRS	R5, R4
0x0D68	0x9C06    LDR	R4, [SP, #24]
0x0D6A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_1.c, 178 :: 		
0x0D6C	0x9C06    LDR	R4, [SP, #24]
0x0D6E	0x4625    MOV	R5, R4
0x0D70	0x3508    ADDS	R5, #8
0x0D72	0x2400    MOVS	R4, #0
0x0D74	0x602C    STR	R4, [R5, #0]
;__Lib_UART_1.c, 183 :: 		
0x0D76	0x9D00    LDR	R5, [SP, #0]
0x0D78	0x2419    MOVS	R4, #25
0x0D7A	0x4628    MOV	R0, R5
0x0D7C	0x4360    MULS	R0, R4, R0
0x0D7E	0x9C07    LDR	R4, [SP, #28]
0x0D80	0x00A2    LSLS	R2, R4, #2
0x0D82	0xF7FFFC2B  BL	__Div_32x32_U+0
; integerdivider start address is: 28 (R7)
0x0D86	0x4607    MOV	R7, R0
;__Lib_UART_1.c, 184 :: 		
0x0D88	0x2264    MOVS	R2, #100
0x0D8A	0xF7FFFC27  BL	__Div_32x32_U+0
0x0D8E	0x0104    LSLS	R4, R0, #4
0x0D90	0x9401    STR	R4, [SP, #4]
;__Lib_UART_1.c, 186 :: 		
0x0D92	0x0926    LSRS	R6, R4, #4
0x0D94	0x2564    MOVS	R5, #100
0x0D96	0x4634    MOV	R4, R6
0x0D98	0x436C    MULS	R4, R5, R4
0x0D9A	0x1B3C    SUBS	R4, R7, R4
; integerdivider end address is: 28 (R7)
;__Lib_UART_1.c, 187 :: 		
0x0D9C	0x0124    LSLS	R4, R4, #4
0x0D9E	0x4620    MOV	R0, R4
0x0DA0	0x3032    ADDS	R0, #50
0x0DA2	0x2264    MOVS	R2, #100
0x0DA4	0xF7FFFC1A  BL	__Div_32x32_U+0
0x0DA8	0x240F    MOVS	R4, #15
0x0DAA	0x4605    MOV	R5, R0
0x0DAC	0x4025    ANDS	R5, R4
0x0DAE	0x9C01    LDR	R4, [SP, #4]
0x0DB0	0x4626    MOV	R6, R4
0x0DB2	0x432E    ORRS	R6, R5
;__Lib_UART_1.c, 189 :: 		
0x0DB4	0x9C06    LDR	R4, [SP, #24]
0x0DB6	0x4625    MOV	R5, R4
0x0DB8	0x350C    ADDS	R5, #12
0x0DBA	0xB2B4    UXTH	R4, R6
0x0DBC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_1.c, 190 :: 		
L_end_UARTx_Init_Advanced:
0x0DBE	0xB009    ADD	SP, SP, #36
0x0DC0	0xBD00    POP	(R15)
0x0DC2	0xBF00    NOP
0x0DC4	0x10184002  	RCC_APB2ENR+0
0x0DC8	0x11190000  	_UART1_Write+0
0x0DCC	0x00A82000  	_UART_Wr_Ptr+0
0x0DD0	0xFFFFFFFF  	_UART1_Read+0
0x0DD4	0x00AC2000  	_UART_Rd_Ptr+0
0x0DD8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0DDC	0x00B02000  	_UART_Rdy_Ptr+0
0x0DE0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0DE4	0x00B42000  	_UART_Tx_Idle_Ptr+0
0x0DE8	0x04000000  	#1024
; end of __Lib_UART_1_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System.c, 400 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0664	0xB500    PUSH	(R14)
0x0666	0xB081    SUB	SP, SP, #4
0x0668	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System.c, 404 :: 		
0x066A	0x4619    MOV	R1, R3
0x066C	0x9100    STR	R1, [SP, #0]
0x066E	0xF7FFFEE3  BL	_Get_Fosc_kHz+0
0x0672	0x4921    LDR	R1, [PC, #132]
0x0674	0x460A    MOV	R2, R1
0x0676	0x4342    MULS	R2, R0, R2
0x0678	0x9900    LDR	R1, [SP, #0]
0x067A	0x600A    STR	R2, [R1, #0]
;__Lib_System.c, 408 :: 		
0x067C	0x491F    LDR	R1, [PC, #124]
0x067E	0x680A    LDR	R2, [R1, #0]
0x0680	0x21F0    MOVS	R1, #240
0x0682	0x4011    ANDS	R1, R2
;__Lib_System.c, 409 :: 		
0x0684	0x090A    LSRS	R2, R1, #4
;__Lib_System.c, 410 :: 		
0x0686	0x491E    LDR	R1, [PC, #120]
0x0688	0x1889    ADDS	R1, R1, R2
0x068A	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x068C	0xB2C0    UXTB	R0, R0
;__Lib_System.c, 412 :: 		
0x068E	0x1D1A    ADDS	R2, R3, #4
0x0690	0x6819    LDR	R1, [R3, #0]
0x0692	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0694	0x6011    STR	R1, [R2, #0]
;__Lib_System.c, 415 :: 		
0x0696	0x4919    LDR	R1, [PC, #100]
0x0698	0x680A    LDR	R2, [R1, #0]
0x069A	0x491A    LDR	R1, [PC, #104]
0x069C	0x4011    ANDS	R1, R2
;__Lib_System.c, 416 :: 		
0x069E	0x0A0A    LSRS	R2, R1, #8
;__Lib_System.c, 417 :: 		
0x06A0	0x4917    LDR	R1, [PC, #92]
0x06A2	0x1889    ADDS	R1, R1, R2
0x06A4	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x06A6	0xB2C8    UXTB	R0, R1
;__Lib_System.c, 419 :: 		
0x06A8	0x461A    MOV	R2, R3
0x06AA	0x3208    ADDS	R2, #8
0x06AC	0x1D19    ADDS	R1, R3, #4
0x06AE	0x6809    LDR	R1, [R1, #0]
0x06B0	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x06B2	0x6011    STR	R1, [R2, #0]
;__Lib_System.c, 422 :: 		
0x06B4	0x4914    LDR	R1, [PC, #80]
0x06B6	0x680A    LDR	R2, [R1, #0]
0x06B8	0x2101    MOVS	R1, #1
0x06BA	0x4011    ANDS	R1, R2
0x06BC	0x2900    CMP	R1, #0
0x06BE	0xD004    BEQ	L_RCC_GetClocksFrequency32
;__Lib_System.c, 423 :: 		
0x06C0	0x461A    MOV	R2, R3
0x06C2	0x320C    ADDS	R2, #12
; RCC_Clocks end address is: 12 (R3)
0x06C4	0x4911    LDR	R1, [PC, #68]
0x06C6	0x6011    STR	R1, [R2, #0]
0x06C8	0xE014    B	L_RCC_GetClocksFrequency33
L_RCC_GetClocksFrequency32:
;__Lib_System.c, 424 :: 		
; RCC_Clocks start address is: 12 (R3)
0x06CA	0x4619    MOV	R1, R3
0x06CC	0x3108    ADDS	R1, #8
0x06CE	0x680A    LDR	R2, [R1, #0]
0x06D0	0x490F    LDR	R1, [PC, #60]
0x06D2	0x428A    CMP	R2, R1
0x06D4	0xD907    BLS	L_RCC_GetClocksFrequency34
;__Lib_System.c, 425 :: 		
0x06D6	0x461A    MOV	R2, R3
0x06D8	0x320C    ADDS	R2, #12
0x06DA	0x4619    MOV	R1, R3
0x06DC	0x3108    ADDS	R1, #8
; RCC_Clocks end address is: 12 (R3)
0x06DE	0x6809    LDR	R1, [R1, #0]
0x06E0	0x0889    LSRS	R1, R1, #2
0x06E2	0x6011    STR	R1, [R2, #0]
0x06E4	0xE006    B	L_RCC_GetClocksFrequency35
L_RCC_GetClocksFrequency34:
;__Lib_System.c, 427 :: 		
; RCC_Clocks start address is: 12 (R3)
0x06E6	0x461A    MOV	R2, R3
0x06E8	0x320C    ADDS	R2, #12
0x06EA	0x4619    MOV	R1, R3
0x06EC	0x3108    ADDS	R1, #8
; RCC_Clocks end address is: 12 (R3)
0x06EE	0x6809    LDR	R1, [R1, #0]
0x06F0	0x0849    LSRS	R1, R1, #1
0x06F2	0x6011    STR	R1, [R2, #0]
L_RCC_GetClocksFrequency35:
L_RCC_GetClocksFrequency33:
;__Lib_System.c, 428 :: 		
L_end_RCC_GetClocksFrequency:
0x06F4	0xB001    ADD	SP, SP, #4
0x06F6	0xBD00    POP	(R15)
0x06F8	0x03E80000  	#1000
0x06FC	0x10044002  	RCC_CFGR+0
0x0700	0x21180000  	__Lib_System_APBAHBPrescTable+0
0x0704	0x07000000  	#1792
0x0708	0x10344002  	RCC_CR2bits+0
0x070C	0x9F8000D5  	#14000000
0x0710	0x3600016E  	#24000000
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x0438	0xB500    PUSH	(R14)
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x043A	0x4801    LDR	R0, [PC, #4]
0x043C	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x043E	0xBD00    POP	(R15)
0x0440	0x00A42000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F0xx.c, 530 :: 		
; module start address is: 0 (R0)
0x0620	0xB500    PUSH	(R14)
0x0622	0xB082    SUB	SP, SP, #8
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F0xx.c, 535 :: 		
; i start address is: 16 (R4)
0x0624	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F0xx.c, 536 :: 		
L_GPIO_Alternate_Function_Enable58:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x0626	0x00A1    LSLS	R1, R4, #2
0x0628	0x1841    ADDS	R1, R0, R1
0x062A	0x680A    LDR	R2, [R1, #0]
0x062C	0x490C    LDR	R1, [PC, #48]
0x062E	0x428A    CMP	R2, R1
0x0630	0xD013    BEQ	L_GPIO_Alternate_Function_Enable59
;__Lib_GPIO_32F0xx.c, 538 :: 		
0x0632	0x4601    MOV	R1, R0
0x0634	0x3134    ADDS	R1, #52
0x0636	0x00A3    LSLS	R3, R4, #2
0x0638	0x18C9    ADDS	R1, R1, R3
0x063A	0x6809    LDR	R1, [R1, #0]
0x063C	0x460A    MOV	R2, R1
0x063E	0x18C1    ADDS	R1, R0, R3
0x0640	0x6809    LDR	R1, [R1, #0]
0x0642	0x9000    STR	R0, [SP, #0]
0x0644	0x9401    STR	R4, [SP, #4]
0x0646	0x4608    MOV	R0, R1
0x0648	0x4611    MOV	R1, R2
0x064A	0xF7FFFEFB  BL	__Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function+0
0x064E	0x9C01    LDR	R4, [SP, #4]
0x0650	0xB2A4    UXTH	R4, R4
0x0652	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_32F0xx.c, 539 :: 		
0x0654	0x3401    ADDS	R4, #1
0x0656	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F0xx.c, 540 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0658	0xE7E5    B	L_GPIO_Alternate_Function_Enable58
L_GPIO_Alternate_Function_Enable59:
;__Lib_GPIO_32F0xx.c, 541 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x065A	0xB002    ADD	SP, SP, #8
0x065C	0xBD00    POP	(R15)
0x065E	0xBF00    NOP
0x0660	0xFFFFFFFF  	#-1
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F0xx.c, 73 :: 		
; config start address is: 4 (R1)
; afPin start address is: 0 (R0)
0x0444	0xB500    PUSH	(R14)
0x0446	0xB083    SUB	SP, SP, #12
0x0448	0x460C    MOV	R4, R1
; config end address is: 4 (R1)
; afPin end address is: 0 (R0)
; afPin start address is: 0 (R0)
; config start address is: 16 (R4)
;__Lib_GPIO_32F0xx.c, 84 :: 		
0x044A	0x22FF    MOVS	R2, #255
0x044C	0x4603    MOV	R3, R0
0x044E	0x4013    ANDS	R3, R2
0x0450	0x091A    LSRS	R2, R3, #4
; port start address is: 20 (R5)
0x0452	0x4615    MOV	R5, R2
;__Lib_GPIO_32F0xx.c, 85 :: 		
0x0454	0x220F    MOVS	R2, #15
0x0456	0x4619    MOV	R1, R3
0x0458	0x4011    ANDS	R1, R2
; pin start address is: 4 (R1)
;__Lib_GPIO_32F0xx.c, 86 :: 		
0x045A	0x0A03    LSRS	R3, R0, #8
; afPin end address is: 0 (R0)
0x045C	0x220F    MOVS	R2, #15
0x045E	0x401A    ANDS	R2, R3
; af start address is: 0 (R0)
0x0460	0x4610    MOV	R0, R2
;__Lib_GPIO_32F0xx.c, 88 :: 		
0x0462	0xE011    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function0
; port end address is: 20 (R5)
;__Lib_GPIO_32F0xx.c, 90 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function2:
;__Lib_GPIO_32F0xx.c, 92 :: 		
0x0464	0x4A20    LDR	R2, [PC, #128]
0x0466	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 93 :: 		
0x0468	0xE01A    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 95 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function3:
;__Lib_GPIO_32F0xx.c, 97 :: 		
0x046A	0x4A20    LDR	R2, [PC, #128]
0x046C	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 98 :: 		
0x046E	0xE017    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 100 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function4:
;__Lib_GPIO_32F0xx.c, 102 :: 		
0x0470	0x4A1F    LDR	R2, [PC, #124]
0x0472	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 103 :: 		
0x0474	0xE014    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 105 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function5:
;__Lib_GPIO_32F0xx.c, 107 :: 		
0x0476	0x4A1F    LDR	R2, [PC, #124]
0x0478	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 108 :: 		
0x047A	0xE011    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 110 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function6:
;__Lib_GPIO_32F0xx.c, 112 :: 		
0x047C	0x4A1E    LDR	R2, [PC, #120]
0x047E	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 113 :: 		
0x0480	0xE00E    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 115 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function7:
;__Lib_GPIO_32F0xx.c, 117 :: 		
0x0482	0x4A1E    LDR	R2, [PC, #120]
0x0484	0x9202    STR	R2, [SP, #8]
;__Lib_GPIO_32F0xx.c, 118 :: 		
0x0486	0xE00B    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1
;__Lib_GPIO_32F0xx.c, 120 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function0:
; port start address is: 20 (R5)
0x0488	0x2D00    CMP	R5, #0
0x048A	0xD0EB    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function2
0x048C	0x2D01    CMP	R5, #1
0x048E	0xD0EC    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function3
0x0490	0x2D02    CMP	R5, #2
0x0492	0xD0ED    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function4
0x0494	0x2D03    CMP	R5, #3
0x0496	0xD0EE    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function5
0x0498	0x2D04    CMP	R5, #4
0x049A	0xD0EF    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function6
0x049C	0x2D05    CMP	R5, #5
0x049E	0xD0F0    BEQ	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function7
; port end address is: 20 (R5)
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function1:
;__Lib_GPIO_32F0xx.c, 123 :: 		
0x04A0	0x2201    MOVS	R2, #1
0x04A2	0x408A    LSLS	R2, R1
0x04A4	0x9000    STR	R0, [SP, #0]
; config end address is: 16 (R4)
0x04A6	0x9101    STR	R1, [SP, #4]
0x04A8	0xB291    UXTH	R1, R2
0x04AA	0x4622    MOV	R2, R4
0x04AC	0x9802    LDR	R0, [SP, #8]
0x04AE	0xF7FFFE4F  BL	_GPIO_Config+0
0x04B2	0x9901    LDR	R1, [SP, #4]
0x04B4	0x9800    LDR	R0, [SP, #0]
;__Lib_GPIO_32F0xx.c, 126 :: 		
0x04B6	0x9A02    LDR	R2, [SP, #8]
0x04B8	0x4615    MOV	R5, R2
0x04BA	0x3520    ADDS	R5, #32
; altFcnBase start address is: 20 (R5)
;__Lib_GPIO_32F0xx.c, 127 :: 		
0x04BC	0x2907    CMP	R1, #7
0x04BE	0xD902    BLS	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function80
;__Lib_GPIO_32F0xx.c, 129 :: 		
0x04C0	0x3504    ADDS	R5, #4
;__Lib_GPIO_32F0xx.c, 130 :: 		
0x04C2	0x3908    SUBS	R1, #8
; pin end address is: 4 (R1)
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_32F0xx.c, 131 :: 		
0x04C4	0xE7FF    B	L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function8
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function80:
;__Lib_GPIO_32F0xx.c, 127 :: 		
;__Lib_GPIO_32F0xx.c, 131 :: 		
L___Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function8:
;__Lib_GPIO_32F0xx.c, 133 :: 		
; pin start address is: 4 (R1)
; altFcnBase start address is: 20 (R5)
0x04C6	0x008C    LSLS	R4, R1, #2
0x04C8	0x230F    MOVS	R3, #15
0x04CA	0x461A    MOV	R2, R3
0x04CC	0x40A2    LSLS	R2, R4
0x04CE	0x43D3    MVN	R3, R2
0x04D0	0x682A    LDR	R2, [R5, #0]
0x04D2	0x401A    ANDS	R2, R3
0x04D4	0x602A    STR	R2, [R5, #0]
;__Lib_GPIO_32F0xx.c, 135 :: 		
0x04D6	0x008A    LSLS	R2, R1, #2
; pin end address is: 4 (R1)
0x04D8	0x4603    MOV	R3, R0
0x04DA	0x4093    LSLS	R3, R2
; af end address is: 0 (R0)
0x04DC	0x682A    LDR	R2, [R5, #0]
0x04DE	0x431A    ORRS	R2, R3
0x04E0	0x602A    STR	R2, [R5, #0]
; altFcnBase end address is: 20 (R5)
;__Lib_GPIO_32F0xx.c, 136 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x04E2	0xB003    ADD	SP, SP, #12
0x04E4	0xBD00    POP	(R15)
0x04E6	0xBF00    NOP
0x04E8	0x00004800  	#1207959552
0x04EC	0x04004800  	#1207960576
0x04F0	0x08004800  	#1207961600
0x04F4	0x0C004800  	#1207962624
0x04F8	0x10004800  	#1207963648
0x04FC	0x14004800  	#1207964672
; end of __Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function
__Div_32x32_U:
;__Lib_Math.c, 267 :: 		
0x05DC	0xB081    SUB	SP, SP, #4
;__Lib_Math.c, 269 :: 		
0x05DE	0xB43A    PUSH	(R1, R3, R4, R5)
;__Lib_Math.c, 272 :: 		
0x05E0	0x0014    MOVS	R4, R2
;__Lib_Math.c, 273 :: 		
0x05E2	0xD102    BNE	_Div_32x32_U_Lab_3
;__Lib_Math.c, 275 :: 		
0x05E4	0x4602    MOV	R2, R0
;__Lib_Math.c, 276 :: 		
0x05E6	0x480C    LDR	R0, [PC, #48]
;__Lib_Math.c, 277 :: 		
0x05E8	0xE013    B	_Div_32x32_U_Lab_end
;__Lib_Math.c, 281 :: 		
_Div_32x32_U_Lab_3:
;__Lib_Math.c, 282 :: 		
0x05EA	0x4613    MOV	R3, R2
;__Lib_Math.c, 283 :: 		
0x05EC	0x4602    MOV	R2, R0
;__Lib_Math.c, 284 :: 		
0x05EE	0x2000    MOVS	R0, #0
;__Lib_Math.c, 285 :: 		
0x05F0	0x2120    MOVS	R1, #32
;__Lib_Math.c, 286 :: 		
0x05F2	0x2401    MOVS	R4, #1
;__Lib_Math.c, 287 :: 		
0x05F4	0xE009    B	_Div_32x32_U_Lab_1
;__Lib_Math.c, 289 :: 		
_Div_32x32_U_Lab_2:
;__Lib_Math.c, 290 :: 		
0x05F6	0x4615    MOV	R5, R2
;__Lib_Math.c, 291 :: 		
0x05F8	0x40CD    LSRS	R5, R1
;__Lib_Math.c, 292 :: 		
0x05FA	0x429D    CMP	R5, R3
;__Lib_Math.c, 293 :: 		
0x05FC	0xD305    BCC	_Div_32x32_U_Lab_1
;__Lib_Math.c, 294 :: 		
0x05FE	0x461D    MOV	R5, R3
;__Lib_Math.c, 295 :: 		
0x0600	0x408D    LSLS	R5, R1
;__Lib_Math.c, 296 :: 		
0x0602	0x1B52    SUBS	R2, R2, R5
;__Lib_Math.c, 297 :: 		
0x0604	0x4625    MOV	R5, R4
;__Lib_Math.c, 298 :: 		
0x0606	0x408D    LSLS	R5, R1
;__Lib_Math.c, 299 :: 		
0x0608	0x1940    ADDS	R0, R0, R5
;__Lib_Math.c, 301 :: 		
_Div_32x32_U_Lab_1:
;__Lib_Math.c, 302 :: 		
0x060A	0x460D    MOV	R5, R1
;__Lib_Math.c, 303 :: 		
0x060C	0x1E49    SUBS	R1, R1, #1
;__Lib_Math.c, 304 :: 		
0x060E	0x2D00    CMP	R5, #0
;__Lib_Math.c, 305 :: 		
0x0610	0xDCF1    BGT	_Div_32x32_U_Lab_2
;__Lib_Math.c, 307 :: 		
_Div_32x32_U_Lab_end:
;__Lib_Math.c, 308 :: 		
0x0612	0xBC3A    POP	(R1, R3, R4, R5)
;__Lib_Math.c, 309 :: 		
0x0614	0xE002    B	#4
0x0616	0xBF00    NOP
0x0618	0xFFFFFFFF  	#-1
;__Lib_Math.c, 310 :: 		
L_end__Div_32x32_U:
0x061C	0xB001    ADD	SP, SP, #4
0x061E	0x4770    BX	LR
; end of __Div_32x32_U
_Soft_I2C_Init:
;__Lib_SoftI2C.c, 25 :: 		
0x12A0	0xB500    PUSH	(R14)
;__Lib_SoftI2C.c, 30 :: 		
0x12A2	0x4802    LDR	R0, [PC, #8]
;__Lib_SoftI2C.c, 31 :: 		
0x12A4	0x4902    LDR	R1, [PC, #8]
;__Lib_SoftI2C.c, 32 :: 		
0x12A6	0x0409    LSLS	R1, R1, #16
;__Lib_SoftI2C.c, 33 :: 		
0x12A8	0x4308    ORRS	R0, R1
;__Lib_SoftI2C.c, 34 :: 		
0x12AA	0xE004    B	#8
0x12AC	0x00100000  	#lo_addr(Soft_I2C_Sda_Input+0)
0x12B0	0x48000000  	#hi_addr(Soft_I2C_Sda_Input+0)
0x12B4	0xBF00    NOP
;__Lib_SoftI2C.c, 35 :: 		
0x12B6	0xF7FEFF03  BL	_GPIO_Clk_Enable+0
;__Lib_SoftI2C.c, 40 :: 		
0x12BA	0x4802    LDR	R0, [PC, #8]
;__Lib_SoftI2C.c, 41 :: 		
0x12BC	0x4902    LDR	R1, [PC, #8]
;__Lib_SoftI2C.c, 42 :: 		
0x12BE	0x0409    LSLS	R1, R1, #16
;__Lib_SoftI2C.c, 43 :: 		
0x12C0	0x4308    ORRS	R0, R1
;__Lib_SoftI2C.c, 44 :: 		
0x12C2	0xE004    B	#8
0x12C4	0x00100000  	#lo_addr(Soft_I2C_Scl_Input+0)
0x12C8	0x48000000  	#hi_addr(Soft_I2C_Scl_Input+0)
0x12CC	0xBF00    NOP
;__Lib_SoftI2C.c, 45 :: 		
0x12CE	0xF7FEFEF7  BL	_GPIO_Clk_Enable+0
;__Lib_SoftI2C.c, 47 :: 		
0x12D2	0x4A21    LDR	R2, [PC, #132]
0x12D4	0x6810    LDR	R0, [R2, #0]
0x12D6	0x2101    MOVS	R1, #1
0x12D8	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Output+0)
0x12DA	0x4308    ORRS	R0, R1
0x12DC	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 48 :: 		
0x12DE	0x4A1F    LDR	R2, [PC, #124]
0x12E0	0x6810    LDR	R0, [R2, #0]
0x12E2	0x2101    MOVS	R1, #1
0x12E4	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Output+0)
0x12E6	0x4308    ORRS	R0, R1
0x12E8	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 55 :: 		
0x12EA	0x4803    LDR	R0, [PC, #12]
;__Lib_SoftI2C.c, 56 :: 		
0x12EC	0x4903    LDR	R1, [PC, #12]
;__Lib_SoftI2C.c, 57 :: 		
0x12EE	0x0409    LSLS	R1, R1, #16
;__Lib_SoftI2C.c, 58 :: 		
0x12F0	0x4308    ORRS	R0, R1
;__Lib_SoftI2C.c, 59 :: 		
0x12F2	0x2101    MOVS	R1, #1
;__Lib_SoftI2C.c, 60 :: 		
0x12F4	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Input+0)
;__Lib_SoftI2C.c, 61 :: 		
0x12F6	0xE004    B	#8
0x12F8	0x00100000  	#lo_addr(Soft_I2C_Sda_Input+0)
0x12FC	0x48000000  	#hi_addr(Soft_I2C_Sda_Input+0)
0x1300	0xBF00    NOP
;__Lib_SoftI2C.c, 62 :: 		
0x1302	0x4A17    LDR	R2, [PC, #92]
0x1304	0xB289    UXTH	R1, R1
0x1306	0xF7FEFF23  BL	_GPIO_Config+0
;__Lib_SoftI2C.c, 68 :: 		
0x130A	0x4803    LDR	R0, [PC, #12]
;__Lib_SoftI2C.c, 69 :: 		
0x130C	0x4903    LDR	R1, [PC, #12]
;__Lib_SoftI2C.c, 70 :: 		
0x130E	0x0409    LSLS	R1, R1, #16
;__Lib_SoftI2C.c, 71 :: 		
0x1310	0x4308    ORRS	R0, R1
;__Lib_SoftI2C.c, 72 :: 		
0x1312	0x2101    MOVS	R1, #1
;__Lib_SoftI2C.c, 73 :: 		
0x1314	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
;__Lib_SoftI2C.c, 74 :: 		
0x1316	0xE004    B	#8
0x1318	0x00100000  	#lo_addr(Soft_I2C_Scl_Input+0)
0x131C	0x48000000  	#hi_addr(Soft_I2C_Scl_Input+0)
0x1320	0xBF00    NOP
;__Lib_SoftI2C.c, 75 :: 		
0x1322	0x4A0F    LDR	R2, [PC, #60]
0x1324	0xB289    UXTH	R1, R1
0x1326	0xF7FEFF13  BL	_GPIO_Config+0
;__Lib_SoftI2C.c, 79 :: 		
0x132A	0x4A0E    LDR	R2, [PC, #56]
0x132C	0x7810    LDRB	R0, [R2, #0]
0x132E	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x1330	0x4388    BICS	R0, R1
0x1332	0x7010    STRB	R0, [R2, #0]
;__Lib_SoftI2C.c, 80 :: 		
L_Soft_I2C_Init0:
0x1334	0x480C    LDR	R0, [PC, #48]
0x1336	0x6801    LDR	R1, [R0, #0]
0x1338	0x2001    MOVS	R0, #1
0x133A	0x0040    LSLS	R0, R0, BitPos(Soft_I2C_Scl_Input+0)
0x133C	0x4008    ANDS	R0, R1
0x133E	0x0840    LSRS	R0, R0, BitPos(Soft_I2C_Scl_Input+0)
0x1340	0x2800    CMP	R0, #0
0x1342	0xD107    BNE	L_Soft_I2C_Init1
;__Lib_SoftI2C.c, 81 :: 		
0x1344	0x4807    LDR	R0, [PC, #28]
0x1346	0x7801    LDRB	R1, [R0, #0]
0x1348	0x2001    MOVS	R0, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x134A	0x4008    ANDS	R0, R1
0x134C	0x2800    CMP	R0, #0
0x134E	0xD000    BEQ	L_Soft_I2C_Init2
;__Lib_SoftI2C.c, 82 :: 		
0x1350	0xE000    B	L_Soft_I2C_Init1
L_Soft_I2C_Init2:
0x1352	0xE7EF    B	L_Soft_I2C_Init0
L_Soft_I2C_Init1:
;__Lib_SoftI2C.c, 84 :: 		
L_end_Soft_I2C_Init:
0x1354	0xBD00    POP	(R15)
0x1356	0xBF00    NOP
0x1358	0x00144800  	Soft_I2C_Sda_Output+0
0x135C	0x00144800  	Soft_I2C_Scl_Output+0
0x1360	0x00240008  	#524324
0x1364	0x00A22000  	__Lib_SoftI2C___StopWaiting+0
0x1368	0x00104800  	Soft_I2C_Scl_Input+0
; end of _Soft_I2C_Init
_UART1_Write_Text:
;__Lib_UART_1.c, 58 :: 		
; uart_text start address is: 0 (R0)
0x1290	0xB500    PUSH	(R14)
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_1.c, 59 :: 		
0x1292	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x1294	0x4801    LDR	R0, [PC, #4]
0x1296	0xF7FFFC95  BL	__Lib_UART_1_UARTx_Write_Text+0
;__Lib_UART_1.c, 60 :: 		
L_end_UART1_Write_Text:
0x129A	0xBD00    POP	(R15)
0x129C	0x38004001  	USART1_CR1+0
; end of _UART1_Write_Text
__Lib_UART_1_UARTx_Write_Text:
;__Lib_UART_1.c, 47 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0BC4	0xB500    PUSH	(R14)
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_1.c, 48 :: 		
; counter start address is: 24 (R6)
0x0BC6	0x2600    MOVS	R6, #0
;__Lib_UART_1.c, 50 :: 		
0x0BC8	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0BCA	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0BCC	0x4605    MOV	R5, R0
0x0BCE	0xB2D8    UXTB	R0, R3
0x0BD0	0x460C    MOV	R4, R1
;__Lib_UART_1.c, 51 :: 		
L___Lib_UART_1_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0BD2	0x2800    CMP	R0, #0
0x0BD4	0xD00A    BEQ	L___Lib_UART_1_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_1.c, 52 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0BD6	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0BD8	0x4628    MOV	R0, R5
0x0BDA	0xF000F83F  BL	__Lib_UART_1_UARTx_Write+0
;__Lib_UART_1.c, 53 :: 		
0x0BDE	0x1C72    ADDS	R2, R6, #1
0x0BE0	0xB2D2    UXTB	R2, R2
0x0BE2	0xB2D6    UXTB	R6, R2
;__Lib_UART_1.c, 54 :: 		
0x0BE4	0x18A2    ADDS	R2, R4, R2
0x0BE6	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0BE8	0xB2D0    UXTB	R0, R2
;__Lib_UART_1.c, 55 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0BEA	0xE7F2    B	L___Lib_UART_1_UARTx_Write_Text2
L___Lib_UART_1_UARTx_Write_Text3:
;__Lib_UART_1.c, 56 :: 		
L_end_UARTx_Write_Text:
0x0BEC	0xBD00    POP	(R15)
; end of __Lib_UART_1_UARTx_Write_Text
__Lib_UART_1_UARTx_Write:
;__Lib_UART_1.c, 37 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0C5C	0xB500    PUSH	(R14)
0x0C5E	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0C60	0x9100    STR	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0C62	0x4601    MOV	R1, R0
0x0C64	0x9800    LDR	R0, [SP, #0]
0x0C66	0xB280    UXTH	R0, R0
;__Lib_UART_1.c, 38 :: 		
L___Lib_UART_1_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0C68	0x460A    MOV	R2, R1
0x0C6A	0x321C    ADDS	R2, #28
0x0C6C	0x6813    LDR	R3, [R2, #0]
0x0C6E	0x2280    MOVS	R2, #128
0x0C70	0x401A    ANDS	R2, R3
0x0C72	0x09D2    LSRS	R2, R2, #7
0x0C74	0x2A00    CMP	R2, #0
0x0C76	0xD100    BNE	L___Lib_UART_1_UARTx_Write1
;__Lib_UART_1.c, 39 :: 		
0x0C78	0xE7F6    B	L___Lib_UART_1_UARTx_Write0
L___Lib_UART_1_UARTx_Write1:
;__Lib_UART_1.c, 40 :: 		
0x0C7A	0x460A    MOV	R2, R1
0x0C7C	0x3228    ADDS	R2, #40
; UART_Base end address is: 4 (R1)
0x0C7E	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_1.c, 41 :: 		
L_end_UARTx_Write:
0x0C80	0xB001    ADD	SP, SP, #4
0x0C82	0xBD00    POP	(R15)
; end of __Lib_UART_1_UARTx_Write
_ByteToStr:
;__Lib_Conversions.c, 82 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1230	0xB500    PUSH	(R14)
0x1232	0xB082    SUB	SP, SP, #8
0x1234	0x460A    MOV	R2, R1
0x1236	0xB2C1    UXTB	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 85 :: 		
; DigitPos start address is: 0 (R0)
0x1238	0x2000    MOVS	R0, #0
; output end address is: 8 (R2)
; DigitPos end address is: 0 (R0)
; input end address is: 4 (R1)
0x123A	0x4616    MOV	R6, R2
L_ByteToStr0:
; DigitPos start address is: 0 (R0)
; output start address is: 24 (R6)
; input start address is: 4 (R1)
0x123C	0x2803    CMP	R0, #3
0x123E	0xD205    BCS	L_ByteToStr1
;__Lib_Conversions.c, 86 :: 		
0x1240	0x1833    ADDS	R3, R6, R0
0x1242	0x2220    MOVS	R2, #32
0x1244	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 85 :: 		
0x1246	0x3001    ADDS	R0, #1
0x1248	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 86 :: 		
0x124A	0xE7F7    B	L_ByteToStr0
L_ByteToStr1:
;__Lib_Conversions.c, 88 :: 		
0x124C	0x1833    ADDS	R3, R6, R0
0x124E	0x2200    MOVS	R2, #0
0x1250	0x701A    STRB	R2, [R3, #0]
0x1252	0x1E47    SUBS	R7, R0, #1
0x1254	0xB2FF    UXTB	R7, R7
; DigitPos end address is: 0 (R0)
; DigitPos start address is: 28 (R7)
; output end address is: 24 (R6)
; DigitPos end address is: 28 (R7)
;__Lib_Conversions.c, 90 :: 		
L_ByteToStr3:
;__Lib_Conversions.c, 91 :: 		
; DigitPos start address is: 28 (R7)
; input start address is: 4 (R1)
; output start address is: 24 (R6)
0x1256	0x19F2    ADDS	R2, R6, R7
0x1258	0x9201    STR	R2, [SP, #4]
0x125A	0x220A    MOVS	R2, #10
0x125C	0x9100    STR	R1, [SP, #0]
0x125E	0xB2C8    UXTB	R0, R1
0x1260	0xF7FFF9BC  BL	__Div_32x32_U+0
0x1264	0x4610    MOV	R0, R2
0x1266	0xB2C0    UXTB	R0, R0
0x1268	0x9900    LDR	R1, [SP, #0]
0x126A	0xB2C9    UXTB	R1, R1
0x126C	0x4603    MOV	R3, R0
0x126E	0x3330    ADDS	R3, #48
0x1270	0x9A01    LDR	R2, [SP, #4]
0x1272	0x7013    STRB	R3, [R2, #0]
;__Lib_Conversions.c, 92 :: 		
0x1274	0x220A    MOVS	R2, #10
0x1276	0xB2C8    UXTB	R0, R1
0x1278	0xF7FFF9B0  BL	__Div_32x32_U+0
0x127C	0xB2C0    UXTB	R0, R0
0x127E	0xB2C1    UXTB	R1, R0
; input end address is: 4 (R1)
;__Lib_Conversions.c, 93 :: 		
0x1280	0x2800    CMP	R0, #0
0x1282	0xD100    BNE	L_ByteToStr5
; output end address is: 24 (R6)
; input end address is: 4 (R1)
; DigitPos end address is: 28 (R7)
;__Lib_Conversions.c, 94 :: 		
0x1284	0xE002    B	L_ByteToStr4
L_ByteToStr5:
;__Lib_Conversions.c, 95 :: 		
; DigitPos start address is: 28 (R7)
; input start address is: 4 (R1)
; output start address is: 24 (R6)
0x1286	0x1E7F    SUBS	R7, R7, #1
0x1288	0xB2FF    UXTB	R7, R7
;__Lib_Conversions.c, 96 :: 		
; output end address is: 24 (R6)
; input end address is: 4 (R1)
; DigitPos end address is: 28 (R7)
0x128A	0xE7E4    B	L_ByteToStr3
L_ByteToStr4:
;__Lib_Conversions.c, 97 :: 		
L_end_ByteToStr:
0x128C	0xB002    ADD	SP, SP, #8
0x128E	0xBD00    POP	(R15)
; end of _ByteToStr
_LongWordToStr:
;__Lib_Conversions.c, 274 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1128	0xB500    PUSH	(R14)
0x112A	0xB082    SUB	SP, SP, #8
0x112C	0x460A    MOV	R2, R1
0x112E	0x4601    MOV	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 277 :: 		
; len start address is: 0 (R0)
0x1130	0x2000    MOVS	R0, #0
; output end address is: 8 (R2)
; len end address is: 0 (R0)
; input end address is: 4 (R1)
0x1132	0x4617    MOV	R7, R2
L_LongWordToStr52:
; len start address is: 0 (R0)
; output start address is: 28 (R7)
; input start address is: 4 (R1)
0x1134	0x280A    CMP	R0, #10
0x1136	0xD205    BCS	L_LongWordToStr53
;__Lib_Conversions.c, 278 :: 		
0x1138	0x183B    ADDS	R3, R7, R0
0x113A	0x2220    MOVS	R2, #32
0x113C	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 277 :: 		
0x113E	0x3001    ADDS	R0, #1
0x1140	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 278 :: 		
0x1142	0xE7F7    B	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c, 279 :: 		
0x1144	0x183B    ADDS	R3, R7, R0
0x1146	0x2200    MOVS	R2, #0
0x1148	0x701A    STRB	R2, [R3, #0]
0x114A	0x1E46    SUBS	R6, R0, #1
0x114C	0xB2B6    UXTH	R6, R6
; len end address is: 0 (R0)
; len start address is: 24 (R6)
; output end address is: 28 (R7)
; len end address is: 24 (R6)
;__Lib_Conversions.c, 281 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c, 282 :: 		
; len start address is: 24 (R6)
; input start address is: 4 (R1)
; output start address is: 28 (R7)
0x114E	0x19BA    ADDS	R2, R7, R6
0x1150	0x9201    STR	R2, [SP, #4]
0x1152	0x220A    MOVS	R2, #10
0x1154	0x9100    STR	R1, [SP, #0]
0x1156	0x4608    MOV	R0, R1
0x1158	0xF7FFFA40  BL	__Div_32x32_U+0
0x115C	0x4610    MOV	R0, R2
0x115E	0x9900    LDR	R1, [SP, #0]
0x1160	0x4603    MOV	R3, R0
0x1162	0x3330    ADDS	R3, #48
0x1164	0x9A01    LDR	R2, [SP, #4]
0x1166	0x7013    STRB	R3, [R2, #0]
;__Lib_Conversions.c, 283 :: 		
0x1168	0x220A    MOVS	R2, #10
0x116A	0x4608    MOV	R0, R1
0x116C	0xF7FFFA36  BL	__Div_32x32_U+0
0x1170	0x4601    MOV	R1, R0
; input end address is: 4 (R1)
;__Lib_Conversions.c, 284 :: 		
0x1172	0x2800    CMP	R0, #0
0x1174	0xD100    BNE	L_LongWordToStr57
; output end address is: 28 (R7)
; input end address is: 4 (R1)
; len end address is: 24 (R6)
;__Lib_Conversions.c, 285 :: 		
0x1176	0xE002    B	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c, 286 :: 		
; len start address is: 24 (R6)
; input start address is: 4 (R1)
; output start address is: 28 (R7)
0x1178	0x1E76    SUBS	R6, R6, #1
0x117A	0xB2B6    UXTH	R6, R6
;__Lib_Conversions.c, 287 :: 		
; output end address is: 28 (R7)
; input end address is: 4 (R1)
; len end address is: 24 (R6)
0x117C	0xE7E7    B	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c, 288 :: 		
L_end_LongWordToStr:
0x117E	0xB002    ADD	SP, SP, #8
0x1180	0xBD00    POP	(R15)
; end of _LongWordToStr
_RegistersUpdate:
;PhotoTransdModbusV2.c, 222 :: 		void RegistersUpdate(){//обновление значений в регистрах
0x1184	0xB500    PUSH	(R14)
;PhotoTransdModbusV2.c, 223 :: 		unsigned int ttt=0;//счетчик
;PhotoTransdModbusV2.c, 225 :: 		for (ttt=0;ttt<=16;ttt++){ModbusRegister[ttt]=0;};
; ttt start address is: 8 (R2)
0x1186	0x2200    MOVS	R2, #0
; ttt end address is: 8 (R2)
L_RegistersUpdate20:
; ttt start address is: 8 (R2)
0x1188	0x2A10    CMP	R2, #16
0x118A	0xD807    BHI	L_RegistersUpdate21
0x118C	0x0051    LSLS	R1, R2, #1
0x118E	0x481B    LDR	R0, [PC, #108]
0x1190	0x1841    ADDS	R1, R0, R1
0x1192	0x2000    MOVS	R0, #0
0x1194	0x8008    STRH	R0, [R1, #0]
0x1196	0x3201    ADDS	R2, #1
0x1198	0xB292    UXTH	R2, R2
; ttt end address is: 8 (R2)
0x119A	0xE7F5    B	L_RegistersUpdate20
L_RegistersUpdate21:
;PhotoTransdModbusV2.c, 227 :: 		ModbusRegister[cmd_ident]=resp_cmd_ident;
0x119C	0x2101    MOVS	R1, #1
0x119E	0x4817    LDR	R0, [PC, #92]
0x11A0	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 228 :: 		ModbusRegister[cmd_softw_version]=resp_cmd_softw_version;
0x11A2	0x2101    MOVS	R1, #1
0x11A4	0x4816    LDR	R0, [PC, #88]
0x11A6	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 229 :: 		ModbusRegister[cmd_hardw_version]=resp_cmd_hardw_version;
0x11A8	0x2102    MOVS	R1, #2
0x11AA	0x4816    LDR	R0, [PC, #88]
0x11AC	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 230 :: 		ModbusRegister[cmd_dev_adress]=dev_adress;
0x11AE	0x4816    LDR	R0, [PC, #88]
0x11B0	0x7801    LDRB	R1, [R0, #0]
0x11B2	0x4816    LDR	R0, [PC, #88]
0x11B4	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 234 :: 		ModbusRegister[cmd_baudrate]=baudrate;
0x11B6	0x4816    LDR	R0, [PC, #88]
0x11B8	0x8801    LDRH	R1, [R0, #0]
0x11BA	0x4816    LDR	R0, [PC, #88]
0x11BC	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 236 :: 		ModbusRegister[cmd_result]=ReadADC();
0x11BE	0xF7FFFD61  BL	_ReadADC+0
0x11C2	0x4915    LDR	R1, [PC, #84]
0x11C4	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 238 :: 		if (Strobe) {ModbusRegister[cmd_dev_mode]=dev_mode_on_strobe;}//есть строб
0x11C6	0x4815    LDR	R0, [PC, #84]
0x11C8	0x6801    LDR	R1, [R0, #0]
0x11CA	0x2040    MOVS	R0, #64
0x11CC	0x4008    ANDS	R0, R1
0x11CE	0x0980    LSRS	R0, R0, #6
0x11D0	0x2800    CMP	R0, #0
0x11D2	0xD003    BEQ	L_RegistersUpdate23
0x11D4	0x2101    MOVS	R1, #1
0x11D6	0x4812    LDR	R0, [PC, #72]
0x11D8	0x8001    STRH	R1, [R0, #0]
0x11DA	0xE002    B	L_RegistersUpdate24
L_RegistersUpdate23:
;PhotoTransdModbusV2.c, 239 :: 		else {ModbusRegister[cmd_dev_mode]=dev_mode_on_demand;}//по запросу
0x11DC	0x2100    MOVS	R1, #0
0x11DE	0x4810    LDR	R0, [PC, #64]
0x11E0	0x8001    STRH	R1, [R0, #0]
L_RegistersUpdate24:
;PhotoTransdModbusV2.c, 244 :: 		ModbusRegister[cmd_counter]=iii;
0x11E2	0x4A10    LDR	R2, [PC, #64]
0x11E4	0x8811    LDRH	R1, [R2, #0]
0x11E6	0x4810    LDR	R0, [PC, #64]
0x11E8	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 245 :: 		iii++;
0x11EA	0x4610    MOV	R0, R2
0x11EC	0x8800    LDRH	R0, [R0, #0]
0x11EE	0x3001    ADDS	R0, #1
0x11F0	0x8010    STRH	R0, [R2, #0]
;PhotoTransdModbusV2.c, 246 :: 		ModbusRegister[cmd_command]=0;
0x11F2	0x2100    MOVS	R1, #0
0x11F4	0x480D    LDR	R0, [PC, #52]
0x11F6	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 247 :: 		}
L_end_RegistersUpdate:
0x11F8	0xBD00    POP	(R15)
0x11FA	0xBF00    NOP
0x11FC	0x00702000  	_ModbusRegister+0
0x1200	0x00722000  	_ModbusRegister+2
0x1204	0x00742000  	_ModbusRegister+4
0x1208	0x00002000  	_dev_adress+0
0x120C	0x00762000  	_ModbusRegister+6
0x1210	0x00022000  	_baudrate+0
0x1214	0x00782000  	_ModbusRegister+8
0x1218	0x007A2000  	_ModbusRegister+10
0x121C	0x00104800  	GPIOA_IDR+0
0x1220	0x007C2000  	_ModbusRegister+12
0x1224	0x00082000  	_iii+0
0x1228	0x007E2000  	_ModbusRegister+14
0x122C	0x00802000  	_ModbusRegister+16
; end of _RegistersUpdate
_ReadADC:
;PhotoTransdModbusV2.c, 162 :: 		int ReadADC(){//чтение АЦП
0x0C84	0xB500    PUSH	(R14)
;PhotoTransdModbusV2.c, 164 :: 		Soft_I2C_Start();
0x0C86	0xF7FFFC67  BL	_Soft_I2C_Start+0
;PhotoTransdModbusV2.c, 165 :: 		Soft_I2C_Write(ADS1110Adress);//адрес для чтения
0x0C8A	0x2090    MOVS	R0, #144
0x0C8C	0xF7FFFE8E  BL	_Soft_I2C_Write+0
;PhotoTransdModbusV2.c, 167 :: 		Soft_I2C_Start();
0x0C90	0xF7FFFC62  BL	_Soft_I2C_Start+0
;PhotoTransdModbusV2.c, 168 :: 		Soft_I2C_Write(ADS1110Adress+1);//адрес для чтения
0x0C94	0x2091    MOVS	R0, #145
0x0C96	0xF7FFFE89  BL	_Soft_I2C_Write+0
;PhotoTransdModbusV2.c, 169 :: 		Bait1 = Soft_I2C_Read(1);
0x0C9A	0x2001    MOVS	R0, #1
0x0C9C	0xF7FFFD78  BL	_Soft_I2C_Read+0
0x0CA0	0x490A    LDR	R1, [PC, #40]
0x0CA2	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 170 :: 		Bait2 = Soft_I2C_Read(1);
0x0CA4	0x2001    MOVS	R0, #1
0x0CA6	0xF7FFFD73  BL	_Soft_I2C_Read+0
0x0CAA	0x4909    LDR	R1, [PC, #36]
0x0CAC	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 171 :: 		Bait3 = Soft_I2C_Read(0);
0x0CAE	0x2000    MOVS	R0, #0
0x0CB0	0xF7FFFD6E  BL	_Soft_I2C_Read+0
0x0CB4	0x4907    LDR	R1, [PC, #28]
0x0CB6	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 172 :: 		Soft_I2C_Stop();
0x0CB8	0xF7FFFE10  BL	_Soft_I2C_Stop+0
;PhotoTransdModbusV2.c, 174 :: 		return (int)(Bait1*0x100+Bait2);
0x0CBC	0x4803    LDR	R0, [PC, #12]
0x0CBE	0x7800    LDRB	R0, [R0, #0]
0x0CC0	0x0201    LSLS	R1, R0, #8
0x0CC2	0xB209    SXTH	R1, R1
0x0CC4	0x4802    LDR	R0, [PC, #8]
0x0CC6	0x7800    LDRB	R0, [R0, #0]
0x0CC8	0x1808    ADDS	R0, R1, R0
;PhotoTransdModbusV2.c, 204 :: 		}
L_end_ReadADC:
0x0CCA	0xBD00    POP	(R15)
0x0CCC	0x00012000  	_Bait1+0
0x0CD0	0x00A02000  	_Bait2+0
0x0CD4	0x00A12000  	_Bait3+0
; end of _ReadADC
_Soft_I2C_Start:
;__Lib_SoftI2C.c, 145 :: 		
0x0558	0xB500    PUSH	(R14)
;__Lib_SoftI2C.c, 146 :: 		
0x055A	0x4A12    LDR	R2, [PC, #72]
0x055C	0x6810    LDR	R0, [R2, #0]
0x055E	0x2101    MOVS	R1, #1
0x0560	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Output+0)
0x0562	0x4308    ORRS	R0, R1
0x0564	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 148 :: 		
0x0566	0xF7FFFF5D  BL	_Delay_1us+0
0x056A	0xF7FFFF5B  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 150 :: 		
0x056E	0x4A0E    LDR	R2, [PC, #56]
0x0570	0x6810    LDR	R0, [R2, #0]
0x0572	0x2101    MOVS	R1, #1
0x0574	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Output+0)
0x0576	0x4308    ORRS	R0, R1
0x0578	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 152 :: 		
0x057A	0xF7FFFF53  BL	_Delay_1us+0
0x057E	0xF7FFFF51  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 154 :: 		
0x0582	0x4A08    LDR	R2, [PC, #32]
0x0584	0x6810    LDR	R0, [R2, #0]
0x0586	0x2101    MOVS	R1, #1
0x0588	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Output+0)
0x058A	0x4388    BICS	R0, R1
0x058C	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 156 :: 		
0x058E	0xF7FFFF49  BL	_Delay_1us+0
0x0592	0xF7FFFF47  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 158 :: 		
0x0596	0x4A04    LDR	R2, [PC, #16]
0x0598	0x6810    LDR	R0, [R2, #0]
0x059A	0x2101    MOVS	R1, #1
0x059C	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Output+0)
0x059E	0x4388    BICS	R0, R1
0x05A0	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 161 :: 		
L_end_Soft_I2C_Start:
0x05A2	0xBD00    POP	(R15)
0x05A4	0x00144800  	Soft_I2C_Sda_Output+0
0x05A8	0x00144800  	Soft_I2C_Scl_Output+0
; end of _Soft_I2C_Start
_Delay_1us:
;__Lib_Delays.c, 13 :: 		void Delay_1us() {
;__Lib_Delays.c, 14 :: 		Delay_us(1);
0x0424	0x4F02    LDR	R7, [PC, #8]
0x0426	0xBF00    NOP
L_Delay_1us0:
0x0428	0x1E7F    SUBS	R7, R7, #1
0x042A	0xD1FD    BNE	L_Delay_1us0
0x042C	0xE002    B	#4
0x042E	0xBF00    NOP
0x0430	0x00070000  	#7
;__Lib_Delays.c, 15 :: 		}
L_end_Delay_1us:
0x0434	0x4770    BX	LR
; end of _Delay_1us
_Soft_I2C_Write:
;__Lib_SoftI2C.c, 189 :: 		
; data_ start address is: 0 (R0)
0x09AC	0xB500    PUSH	(R14)
0x09AE	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
; data_ start address is: 4 (R1)
;__Lib_SoftI2C.c, 190 :: 		
;__Lib_SoftI2C.c, 192 :: 		
; temp start address is: 0 (R0)
0x09B0	0x2080    MOVS	R0, #128
; data_ end address is: 4 (R1)
; temp end address is: 0 (R0)
0x09B2	0xB2CC    UXTB	R4, R1
;__Lib_SoftI2C.c, 194 :: 		
L_Soft_I2C_Write16:
; temp start address is: 0 (R0)
; data_ start address is: 16 (R4)
0x09B4	0x2800    CMP	R0, #0
0x09B6	0xD045    BEQ	L_Soft_I2C_Write17
;__Lib_SoftI2C.c, 195 :: 		
0x09B8	0xF7FFFD34  BL	_Delay_1us+0
0x09BC	0xF7FFFD32  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 196 :: 		
0x09C0	0xF7FFFD30  BL	_Delay_1us+0
0x09C4	0xF7FFFD2E  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 198 :: 		
0x09C8	0x4B59    LDR	R3, [PC, #356]
0x09CA	0x6819    LDR	R1, [R3, #0]
0x09CC	0x2201    MOVS	R2, #1
0x09CE	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x09D0	0x4391    BICS	R1, R2
0x09D2	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 200 :: 		
0x09D4	0xF7FFFD26  BL	_Delay_1us+0
0x09D8	0xF7FFFD24  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 202 :: 		
0x09DC	0x4621    MOV	R1, R4
0x09DE	0x4001    ANDS	R1, R0
0x09E0	0xB289    UXTH	R1, R1
0x09E2	0x2900    CMP	R1, #0
0x09E4	0xD006    BEQ	L_Soft_I2C_Write18
;__Lib_SoftI2C.c, 203 :: 		
0x09E6	0x4B53    LDR	R3, [PC, #332]
0x09E8	0x6819    LDR	R1, [R3, #0]
0x09EA	0x2201    MOVS	R2, #1
0x09EC	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x09EE	0x4311    ORRS	R1, R2
0x09F0	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 204 :: 		
0x09F2	0xE005    B	L_Soft_I2C_Write19
L_Soft_I2C_Write18:
;__Lib_SoftI2C.c, 206 :: 		
0x09F4	0x4B4F    LDR	R3, [PC, #316]
0x09F6	0x6819    LDR	R1, [R3, #0]
0x09F8	0x2201    MOVS	R2, #1
0x09FA	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x09FC	0x4391    BICS	R1, R2
0x09FE	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 207 :: 		
L_Soft_I2C_Write19:
;__Lib_SoftI2C.c, 209 :: 		
0x0A00	0xF7FFFD10  BL	_Delay_1us+0
0x0A04	0xF7FFFD0E  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 211 :: 		
0x0A08	0x4B49    LDR	R3, [PC, #292]
0x0A0A	0x6819    LDR	R1, [R3, #0]
0x0A0C	0x2201    MOVS	R2, #1
0x0A0E	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x0A10	0x4311    ORRS	R1, R2
0x0A12	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 213 :: 		
0x0A14	0x4B48    LDR	R3, [PC, #288]
0x0A16	0x7819    LDRB	R1, [R3, #0]
0x0A18	0x2201    MOVS	R2, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0A1A	0x4391    BICS	R1, R2
0x0A1C	0x7019    STRB	R1, [R3, #0]
; data_ end address is: 16 (R4)
; temp end address is: 0 (R0)
;__Lib_SoftI2C.c, 214 :: 		
L_Soft_I2C_Write20:
; data_ start address is: 16 (R4)
; temp start address is: 0 (R0)
0x0A1E	0x4947    LDR	R1, [PC, #284]
0x0A20	0x680A    LDR	R2, [R1, #0]
0x0A22	0x2101    MOVS	R1, #1
0x0A24	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0A26	0x4011    ANDS	R1, R2
0x0A28	0x0849    LSRS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0A2A	0x2900    CMP	R1, #0
0x0A2C	0xD107    BNE	L_Soft_I2C_Write21
;__Lib_SoftI2C.c, 215 :: 		
0x0A2E	0x4942    LDR	R1, [PC, #264]
0x0A30	0x780A    LDRB	R2, [R1, #0]
0x0A32	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0A34	0x4011    ANDS	R1, R2
0x0A36	0x2900    CMP	R1, #0
0x0A38	0xD000    BEQ	L_Soft_I2C_Write22
;__Lib_SoftI2C.c, 216 :: 		
0x0A3A	0xE000    B	L_Soft_I2C_Write21
L_Soft_I2C_Write22:
0x0A3C	0xE7EF    B	L_Soft_I2C_Write20
L_Soft_I2C_Write21:
;__Lib_SoftI2C.c, 218 :: 		
0x0A3E	0x0840    LSRS	R0, R0, #1
0x0A40	0xB280    UXTH	R0, R0
;__Lib_SoftI2C.c, 219 :: 		
; data_ end address is: 16 (R4)
; temp end address is: 0 (R0)
0x0A42	0xE7B7    B	L_Soft_I2C_Write16
L_Soft_I2C_Write17:
;__Lib_SoftI2C.c, 223 :: 		
0x0A44	0xF7FFFCEE  BL	_Delay_1us+0
0x0A48	0xF7FFFCEC  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 225 :: 		
0x0A4C	0x4B38    LDR	R3, [PC, #224]
0x0A4E	0x6819    LDR	R1, [R3, #0]
0x0A50	0x2201    MOVS	R2, #1
0x0A52	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x0A54	0x4391    BICS	R1, R2
0x0A56	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 227 :: 		
0x0A58	0xF7FFFCE4  BL	_Delay_1us+0
0x0A5C	0xF7FFFCE2  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 229 :: 		
0x0A60	0x4B34    LDR	R3, [PC, #208]
0x0A62	0x6819    LDR	R1, [R3, #0]
0x0A64	0x2201    MOVS	R2, #1
0x0A66	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x0A68	0x4311    ORRS	R1, R2
0x0A6A	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 231 :: 		
0x0A6C	0xF7FFFCDA  BL	_Delay_1us+0
0x0A70	0xF7FFFCD8  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 232 :: 		
0x0A74	0xF7FFFCD6  BL	_Delay_1us+0
0x0A78	0xF7FFFCD4  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 234 :: 		
0x0A7C	0x4B2C    LDR	R3, [PC, #176]
0x0A7E	0x6819    LDR	R1, [R3, #0]
0x0A80	0x2201    MOVS	R2, #1
0x0A82	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x0A84	0x4311    ORRS	R1, R2
0x0A86	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 236 :: 		
0x0A88	0x4B2B    LDR	R3, [PC, #172]
0x0A8A	0x7819    LDRB	R1, [R3, #0]
0x0A8C	0x2201    MOVS	R2, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0A8E	0x4391    BICS	R1, R2
0x0A90	0x7019    STRB	R1, [R3, #0]
;__Lib_SoftI2C.c, 237 :: 		
L_Soft_I2C_Write23:
0x0A92	0x492A    LDR	R1, [PC, #168]
0x0A94	0x680A    LDR	R2, [R1, #0]
0x0A96	0x2101    MOVS	R1, #1
0x0A98	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0A9A	0x4011    ANDS	R1, R2
0x0A9C	0x0849    LSRS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0A9E	0x2900    CMP	R1, #0
0x0AA0	0xD107    BNE	L_Soft_I2C_Write24
;__Lib_SoftI2C.c, 238 :: 		
0x0AA2	0x4925    LDR	R1, [PC, #148]
0x0AA4	0x780A    LDRB	R2, [R1, #0]
0x0AA6	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0AA8	0x4011    ANDS	R1, R2
0x0AAA	0x2900    CMP	R1, #0
0x0AAC	0xD000    BEQ	L_Soft_I2C_Write25
;__Lib_SoftI2C.c, 239 :: 		
0x0AAE	0xE000    B	L_Soft_I2C_Write24
L_Soft_I2C_Write25:
0x0AB0	0xE7EF    B	L_Soft_I2C_Write23
L_Soft_I2C_Write24:
;__Lib_SoftI2C.c, 241 :: 		
; result start address is: 0 (R0)
0x0AB2	0x2000    MOVS	R0, #0
;__Lib_SoftI2C.c, 243 :: 		
0x0AB4	0xF7FFFCB6  BL	_Delay_1us+0
0x0AB8	0xF7FFFCB4  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 245 :: 		
0x0ABC	0x4920    LDR	R1, [PC, #128]
0x0ABE	0x680A    LDR	R2, [R1, #0]
0x0AC0	0x2101    MOVS	R1, #1
0x0AC2	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Input+0)
0x0AC4	0x4011    ANDS	R1, R2
0x0AC6	0x0889    LSRS	R1, R1, BitPos(Soft_I2C_Sda_Input+0)
0x0AC8	0x2900    CMP	R1, #0
0x0ACA	0xD003    BEQ	L__Soft_I2C_Write28
;__Lib_SoftI2C.c, 246 :: 		
0x0ACC	0x2101    MOVS	R1, #1
0x0ACE	0x4308    ORRS	R0, R1
0x0AD0	0xB280    UXTH	R0, R0
; result end address is: 0 (R0)
0x0AD2	0xE7FF    B	L_Soft_I2C_Write26
L__Soft_I2C_Write28:
;__Lib_SoftI2C.c, 245 :: 		
;__Lib_SoftI2C.c, 246 :: 		
L_Soft_I2C_Write26:
;__Lib_SoftI2C.c, 248 :: 		
; result start address is: 0 (R0)
0x0AD4	0xF7FFFCA6  BL	_Delay_1us+0
0x0AD8	0xF7FFFCA4  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 249 :: 		
0x0ADC	0xF7FFFCA2  BL	_Delay_1us+0
0x0AE0	0xF7FFFCA0  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 250 :: 		
0x0AE4	0xF7FFFC9E  BL	_Delay_1us+0
0x0AE8	0xF7FFFC9C  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 251 :: 		
0x0AEC	0xF7FFFC9A  BL	_Delay_1us+0
0x0AF0	0xF7FFFC98  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 252 :: 		
0x0AF4	0xF7FFFC96  BL	_Delay_1us+0
0x0AF8	0xF7FFFC94  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 253 :: 		
0x0AFC	0xF7FFFC92  BL	_Delay_1us+0
0x0B00	0xF7FFFC90  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 254 :: 		
0x0B04	0xF7FFFC8E  BL	_Delay_1us+0
0x0B08	0xF7FFFC8C  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 255 :: 		
0x0B0C	0xF7FFFC8A  BL	_Delay_1us+0
0x0B10	0xF7FFFC88  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 258 :: 		
0x0B14	0x4B06    LDR	R3, [PC, #24]
0x0B16	0x6819    LDR	R1, [R3, #0]
0x0B18	0x2201    MOVS	R2, #1
0x0B1A	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x0B1C	0x4391    BICS	R1, R2
0x0B1E	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 259 :: 		
0x0B20	0x4B04    LDR	R3, [PC, #16]
0x0B22	0x6819    LDR	R1, [R3, #0]
0x0B24	0x2201    MOVS	R2, #1
0x0B26	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x0B28	0x4391    BICS	R1, R2
0x0B2A	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 261 :: 		
0x0B2C	0xB2C0    UXTB	R0, R0
; result end address is: 0 (R0)
;__Lib_SoftI2C.c, 262 :: 		
L_end_Soft_I2C_Write:
0x0B2E	0xBD00    POP	(R15)
0x0B30	0x00144800  	Soft_I2C_Scl_Output+0
0x0B34	0x00144800  	Soft_I2C_Sda_Output+0
0x0B38	0x00A22000  	__Lib_SoftI2C___StopWaiting+0
0x0B3C	0x00104800  	Soft_I2C_Scl_Input+0
0x0B40	0x00104800  	Soft_I2C_Sda_Input+0
; end of _Soft_I2C_Write
_Soft_I2C_Read:
;__Lib_SoftI2C.c, 87 :: 		
; ack start address is: 0 (R0)
0x0790	0xB500    PUSH	(R14)
0x0792	0xB081    SUB	SP, SP, #4
0x0794	0xB281    UXTH	R1, R0
; ack end address is: 0 (R0)
; ack start address is: 4 (R1)
;__Lib_SoftI2C.c, 88 :: 		
; result start address is: 16 (R4)
0x0796	0x2400    MOVS	R4, #0
; temp start address is: 0 (R0)
0x0798	0x9400    STR	R4, [SP, #0]
; ack end address is: 4 (R1)
; temp end address is: 0 (R0)
; result end address is: 16 (R4)
0x079A	0x2080    MOVS	R0, #128
0x079C	0x9C00    LDR	R4, [SP, #0]
0x079E	0xB2A4    UXTH	R4, R4
0x07A0	0xB28D    UXTH	R5, R1
;__Lib_SoftI2C.c, 90 :: 		
L_Soft_I2C_Read3:
; temp start address is: 0 (R0)
; result start address is: 16 (R4)
; ack start address is: 20 (R5)
0x07A2	0x2800    CMP	R0, #0
0x07A4	0xD047    BEQ	L_Soft_I2C_Read4
;__Lib_SoftI2C.c, 91 :: 		
0x07A6	0xF7FFFE3D  BL	_Delay_1us+0
0x07AA	0xF7FFFE3B  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 93 :: 		
0x07AE	0x4B46    LDR	R3, [PC, #280]
0x07B0	0x6819    LDR	R1, [R3, #0]
0x07B2	0x2201    MOVS	R2, #1
0x07B4	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x07B6	0x4311    ORRS	R1, R2
0x07B8	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 95 :: 		
0x07BA	0xF7FFFE33  BL	_Delay_1us+0
0x07BE	0xF7FFFE31  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 97 :: 		
0x07C2	0x4B42    LDR	R3, [PC, #264]
0x07C4	0x6819    LDR	R1, [R3, #0]
0x07C6	0x2201    MOVS	R2, #1
0x07C8	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x07CA	0x4311    ORRS	R1, R2
0x07CC	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 99 :: 		
0x07CE	0x4B40    LDR	R3, [PC, #256]
0x07D0	0x7819    LDRB	R1, [R3, #0]
0x07D2	0x2201    MOVS	R2, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x07D4	0x4391    BICS	R1, R2
0x07D6	0x7019    STRB	R1, [R3, #0]
; temp end address is: 0 (R0)
; result end address is: 16 (R4)
; ack end address is: 20 (R5)
0x07D8	0x9500    STR	R5, [SP, #0]
0x07DA	0xB2A5    UXTH	R5, R4
0x07DC	0xB284    UXTH	R4, R0
0x07DE	0x9800    LDR	R0, [SP, #0]
0x07E0	0xB280    UXTH	R0, R0
;__Lib_SoftI2C.c, 100 :: 		
L_Soft_I2C_Read5:
; ack start address is: 0 (R0)
; result start address is: 20 (R5)
; temp start address is: 16 (R4)
0x07E2	0x493C    LDR	R1, [PC, #240]
0x07E4	0x680A    LDR	R2, [R1, #0]
0x07E6	0x2101    MOVS	R1, #1
0x07E8	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x07EA	0x4011    ANDS	R1, R2
0x07EC	0x0849    LSRS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x07EE	0x2900    CMP	R1, #0
0x07F0	0xD107    BNE	L_Soft_I2C_Read6
;__Lib_SoftI2C.c, 101 :: 		
0x07F2	0x4937    LDR	R1, [PC, #220]
0x07F4	0x780A    LDRB	R2, [R1, #0]
0x07F6	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x07F8	0x4011    ANDS	R1, R2
0x07FA	0x2900    CMP	R1, #0
0x07FC	0xD000    BEQ	L_Soft_I2C_Read7
;__Lib_SoftI2C.c, 102 :: 		
0x07FE	0xE000    B	L_Soft_I2C_Read6
L_Soft_I2C_Read7:
0x0800	0xE7EF    B	L_Soft_I2C_Read5
L_Soft_I2C_Read6:
;__Lib_SoftI2C.c, 104 :: 		
0x0802	0x4935    LDR	R1, [PC, #212]
0x0804	0x680A    LDR	R2, [R1, #0]
0x0806	0x2101    MOVS	R1, #1
0x0808	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Input+0)
0x080A	0x4011    ANDS	R1, R2
0x080C	0x0889    LSRS	R1, R1, BitPos(Soft_I2C_Sda_Input+0)
0x080E	0x2900    CMP	R1, #0
0x0810	0xD002    BEQ	L__Soft_I2C_Read27
;__Lib_SoftI2C.c, 105 :: 		
0x0812	0x4325    ORRS	R5, R4
0x0814	0xB2AD    UXTH	R5, R5
; result end address is: 20 (R5)
0x0816	0xE7FF    B	L_Soft_I2C_Read8
L__Soft_I2C_Read27:
;__Lib_SoftI2C.c, 104 :: 		
;__Lib_SoftI2C.c, 105 :: 		
L_Soft_I2C_Read8:
;__Lib_SoftI2C.c, 107 :: 		
; result start address is: 20 (R5)
0x0818	0xF7FFFE04  BL	_Delay_1us+0
0x081C	0xF7FFFE02  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 109 :: 		
0x0820	0x4B2A    LDR	R3, [PC, #168]
0x0822	0x6819    LDR	R1, [R3, #0]
0x0824	0x2201    MOVS	R2, #1
0x0826	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x0828	0x4391    BICS	R1, R2
0x082A	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 111 :: 		
0x082C	0x0861    LSRS	R1, R4, #1
; temp end address is: 16 (R4)
; temp start address is: 4 (R1)
;__Lib_SoftI2C.c, 112 :: 		
0x082E	0xB2AC    UXTH	R4, R5
; ack end address is: 0 (R0)
; result end address is: 20 (R5)
; temp end address is: 4 (R1)
0x0830	0xB285    UXTH	R5, R0
0x0832	0xB288    UXTH	R0, R1
0x0834	0xE7B5    B	L_Soft_I2C_Read3
L_Soft_I2C_Read4:
;__Lib_SoftI2C.c, 114 :: 		
; ack start address is: 20 (R5)
; result start address is: 16 (R4)
0x0836	0x4B24    LDR	R3, [PC, #144]
0x0838	0x6819    LDR	R1, [R3, #0]
0x083A	0x2201    MOVS	R2, #1
0x083C	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x083E	0x4311    ORRS	R1, R2
0x0840	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 116 :: 		
0x0842	0xF7FFFDEF  BL	_Delay_1us+0
0x0846	0xF7FFFDED  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 118 :: 		
0x084A	0x2D00    CMP	R5, #0
0x084C	0xD005    BEQ	L_Soft_I2C_Read9
; ack end address is: 20 (R5)
;__Lib_SoftI2C.c, 119 :: 		
0x084E	0x4B1E    LDR	R3, [PC, #120]
0x0850	0x6819    LDR	R1, [R3, #0]
0x0852	0x2201    MOVS	R2, #1
0x0854	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x0856	0x4391    BICS	R1, R2
0x0858	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 120 :: 		
L_Soft_I2C_Read9:
;__Lib_SoftI2C.c, 122 :: 		
0x085A	0xF7FFFDE3  BL	_Delay_1us+0
0x085E	0xF7FFFDE1  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 124 :: 		
0x0862	0x4B1A    LDR	R3, [PC, #104]
0x0864	0x6819    LDR	R1, [R3, #0]
0x0866	0x2201    MOVS	R2, #1
0x0868	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x086A	0x4311    ORRS	R1, R2
0x086C	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 126 :: 		
0x086E	0x4B18    LDR	R3, [PC, #96]
0x0870	0x7819    LDRB	R1, [R3, #0]
0x0872	0x2201    MOVS	R2, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0874	0x4391    BICS	R1, R2
0x0876	0x7019    STRB	R1, [R3, #0]
; result end address is: 16 (R4)
0x0878	0xB2A0    UXTH	R0, R4
;__Lib_SoftI2C.c, 127 :: 		
L_Soft_I2C_Read10:
; result start address is: 0 (R0)
0x087A	0x4916    LDR	R1, [PC, #88]
0x087C	0x680A    LDR	R2, [R1, #0]
0x087E	0x2101    MOVS	R1, #1
0x0880	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0882	0x4011    ANDS	R1, R2
0x0884	0x0849    LSRS	R1, R1, BitPos(Soft_I2C_Scl_Input+0)
0x0886	0x2900    CMP	R1, #0
0x0888	0xD107    BNE	L_Soft_I2C_Read11
;__Lib_SoftI2C.c, 128 :: 		
0x088A	0x4911    LDR	R1, [PC, #68]
0x088C	0x780A    LDRB	R2, [R1, #0]
0x088E	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0890	0x4011    ANDS	R1, R2
0x0892	0x2900    CMP	R1, #0
0x0894	0xD000    BEQ	L_Soft_I2C_Read12
;__Lib_SoftI2C.c, 129 :: 		
0x0896	0xE000    B	L_Soft_I2C_Read11
L_Soft_I2C_Read12:
0x0898	0xE7EF    B	L_Soft_I2C_Read10
L_Soft_I2C_Read11:
;__Lib_SoftI2C.c, 131 :: 		
0x089A	0xF7FFFDC3  BL	_Delay_1us+0
0x089E	0xF7FFFDC1  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 134 :: 		
0x08A2	0x4B0A    LDR	R3, [PC, #40]
0x08A4	0x6819    LDR	R1, [R3, #0]
0x08A6	0x2201    MOVS	R2, #1
0x08A8	0x0052    LSLS	R2, R2, BitPos(Soft_I2C_Scl_Output+0)
0x08AA	0x4391    BICS	R1, R2
0x08AC	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 136 :: 		
0x08AE	0xF7FFFDB9  BL	_Delay_1us+0
0x08B2	0xF7FFFDB7  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 138 :: 		
0x08B6	0x4B04    LDR	R3, [PC, #16]
0x08B8	0x6819    LDR	R1, [R3, #0]
0x08BA	0x2201    MOVS	R2, #1
0x08BC	0x0092    LSLS	R2, R2, BitPos(Soft_I2C_Sda_Output+0)
0x08BE	0x4391    BICS	R1, R2
0x08C0	0x6019    STR	R1, [R3, #0]
;__Lib_SoftI2C.c, 140 :: 		
0x08C2	0xB2C0    UXTB	R0, R0
; result end address is: 0 (R0)
;__Lib_SoftI2C.c, 141 :: 		
L_end_Soft_I2C_Read:
0x08C4	0xB001    ADD	SP, SP, #4
0x08C6	0xBD00    POP	(R15)
0x08C8	0x00144800  	Soft_I2C_Sda_Output+0
0x08CC	0x00144800  	Soft_I2C_Scl_Output+0
0x08D0	0x00A22000  	__Lib_SoftI2C___StopWaiting+0
0x08D4	0x00104800  	Soft_I2C_Scl_Input+0
0x08D8	0x00104800  	Soft_I2C_Sda_Input+0
; end of _Soft_I2C_Read
_Soft_I2C_Stop:
;__Lib_SoftI2C.c, 164 :: 		
0x08DC	0xB500    PUSH	(R14)
;__Lib_SoftI2C.c, 166 :: 		
0x08DE	0x4A20    LDR	R2, [PC, #128]
0x08E0	0x6810    LDR	R0, [R2, #0]
0x08E2	0x2101    MOVS	R1, #1
0x08E4	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Output+0)
0x08E6	0x4388    BICS	R0, R1
0x08E8	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 168 :: 		
0x08EA	0xF7FFFD9B  BL	_Delay_1us+0
0x08EE	0xF7FFFD99  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 170 :: 		
0x08F2	0x4A1C    LDR	R2, [PC, #112]
0x08F4	0x6810    LDR	R0, [R2, #0]
0x08F6	0x2101    MOVS	R1, #1
0x08F8	0x0049    LSLS	R1, R1, BitPos(Soft_I2C_Scl_Output+0)
0x08FA	0x4308    ORRS	R0, R1
0x08FC	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 172 :: 		
0x08FE	0x4A1A    LDR	R2, [PC, #104]
0x0900	0x7810    LDRB	R0, [R2, #0]
0x0902	0x2101    MOVS	R1, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x0904	0x4388    BICS	R0, R1
0x0906	0x7010    STRB	R0, [R2, #0]
;__Lib_SoftI2C.c, 173 :: 		
L_Soft_I2C_Stop13:
0x0908	0x4818    LDR	R0, [PC, #96]
0x090A	0x6801    LDR	R1, [R0, #0]
0x090C	0x2001    MOVS	R0, #1
0x090E	0x0040    LSLS	R0, R0, BitPos(Soft_I2C_Scl_Input+0)
0x0910	0x4008    ANDS	R0, R1
0x0912	0x0840    LSRS	R0, R0, BitPos(Soft_I2C_Scl_Input+0)
0x0914	0x2800    CMP	R0, #0
0x0916	0xD107    BNE	L_Soft_I2C_Stop14
;__Lib_SoftI2C.c, 174 :: 		
0x0918	0x4813    LDR	R0, [PC, #76]
0x091A	0x7801    LDRB	R1, [R0, #0]
0x091C	0x2001    MOVS	R0, BitMask(__Lib_SoftI2C___StopWaiting+0)
0x091E	0x4008    ANDS	R0, R1
0x0920	0x2800    CMP	R0, #0
0x0922	0xD000    BEQ	L_Soft_I2C_Stop15
;__Lib_SoftI2C.c, 175 :: 		
0x0924	0xE000    B	L_Soft_I2C_Stop14
L_Soft_I2C_Stop15:
0x0926	0xE7EF    B	L_Soft_I2C_Stop13
L_Soft_I2C_Stop14:
;__Lib_SoftI2C.c, 177 :: 		
0x0928	0xF7FFFD7C  BL	_Delay_1us+0
0x092C	0xF7FFFD7A  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 178 :: 		
0x0930	0xF7FFFD78  BL	_Delay_1us+0
0x0934	0xF7FFFD76  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 179 :: 		
0x0938	0xF7FFFD74  BL	_Delay_1us+0
0x093C	0xF7FFFD72  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 180 :: 		
0x0940	0xF7FFFD70  BL	_Delay_1us+0
0x0944	0xF7FFFD6E  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 182 :: 		
0x0948	0x4A05    LDR	R2, [PC, #20]
0x094A	0x6810    LDR	R0, [R2, #0]
0x094C	0x2101    MOVS	R1, #1
0x094E	0x0089    LSLS	R1, R1, BitPos(Soft_I2C_Sda_Output+0)
0x0950	0x4308    ORRS	R0, R1
0x0952	0x6010    STR	R0, [R2, #0]
;__Lib_SoftI2C.c, 184 :: 		
0x0954	0xF7FFFD66  BL	_Delay_1us+0
0x0958	0xF7FFFD64  BL	_Delay_1us+0
;__Lib_SoftI2C.c, 185 :: 		
L_end_Soft_I2C_Stop:
0x095C	0xBD00    POP	(R15)
0x095E	0xBF00    NOP
0x0960	0x00144800  	Soft_I2C_Sda_Output+0
0x0964	0x00144800  	Soft_I2C_Scl_Output+0
0x0968	0x00A22000  	__Lib_SoftI2C___StopWaiting+0
0x096C	0x00104800  	Soft_I2C_Scl_Input+0
; end of _Soft_I2C_Stop
_WordToHex:
;__Lib_Conversions.c, 17 :: 		
; output start address is: 4 (R1)
0x13FC	0xB081    SUB	SP, SP, #4
0x13FE	0x9000    STR	R0, [SP, #0]
; output end address is: 4 (R1)
; output start address is: 4 (R1)
;__Lib_Conversions.c, 18 :: 		
0x1400	0x466D    MOV	R5, SP
0x1402	0x1C6A    ADDS	R2, R5, #1
0x1404	0x7812    LDRB	R2, [R2, #0]
0x1406	0x0913    LSRS	R3, R2, #4
0x1408	0xB2DB    UXTB	R3, R3
0x140A	0x4A12    LDR	R2, [PC, #72]
0x140C	0x18D2    ADDS	R2, R2, R3
0x140E	0x7812    LDRB	R2, [R2, #0]
0x1410	0x700A    STRB	R2, [R1, #0]
;__Lib_Conversions.c, 19 :: 		
0x1412	0x1C4C    ADDS	R4, R1, #1
0x1414	0x1C6A    ADDS	R2, R5, #1
0x1416	0x7813    LDRB	R3, [R2, #0]
0x1418	0x220F    MOVS	R2, #15
0x141A	0x4013    ANDS	R3, R2
0x141C	0xB2DB    UXTB	R3, R3
0x141E	0x4A0D    LDR	R2, [PC, #52]
0x1420	0x18D2    ADDS	R2, R2, R3
0x1422	0x7812    LDRB	R2, [R2, #0]
0x1424	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 20 :: 		
0x1426	0x1C8C    ADDS	R4, R1, #2
0x1428	0x782A    LDRB	R2, [R5, #0]
0x142A	0x0913    LSRS	R3, R2, #4
0x142C	0xB2DB    UXTB	R3, R3
0x142E	0x4A09    LDR	R2, [PC, #36]
0x1430	0x18D2    ADDS	R2, R2, R3
0x1432	0x7812    LDRB	R2, [R2, #0]
0x1434	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 21 :: 		
0x1436	0x1CCC    ADDS	R4, R1, #3
0x1438	0x782B    LDRB	R3, [R5, #0]
0x143A	0x220F    MOVS	R2, #15
0x143C	0x4013    ANDS	R3, R2
0x143E	0xB2DB    UXTB	R3, R3
0x1440	0x4A04    LDR	R2, [PC, #16]
0x1442	0x18D2    ADDS	R2, R2, R3
0x1444	0x7812    LDRB	R2, [R2, #0]
0x1446	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 22 :: 		
0x1448	0x1D0B    ADDS	R3, R1, #4
; output end address is: 4 (R1)
0x144A	0x2200    MOVS	R2, #0
0x144C	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 23 :: 		
L_end_WordToHex:
0x144E	0xB001    ADD	SP, SP, #4
0x1450	0x4770    BX	LR
0x1452	0xBF00    NOP
0x1454	0x21080000  	__Lib_Conversions_Digits+0
; end of _WordToHex
__Lib_System_InitialSetUpRCCRCC2:
;__Lib_System.c, 346 :: 		
0x1644	0xB500    PUSH	(R14)
0x1646	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 349 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1648	0x4A32    LDR	R2, [PC, #200]
;__Lib_System.c, 350 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x164A	0x4B33    LDR	R3, [PC, #204]
;__Lib_System.c, 351 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x164C	0x4C33    LDR	R4, [PC, #204]
;__Lib_System.c, 352 :: 		
; ulRCC_CSR start address is: 20 (R5)
0x164E	0x4D34    LDR	R5, [PC, #208]
;__Lib_System.c, 353 :: 		
; ulRCC_CR2 start address is: 24 (R6)
0x1650	0x4E34    LDR	R6, [PC, #208]
;__Lib_System.c, 354 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1652	0x4935    LDR	R1, [PC, #212]
;__Lib_System.c, 359 :: 		
0x1654	0x4835    LDR	R0, [PC, #212]
0x1656	0x4281    CMP	R1, R0
0x1658	0xD906    BLS	L___Lib_System_InitialSetUpRCCRCC219
; Fosc_kHz end address is: 4 (R1)
;__Lib_System.c, 360 :: 		
0x165A	0x4835    LDR	R0, [PC, #212]
0x165C	0x6801    LDR	R1, [R0, #0]
0x165E	0x2001    MOVS	R0, #1
0x1660	0x4301    ORRS	R1, R0
0x1662	0x4833    LDR	R0, [PC, #204]
0x1664	0x6001    STR	R1, [R0, #0]
0x1666	0xE005    B	L___Lib_System_InitialSetUpRCCRCC220
L___Lib_System_InitialSetUpRCCRCC219:
;__Lib_System.c, 362 :: 		
0x1668	0x4831    LDR	R0, [PC, #196]
0x166A	0x6801    LDR	R1, [R0, #0]
0x166C	0x4831    LDR	R0, [PC, #196]
0x166E	0x4001    ANDS	R1, R0
0x1670	0x482F    LDR	R0, [PC, #188]
0x1672	0x6001    STR	R1, [R0, #0]
L___Lib_System_InitialSetUpRCCRCC220:
;__Lib_System.c, 364 :: 		
0x1674	0xF7FFFC2E  BL	__Lib_System_SystemClockSetDefault+0
;__Lib_System.c, 366 :: 		
0x1678	0x482F    LDR	R0, [PC, #188]
0x167A	0x6003    STR	R3, [R0, #0]
;__Lib_System.c, 367 :: 		
0x167C	0x482F    LDR	R0, [PC, #188]
0x167E	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System.c, 368 :: 		
0x1680	0x482F    LDR	R0, [PC, #188]
0x1682	0x4611    MOV	R1, R2
0x1684	0x4001    ANDS	R1, R0
0x1686	0x482F    LDR	R0, [PC, #188]
0x1688	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 369 :: 		
0x168A	0x482F    LDR	R0, [PC, #188]
0x168C	0x6005    STR	R5, [R0, #0]
; ulRCC_CSR end address is: 20 (R5)
;__Lib_System.c, 370 :: 		
0x168E	0x482F    LDR	R0, [PC, #188]
0x1690	0x6006    STR	R6, [R0, #0]
; ulRCC_CR2 end address is: 24 (R6)
;__Lib_System.c, 372 :: 		
0x1692	0x2001    MOVS	R0, #1
0x1694	0x4010    ANDS	R0, R2
0x1696	0x2800    CMP	R0, #0
0x1698	0xD008    BEQ	L___Lib_System_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 12 (R3)
;__Lib_System.c, 373 :: 		
L___Lib_System_InitialSetUpRCCRCC222:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x169A	0x482A    LDR	R0, [PC, #168]
0x169C	0x6801    LDR	R1, [R0, #0]
0x169E	0x2002    MOVS	R0, #2
0x16A0	0x4008    ANDS	R0, R1
0x16A2	0x2800    CMP	R0, #0
0x16A4	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC223
;__Lib_System.c, 374 :: 		
0x16A6	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC222
L___Lib_System_InitialSetUpRCCRCC223:
;__Lib_System.c, 375 :: 		
; ulRCC_CFGR end address is: 12 (R3)
0x16A8	0x4619    MOV	R1, R3
0x16AA	0xE000    B	L___Lib_System_InitialSetUpRCCRCC221
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC236:
;__Lib_System.c, 372 :: 		
0x16AC	0x4619    MOV	R1, R3
;__Lib_System.c, 375 :: 		
L___Lib_System_InitialSetUpRCCRCC221:
;__Lib_System.c, 377 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x16AE	0x4828    LDR	R0, [PC, #160]
0x16B0	0x4010    ANDS	R0, R2
0x16B2	0x2800    CMP	R0, #0
0x16B4	0xD00A    BEQ	L___Lib_System_InitialSetUpRCCRCC237
; ulRCC_CFGR end address is: 4 (R1)
; ulRCC_CR end address is: 8 (R2)
0x16B6	0x460B    MOV	R3, R1
;__Lib_System.c, 378 :: 		
L___Lib_System_InitialSetUpRCCRCC225:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x16B8	0x4822    LDR	R0, [PC, #136]
0x16BA	0x6801    LDR	R1, [R0, #0]
0x16BC	0x4825    LDR	R0, [PC, #148]
0x16BE	0x4008    ANDS	R0, R1
0x16C0	0x2800    CMP	R0, #0
0x16C2	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC226
;__Lib_System.c, 379 :: 		
0x16C4	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC225
L___Lib_System_InitialSetUpRCCRCC226:
;__Lib_System.c, 380 :: 		
0x16C6	0x4611    MOV	R1, R2
; ulRCC_CFGR end address is: 12 (R3)
0x16C8	0x461A    MOV	R2, R3
0x16CA	0xE002    B	L___Lib_System_InitialSetUpRCCRCC224
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC237:
;__Lib_System.c, 377 :: 		
0x16CC	0x9100    STR	R1, [SP, #0]
0x16CE	0x4611    MOV	R1, R2
0x16D0	0x9A00    LDR	R2, [SP, #0]
;__Lib_System.c, 380 :: 		
L___Lib_System_InitialSetUpRCCRCC224:
;__Lib_System.c, 382 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x16D2	0x4821    LDR	R0, [PC, #132]
0x16D4	0x4008    ANDS	R0, R1
; ulRCC_CR end address is: 4 (R1)
0x16D6	0x2800    CMP	R0, #0
0x16D8	0xD00E    BEQ	L___Lib_System_InitialSetUpRCCRCC238
;__Lib_System.c, 383 :: 		
0x16DA	0x481A    LDR	R0, [PC, #104]
0x16DC	0x6801    LDR	R1, [R0, #0]
0x16DE	0x481E    LDR	R0, [PC, #120]
0x16E0	0x4301    ORRS	R1, R0
0x16E2	0x4818    LDR	R0, [PC, #96]
0x16E4	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
;__Lib_System.c, 384 :: 		
L___Lib_System_InitialSetUpRCCRCC228:
; ulRCC_CFGR start address is: 8 (R2)
0x16E6	0x4817    LDR	R0, [PC, #92]
0x16E8	0x6801    LDR	R1, [R0, #0]
0x16EA	0x481C    LDR	R0, [PC, #112]
0x16EC	0x4008    ANDS	R0, R1
0x16EE	0x2800    CMP	R0, #0
0x16F0	0xD100    BNE	L___Lib_System_InitialSetUpRCCRCC229
;__Lib_System.c, 385 :: 		
0x16F2	0xE7F8    B	L___Lib_System_InitialSetUpRCCRCC228
L___Lib_System_InitialSetUpRCCRCC229:
;__Lib_System.c, 386 :: 		
0x16F4	0x4613    MOV	R3, R2
0x16F6	0xE000    B	L___Lib_System_InitialSetUpRCCRCC227
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_InitialSetUpRCCRCC238:
;__Lib_System.c, 382 :: 		
0x16F8	0x4613    MOV	R3, R2
;__Lib_System.c, 386 :: 		
L___Lib_System_InitialSetUpRCCRCC227:
;__Lib_System.c, 389 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_InitialSetUpRCCRCC230:
; ulRCC_CFGR start address is: 12 (R3)
0x16FA	0x480F    LDR	R0, [PC, #60]
0x16FC	0x6801    LDR	R1, [R0, #0]
0x16FE	0x200C    MOVS	R0, #12
0x1700	0x460A    MOV	R2, R1
0x1702	0x4002    ANDS	R2, R0
0x1704	0x0099    LSLS	R1, R3, #2
0x1706	0x200C    MOVS	R0, #12
0x1708	0x4008    ANDS	R0, R1
0x170A	0x4282    CMP	R2, R0
0x170C	0xD000    BEQ	L___Lib_System_InitialSetUpRCCRCC231
;__Lib_System.c, 390 :: 		
; ulRCC_CFGR end address is: 12 (R3)
0x170E	0xE7F4    B	L___Lib_System_InitialSetUpRCCRCC230
L___Lib_System_InitialSetUpRCCRCC231:
;__Lib_System.c, 391 :: 		
L_end_InitialSetUpRCCRCC2:
0x1710	0xB001    ADD	SP, SP, #4
0x1712	0xBD00    POP	(R15)
0x1714	0x00800101  	#16842880
0x1718	0x00028011  	#-2146369534
0x171C	0x00000000  	#0
0x1720	0x00000000  	#0
0x1724	0x00810000  	#129
0x1728	0xBB800000  	#48000
0x172C	0x5DC00000  	#24000
0x1730	0x20004002  	Flash_ACR+0
0x1734	0xFFF8FFFF  	#-8
0x1738	0x10044002  	RCC_CFGR+0
0x173C	0x102C4002  	RCC_CFGR2+0
0x1740	0xFFFF000F  	#1048575
0x1744	0x10004002  	RCC_CR+0
0x1748	0x10244002  	RCC_CSR+0
0x174C	0x10344002  	RCC_CR2+0
0x1750	0x00000001  	#65536
0x1754	0x00000002  	#131072
0x1758	0x00000100  	#16777216
0x175C	0x00000200  	#33554432
; end of __Lib_System_InitialSetUpRCCRCC2
__Lib_System_SystemClockSetDefault:
;__Lib_System.c, 319 :: 		
0x0ED4	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 322 :: 		
0x0ED6	0x4819    LDR	R0, [PC, #100]
0x0ED8	0x6801    LDR	R1, [R0, #0]
0x0EDA	0x2001    MOVS	R0, #1
0x0EDC	0x4301    ORRS	R1, R0
0x0EDE	0x4817    LDR	R0, [PC, #92]
0x0EE0	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 325 :: 		
0x0EE2	0x4817    LDR	R0, [PC, #92]
0x0EE4	0x6801    LDR	R1, [R0, #0]
0x0EE6	0x4817    LDR	R0, [PC, #92]
0x0EE8	0x4001    ANDS	R1, R0
0x0EEA	0x4815    LDR	R0, [PC, #84]
0x0EEC	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 328 :: 		
0x0EEE	0x4813    LDR	R0, [PC, #76]
0x0EF0	0x6801    LDR	R1, [R0, #0]
0x0EF2	0x4815    LDR	R0, [PC, #84]
0x0EF4	0x4001    ANDS	R1, R0
0x0EF6	0x4811    LDR	R0, [PC, #68]
0x0EF8	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 331 :: 		
0x0EFA	0x4810    LDR	R0, [PC, #64]
0x0EFC	0x6801    LDR	R1, [R0, #0]
0x0EFE	0x4813    LDR	R0, [PC, #76]
0x0F00	0x4001    ANDS	R1, R0
0x0F02	0x480E    LDR	R0, [PC, #56]
0x0F04	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 334 :: 		
0x0F06	0x480E    LDR	R0, [PC, #56]
0x0F08	0x6801    LDR	R1, [R0, #0]
0x0F0A	0x4811    LDR	R0, [PC, #68]
0x0F0C	0x4001    ANDS	R1, R0
0x0F0E	0x480C    LDR	R0, [PC, #48]
0x0F10	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 337 :: 		
0x0F12	0x4810    LDR	R0, [PC, #64]
0x0F14	0x6801    LDR	R1, [R0, #0]
0x0F16	0x4810    LDR	R0, [PC, #64]
0x0F18	0x4001    ANDS	R1, R0
0x0F1A	0x480E    LDR	R0, [PC, #56]
0x0F1C	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 340 :: 		
0x0F1E	0x480F    LDR	R0, [PC, #60]
0x0F20	0x6801    LDR	R1, [R0, #0]
0x0F22	0x480F    LDR	R0, [PC, #60]
0x0F24	0x4001    ANDS	R1, R0
0x0F26	0x480D    LDR	R0, [PC, #52]
0x0F28	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 343 :: 		
0x0F2A	0x480E    LDR	R0, [PC, #56]
0x0F2C	0x6801    LDR	R1, [R0, #0]
0x0F2E	0x480E    LDR	R0, [PC, #56]
0x0F30	0x4001    ANDS	R1, R0
0x0F32	0x480C    LDR	R0, [PC, #48]
0x0F34	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 344 :: 		
L_end_SystemClockSetDefault:
0x0F36	0xB001    ADD	SP, SP, #4
0x0F38	0x4770    BX	LR
0x0F3A	0xBF00    NOP
0x0F3C	0x10004002  	RCC_CR+0
0x0F40	0x10044002  	RCC_CFGR+0
0x0F44	0xB80CF8FF  	#-117458932
0x0F48	0xFFFFFEF6  	#-17367041
0x0F4C	0xFFFFFFFB  	#-262145
0x0F50	0xFFFFFFC0  	#-4128769
0x0F54	0x102C4002  	RCC_CFGR2+0
0x0F58	0xFFF0FFFF  	#-16
0x0F5C	0x10304002  	RCC_CFGR3+0
0x0F60	0xFEACFFFF  	#-340
0x0F64	0x10344002  	RCC_CR2+0
0x0F68	0xFFFEFFFF  	#-2
; end of __Lib_System_SystemClockSetDefault
__Lib_System_InitialSetUpFosc:
;__Lib_System.c, 393 :: 		
0x1630	0xB081    SUB	SP, SP, #4
;__Lib_System.c, 394 :: 		
0x1632	0x4902    LDR	R1, [PC, #8]
0x1634	0x4802    LDR	R0, [PC, #8]
0x1636	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 395 :: 		
L_end_InitialSetUpFosc:
0x1638	0xB001    ADD	SP, SP, #4
0x163A	0x4770    BX	LR
0x163C	0xBB800000  	#48000
0x1640	0x00A42000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_InitialSetUpFosc
___GenExcept:
;__Lib_System.c, 267 :: 		
0x1E2C	0xB500    PUSH	(R14)
;__Lib_System.c, 268 :: 		
L___GenExcept15:
0x1E2E	0xE7FE    B	L___GenExcept15
;__Lib_System.c, 269 :: 		
L_end___GenExcept:
0x1E30	0xBD00    POP	(R15)
; end of ___GenExcept
0x213C	0xB500    PUSH	(R14)
0x213E	0x4E08    LDR	R6, [PC, #32]
0x2140	0x4D08    LDR	R5, [PC, #32]
0x2142	0x4F09    LDR	R7, [PC, #36]
0x2144	0xF7FEFF30  BL	4008
0x2148	0x4E08    LDR	R6, [PC, #32]
0x214A	0x4D09    LDR	R5, [PC, #36]
0x214C	0x4F09    LDR	R7, [PC, #36]
0x214E	0xF7FEFF2B  BL	4008
0x2152	0x4E07    LDR	R6, [PC, #28]
0x2154	0x4D08    LDR	R5, [PC, #32]
0x2156	0x4F09    LDR	R7, [PC, #36]
0x2158	0xF7FEFF26  BL	4008
0x215C	0xBD00    POP	(R15)
0x215E	0x4770    BX	LR
0x2160	0x00002000  	#536870912
0x2164	0x00012000  	#536870913
0x2168	0x05560000  	#1366
0x216C	0x00022000  	#536870914
0x2170	0x00042000  	#536870916
0x2174	0x04360000  	#1078
0x2178	0x006C2000  	#536871020
0x217C	0x20A00000  	#8352
0x21F4	0xB500    PUSH	(R14)
0x21F6	0x4E03    LDR	R6, [PC, #12]
0x21F8	0x4D03    LDR	R5, [PC, #12]
0x21FA	0xF7FEFEDF  BL	4028
0x21FE	0xBD00    POP	(R15)
0x2200	0x4770    BX	LR
0x2202	0xBF00    NOP
0x2204	0x00002000  	#536870912
0x2208	0x02C02000  	#536871616
_ReceiveOne:
;PhotoTransdModbusV2.c, 249 :: 		void ReceiveOne() iv IVT_INT_USART1 ics ICS_AUTO {   //прием символа
0x1760	0xB500    PUSH	(R14)
0x1762	0xB4F0    PUSH	(R4, R5, R6, R7)
0x1764	0xB086    SUB	SP, SP, #24
;PhotoTransdModbusV2.c, 250 :: 		unsigned int CRC_rd=0;
;PhotoTransdModbusV2.c, 251 :: 		unsigned int reg_rd=0;  //номер считываемого регистра
0x1766	0x2608    MOVS	R6, #8
0x1768	0x446E    ADD	R6, SP, R6
0x176A	0x250A    MOVS	R5, #10
0x176C	0x19AD    ADDS	R5, R5, R6
0x176E	0x4FB0    LDR	R7, [PC, #704]
0x1770	0xF7FFFC1A  BL	___CC2DW+0
;PhotoTransdModbusV2.c, 252 :: 		unsigned int regs_count=0; //количество Регистров
;PhotoTransdModbusV2.c, 253 :: 		unsigned int pnt_resp_buffer=0;//счетчик символов.
;PhotoTransdModbusV2.c, 254 :: 		int ggg=0;
;PhotoTransdModbusV2.c, 255 :: 		int tmp=0;
;PhotoTransdModbusV2.c, 256 :: 		char changed=0;//флаг изменения настроек
; changed start address is: 24 (R6)
0x1774	0x2600    MOVS	R6, #0
;PhotoTransdModbusV2.c, 257 :: 		char creb=0;//флаг для перезагрузки
; creb start address is: 20 (R5)
0x1776	0x2500    MOVS	R5, #0
;PhotoTransdModbusV2.c, 261 :: 		USART1_CR1.RXNEIE = 0;             //бит разрешения прерывание от приемника
0x1778	0x4AAE    LDR	R2, [PC, #696]
0x177A	0x6810    LDR	R0, [R2, #0]
0x177C	0x2140    MOVS	R1, #64
0x177E	0x4388    BICS	R0, R1
0x1780	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 263 :: 		if(RXNE_USART1_ISR_bit == 1)          //в приемнике чтото есть
0x1782	0x48AD    LDR	R0, [PC, #692]
0x1784	0x6801    LDR	R1, [R0, #0]
0x1786	0x2001    MOVS	R0, #1
0x1788	0x0140    LSLS	R0, R0, BitPos(RXNE_USART1_ISR_bit+0)
0x178A	0x4008    ANDS	R0, R1
0x178C	0x0940    LSRS	R0, R0, BitPos(RXNE_USART1_ISR_bit+0)
0x178E	0x2800    CMP	R0, #0
0x1790	0xD025    BEQ	L__ReceiveOne88
;PhotoTransdModbusV2.c, 267 :: 		USART1_RTOR= 35;
0x1792	0x2123    MOVS	R1, #35
0x1794	0x48A9    LDR	R0, [PC, #676]
0x1796	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 268 :: 		USART1_CR2.RTOEN=1;  //таймаут включен по приему символа
0x1798	0x4AA9    LDR	R2, [PC, #676]
0x179A	0x6810    LDR	R0, [R2, #0]
0x179C	0x2101    MOVS	R1, #1
0x179E	0x05C9    LSLS	R1, R1, #23
0x17A0	0x4308    ORRS	R0, R1
0x17A2	0x6010    STR	R0, [R2, #0]
; creb end address is: 20 (R5)
; changed end address is: 24 (R6)
;PhotoTransdModbusV2.c, 271 :: 		while (RXNE_USART1_ISR_bit == 1){
L_ReceiveOne26:
; creb start address is: 20 (R5)
; changed start address is: 24 (R6)
0x17A4	0x48A4    LDR	R0, [PC, #656]
0x17A6	0x6801    LDR	R1, [R0, #0]
0x17A8	0x2001    MOVS	R0, #1
0x17AA	0x0140    LSLS	R0, R0, BitPos(RXNE_USART1_ISR_bit+0)
0x17AC	0x4008    ANDS	R0, R1
0x17AE	0x0940    LSRS	R0, R0, BitPos(RXNE_USART1_ISR_bit+0)
0x17B0	0x2800    CMP	R0, #0
0x17B2	0xD013    BEQ	L_ReceiveOne27
;PhotoTransdModbusV2.c, 272 :: 		buffer[pnt_buffer]=USART1_RDR; //переписываем символ из буфера
0x17B4	0x4AA3    LDR	R2, [PC, #652]
0x17B6	0x8811    LDRH	R1, [R2, #0]
0x17B8	0x48A3    LDR	R0, [PC, #652]
0x17BA	0x1841    ADDS	R1, R0, R1
0x17BC	0x48A3    LDR	R0, [PC, #652]
0x17BE	0x6800    LDR	R0, [R0, #0]
0x17C0	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 276 :: 		pnt_buffer++;
0x17C2	0x4610    MOV	R0, R2
0x17C4	0x8800    LDRH	R0, [R0, #0]
0x17C6	0x1C41    ADDS	R1, R0, #1
0x17C8	0xB289    UXTH	R1, R1
0x17CA	0x8011    STRH	R1, [R2, #0]
;PhotoTransdModbusV2.c, 277 :: 		if (pnt_buffer>buffer_size) {pnt_buffer=0;};//переполнение буфера
0x17CC	0x20FF    MOVS	R0, #255
0x17CE	0x3005    ADDS	R0, #5
0x17D0	0x4281    CMP	R1, R0
0x17D2	0xD902    BLS	L_ReceiveOne28
0x17D4	0x2100    MOVS	R1, #0
0x17D6	0x489B    LDR	R0, [PC, #620]
0x17D8	0x8001    STRH	R1, [R0, #0]
L_ReceiveOne28:
;PhotoTransdModbusV2.c, 278 :: 		};
0x17DA	0xE7E3    B	L_ReceiveOne26
L_ReceiveOne27:
;PhotoTransdModbusV2.c, 283 :: 		};
; changed end address is: 24 (R6)
0x17DC	0xE7FF    B	L_ReceiveOne25
; creb end address is: 20 (R5)
L__ReceiveOne88:
;PhotoTransdModbusV2.c, 263 :: 		if(RXNE_USART1_ISR_bit == 1)          //в приемнике чтото есть
;PhotoTransdModbusV2.c, 283 :: 		};
L_ReceiveOne25:
;PhotoTransdModbusV2.c, 288 :: 		if(RTOF_bit==1)//сработал таймаут передатчика    - начинаем разбор!
; creb start address is: 20 (R5)
; changed start address is: 24 (R6)
0x17DE	0x489C    LDR	R0, [PC, #624]
0x17E0	0x6801    LDR	R1, [R0, #0]
0x17E2	0x2001    MOVS	R0, #1
0x17E4	0x02C0    LSLS	R0, R0, BitPos(RTOF_bit+0)
0x17E6	0x4008    ANDS	R0, R1
0x17E8	0x0AC0    LSRS	R0, R0, BitPos(RTOF_bit+0)
0x17EA	0x2800    CMP	R0, #0
0x17EC	0xD101    BNE	#2
0x17EE	0xF000FB08  BL	L_ReceiveOne29
;PhotoTransdModbusV2.c, 290 :: 		RTOF_bit=0;//сбрасываем
0x17F2	0x4A97    LDR	R2, [PC, #604]
0x17F4	0x6810    LDR	R0, [R2, #0]
0x17F6	0x2101    MOVS	R1, #1
0x17F8	0x02C9    LSLS	R1, R1, BitPos(RTOF_bit+0)
0x17FA	0x4388    BICS	R0, R1
0x17FC	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 291 :: 		USART1_ICR.RTOF=1;
0x17FE	0x4A95    LDR	R2, [PC, #596]
0x1800	0x6810    LDR	R0, [R2, #0]
0x1802	0x2101    MOVS	R1, #1
0x1804	0x02C9    LSLS	R1, R1, #11
0x1806	0x4308    ORRS	R0, R1
0x1808	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 292 :: 		USART1_CR2.RTOEN=0;  //таймаут выключен
0x180A	0x4A8D    LDR	R2, [PC, #564]
0x180C	0x6810    LDR	R0, [R2, #0]
0x180E	0x2101    MOVS	R1, #1
0x1810	0x05C9    LSLS	R1, R1, #23
0x1812	0x4388    BICS	R0, R1
0x1814	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 293 :: 		USART1_RTOR= 0;
0x1816	0x2100    MOVS	R1, #0
0x1818	0x4888    LDR	R0, [PC, #544]
0x181A	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 297 :: 		buffer[pnt_buffer]=0;//символ конца
0x181C	0x4A89    LDR	R2, [PC, #548]
0x181E	0x9205    STR	R2, [SP, #20]
0x1820	0x8811    LDRH	R1, [R2, #0]
0x1822	0x4889    LDR	R0, [PC, #548]
0x1824	0x1841    ADDS	R1, R0, R1
0x1826	0x2000    MOVS	R0, #0
0x1828	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 308 :: 		CRC=crc16(buffer,pnt_buffer-2);  //так как за вычетом самой контрольной суммы   (длина -2 - правильное значение! тогда считает правильно!)
0x182A	0x4610    MOV	R0, R2
0x182C	0x8800    LDRH	R0, [R0, #0]
0x182E	0x1E80    SUBS	R0, R0, #2
0x1830	0x9600    STR	R6, [SP, #0]
0x1832	0x9501    STR	R5, [SP, #4]
0x1834	0xB281    UXTH	R1, R0
0x1836	0x4884    LDR	R0, [PC, #528]
0x1838	0xF7FFFC4A  BL	PhotoTransdModbusV2_crc16+0
0x183C	0x9D01    LDR	R5, [SP, #4]
0x183E	0xB2ED    UXTB	R5, R5
0x1840	0x9E00    LDR	R6, [SP, #0]
0x1842	0xB2F6    UXTB	R6, R6
0x1844	0x4984    LDR	R1, [PC, #528]
0x1846	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 314 :: 		CRC_rd=buffer[pnt_buffer-2]*0x100+buffer[pnt_buffer-1];//с конца два байта
0x1848	0x9C05    LDR	R4, [SP, #20]
0x184A	0x4621    MOV	R1, R4
0x184C	0x8809    LDRH	R1, [R1, #0]
0x184E	0x1E8A    SUBS	R2, R1, #2
0x1850	0xB292    UXTH	R2, R2
0x1852	0x497D    LDR	R1, [PC, #500]
0x1854	0x1889    ADDS	R1, R1, R2
0x1856	0x7809    LDRB	R1, [R1, #0]
0x1858	0x020B    LSLS	R3, R1, #8
0x185A	0xB21B    SXTH	R3, R3
0x185C	0x4621    MOV	R1, R4
0x185E	0x8809    LDRH	R1, [R1, #0]
0x1860	0x1E4A    SUBS	R2, R1, #1
0x1862	0xB292    UXTH	R2, R2
0x1864	0x4978    LDR	R1, [PC, #480]
0x1866	0x1889    ADDS	R1, R1, R2
0x1868	0x7809    LDRB	R1, [R1, #0]
0x186A	0x1859    ADDS	R1, R3, R1
;PhotoTransdModbusV2.c, 320 :: 		if(crc_rd==crc)
0x186C	0xB289    UXTH	R1, R1
0x186E	0x4281    CMP	R1, R0
0x1870	0xD000    BEQ	#0
0x1872	0xE2BE    B	L_ReceiveOne30
;PhotoTransdModbusV2.c, 330 :: 		if (buffer[0]==dev_adress){//UART1_Write_Text(" Dev Adress Valid");
0x1874	0x4879    LDR	R0, [PC, #484]
0x1876	0x7801    LDRB	R1, [R0, #0]
0x1878	0x4873    LDR	R0, [PC, #460]
0x187A	0x7800    LDRB	R0, [R0, #0]
0x187C	0x4288    CMP	R0, R1
0x187E	0xD000    BEQ	#0
0x1880	0xE2B6    B	L_ReceiveOne31
;PhotoTransdModbusV2.c, 331 :: 		resp_buffer[0]=dev_adress;//готовим ответ - адрес
0x1882	0x4876    LDR	R0, [PC, #472]
0x1884	0x7801    LDRB	R1, [R0, #0]
0x1886	0x4876    LDR	R0, [PC, #472]
0x1888	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 335 :: 		if (buffer[1]==0x03)
0x188A	0x4876    LDR	R0, [PC, #472]
0x188C	0x7800    LDRB	R0, [R0, #0]
0x188E	0x2803    CMP	R0, #3
0x1890	0xD000    BEQ	#0
0x1892	0xE0A1    B	L_ReceiveOne32
; creb end address is: 20 (R5)
; changed end address is: 24 (R6)
;PhotoTransdModbusV2.c, 339 :: 		resp_buffer[1]=0x03;//готовим ответ - функция
0x1894	0x2103    MOVS	R1, #3
0x1896	0x4874    LDR	R0, [PC, #464]
0x1898	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 345 :: 		reg_rd=buffer[3]+buffer[2]*0x100;
0x189A	0x4874    LDR	R0, [PC, #464]
0x189C	0x7800    LDRB	R0, [R0, #0]
0x189E	0x0201    LSLS	R1, R0, #8
0x18A0	0xB209    SXTH	R1, R1
0x18A2	0x4873    LDR	R0, [PC, #460]
0x18A4	0x7800    LDRB	R0, [R0, #0]
0x18A6	0x1842    ADDS	R2, R0, R1
0x18A8	0x9202    STR	R2, [SP, #8]
;PhotoTransdModbusV2.c, 351 :: 		regs_count=buffer[5]+buffer[4]*0x100;
0x18AA	0x4872    LDR	R0, [PC, #456]
0x18AC	0x7800    LDRB	R0, [R0, #0]
0x18AE	0x0201    LSLS	R1, R0, #8
0x18B0	0xB209    SXTH	R1, R1
0x18B2	0x4871    LDR	R0, [PC, #452]
0x18B4	0x7800    LDRB	R0, [R0, #0]
0x18B6	0x1840    ADDS	R0, R0, R1
0x18B8	0x9003    STR	R0, [SP, #12]
;PhotoTransdModbusV2.c, 356 :: 		if (reg_rd>127){reg_rd=127;};//выход за границу
0x18BA	0xB290    UXTH	R0, R2
0x18BC	0x287F    CMP	R0, #127
0x18BE	0xD901    BLS	L_ReceiveOne33
0x18C0	0x207F    MOVS	R0, #127
0x18C2	0x9002    STR	R0, [SP, #8]
L_ReceiveOne33:
;PhotoTransdModbusV2.c, 357 :: 		if ((reg_rd+regs_count)>127){regs_count=127-reg_rd;};//выход за границу
0x18C4	0x9903    LDR	R1, [SP, #12]
0x18C6	0xB289    UXTH	R1, R1
0x18C8	0x9802    LDR	R0, [SP, #8]
0x18CA	0xB280    UXTH	R0, R0
0x18CC	0x1840    ADDS	R0, R0, R1
0x18CE	0xB280    UXTH	R0, R0
0x18D0	0x287F    CMP	R0, #127
0x18D2	0xD904    BLS	L_ReceiveOne34
0x18D4	0x9902    LDR	R1, [SP, #8]
0x18D6	0xB289    UXTH	R1, R1
0x18D8	0x207F    MOVS	R0, #127
0x18DA	0x1A40    SUBS	R0, R0, R1
0x18DC	0x9003    STR	R0, [SP, #12]
L_ReceiveOne34:
;PhotoTransdModbusV2.c, 360 :: 		resp_buffer[2]=regs_count*2;//количество байт
0x18DE	0x9803    LDR	R0, [SP, #12]
0x18E0	0xB280    UXTH	R0, R0
0x18E2	0x0041    LSLS	R1, R0, #1
0x18E4	0x4865    LDR	R0, [PC, #404]
0x18E6	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 364 :: 		RegistersUpdate();//получаем свеженькие значения
0x18E8	0xF7FFFC4C  BL	_RegistersUpdate+0
;PhotoTransdModbusV2.c, 374 :: 		for (ggg=0;ggg<regs_count;ggg++){
; ggg start address is: 12 (R3)
0x18EC	0x2300    MOVS	R3, #0
; ggg end address is: 12 (R3)
L_ReceiveOne35:
; ggg start address is: 12 (R3)
0x18EE	0x9803    LDR	R0, [SP, #12]
0x18F0	0xB280    UXTH	R0, R0
0x18F2	0x4283    CMP	R3, R0
0x18F4	0xD23C    BCS	L_ReceiveOne36
;PhotoTransdModbusV2.c, 375 :: 		if ((ggg+reg_rd)<=16){
0x18F6	0x9802    LDR	R0, [SP, #8]
0x18F8	0xB280    UXTH	R0, R0
0x18FA	0x1818    ADDS	R0, R3, R0
0x18FC	0xB280    UXTH	R0, R0
0x18FE	0x2810    CMP	R0, #16
0x1900	0xD821    BHI	L_ReceiveOne38
;PhotoTransdModbusV2.c, 376 :: 		resp_buffer[3+2*ggg]=Hi(ModbusRegister[ggg+reg_rd]);
0x1902	0x0058    LSLS	R0, R3, #1
0x1904	0xB200    SXTH	R0, R0
0x1906	0x1CC1    ADDS	R1, R0, #3
0x1908	0xB209    SXTH	R1, R1
0x190A	0x4855    LDR	R0, [PC, #340]
0x190C	0x1842    ADDS	R2, R0, R1
0x190E	0x9802    LDR	R0, [SP, #8]
0x1910	0xB280    UXTH	R0, R0
0x1912	0x1818    ADDS	R0, R3, R0
0x1914	0xB280    UXTH	R0, R0
0x1916	0x0041    LSLS	R1, R0, #1
0x1918	0x4859    LDR	R0, [PC, #356]
0x191A	0x1840    ADDS	R0, R0, R1
0x191C	0x3001    ADDS	R0, #1
0x191E	0x7800    LDRB	R0, [R0, #0]
0x1920	0x7010    STRB	R0, [R2, #0]
;PhotoTransdModbusV2.c, 379 :: 		resp_buffer[3+2*ggg+1]=Lo(ModbusRegister[ggg+reg_rd]);
0x1922	0x0058    LSLS	R0, R3, #1
0x1924	0xB200    SXTH	R0, R0
0x1926	0x3003    ADDS	R0, #3
0x1928	0xB200    SXTH	R0, R0
0x192A	0x1C41    ADDS	R1, R0, #1
0x192C	0xB209    SXTH	R1, R1
0x192E	0x484C    LDR	R0, [PC, #304]
0x1930	0x1842    ADDS	R2, R0, R1
0x1932	0x9802    LDR	R0, [SP, #8]
0x1934	0xB280    UXTH	R0, R0
0x1936	0x1818    ADDS	R0, R3, R0
0x1938	0xB280    UXTH	R0, R0
0x193A	0x0041    LSLS	R1, R0, #1
0x193C	0x4850    LDR	R0, [PC, #320]
0x193E	0x1840    ADDS	R0, R0, R1
0x1940	0x7800    LDRB	R0, [R0, #0]
0x1942	0x7010    STRB	R0, [R2, #0]
;PhotoTransdModbusV2.c, 381 :: 		}
0x1944	0xE011    B	L_ReceiveOne39
L_ReceiveOne38:
;PhotoTransdModbusV2.c, 383 :: 		{resp_buffer[3+2*ggg]=0;
0x1946	0x0058    LSLS	R0, R3, #1
0x1948	0xB200    SXTH	R0, R0
0x194A	0x1CC1    ADDS	R1, R0, #3
0x194C	0xB209    SXTH	R1, R1
0x194E	0x4844    LDR	R0, [PC, #272]
0x1950	0x1841    ADDS	R1, R0, R1
0x1952	0x2000    MOVS	R0, #0
0x1954	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 384 :: 		resp_buffer[3+2*ggg+1]=0;//если выходим за границу - подставляем пустые
0x1956	0x0058    LSLS	R0, R3, #1
0x1958	0xB200    SXTH	R0, R0
0x195A	0x3003    ADDS	R0, #3
0x195C	0xB200    SXTH	R0, R0
0x195E	0x1C41    ADDS	R1, R0, #1
0x1960	0xB209    SXTH	R1, R1
0x1962	0x483F    LDR	R0, [PC, #252]
0x1964	0x1841    ADDS	R1, R0, R1
0x1966	0x2000    MOVS	R0, #0
0x1968	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 385 :: 		}
L_ReceiveOne39:
;PhotoTransdModbusV2.c, 374 :: 		for (ggg=0;ggg<regs_count;ggg++){
0x196A	0x3301    ADDS	R3, #1
0x196C	0xB21B    SXTH	R3, R3
;PhotoTransdModbusV2.c, 386 :: 		}
; ggg end address is: 12 (R3)
0x196E	0xE7BE    B	L_ReceiveOne35
L_ReceiveOne36:
;PhotoTransdModbusV2.c, 387 :: 		pnt_resp_buffer=3+regs_count*2;//указатель на общее количество
0x1970	0x9803    LDR	R0, [SP, #12]
0x1972	0xB280    UXTH	R0, R0
0x1974	0x0040    LSLS	R0, R0, #1
0x1976	0xB280    UXTH	R0, R0
0x1978	0x3003    ADDS	R0, #3
; pnt_resp_buffer start address is: 8 (R2)
0x197A	0xB282    UXTH	R2, R0
;PhotoTransdModbusV2.c, 402 :: 		CRC=crc16(resp_buffer,pnt_resp_buffer);
0x197C	0x9200    STR	R2, [SP, #0]
0x197E	0xB281    UXTH	R1, R0
0x1980	0x4837    LDR	R0, [PC, #220]
0x1982	0xF7FFFBA5  BL	PhotoTransdModbusV2_crc16+0
0x1986	0x9A00    LDR	R2, [SP, #0]
0x1988	0xB292    UXTH	R2, R2
0x198A	0x4933    LDR	R1, [PC, #204]
0x198C	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 404 :: 		resp_buffer[pnt_resp_buffer]=Hi(CRC);
0x198E	0x4834    LDR	R0, [PC, #208]
0x1990	0x1881    ADDS	R1, R0, R2
0x1992	0x483C    LDR	R0, [PC, #240]
0x1994	0x7800    LDRB	R0, [R0, #0]
0x1996	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 406 :: 		resp_buffer[pnt_resp_buffer+1]=Lo(CRC);//контрольная сумма
0x1998	0x1C51    ADDS	R1, R2, #1
0x199A	0xB289    UXTH	R1, R1
0x199C	0x4830    LDR	R0, [PC, #192]
0x199E	0x1841    ADDS	R1, R0, R1
0x19A0	0x482D    LDR	R0, [PC, #180]
0x19A2	0x7800    LDRB	R0, [R0, #0]
0x19A4	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 409 :: 		pnt_resp_buffer+=2;
0x19A6	0x1C93    ADDS	R3, R2, #2
0x19A8	0xB29B    UXTH	R3, R3
; pnt_resp_buffer end address is: 8 (R2)
; pnt_resp_buffer start address is: 12 (R3)
;PhotoTransdModbusV2.c, 415 :: 		Dir_RS485=1;//передача
0x19AA	0x4A37    LDR	R2, [PC, #220]
0x19AC	0x6810    LDR	R0, [R2, #0]
0x19AE	0x2180    MOVS	R1, #128
0x19B0	0x4308    ORRS	R0, R1
0x19B2	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 416 :: 		for (ggg=0;ggg<pnt_resp_buffer;ggg++){
; ggg start address is: 20 (R5)
0x19B4	0x2500    MOVS	R5, #0
; pnt_resp_buffer end address is: 12 (R3)
; ggg end address is: 20 (R5)
0x19B6	0xB29C    UXTH	R4, R3
L_ReceiveOne40:
; ggg start address is: 20 (R5)
; pnt_resp_buffer start address is: 16 (R4)
0x19B8	0x42A5    CMP	R5, R4
0x19BA	0xD207    BCS	L_ReceiveOne41
;PhotoTransdModbusV2.c, 420 :: 		UART1_Write(resp_buffer[ggg]);
0x19BC	0x4828    LDR	R0, [PC, #160]
0x19BE	0x1940    ADDS	R0, R0, R5
0x19C0	0x7800    LDRB	R0, [R0, #0]
0x19C2	0xF7FFFBA9  BL	_UART1_Write+0
;PhotoTransdModbusV2.c, 416 :: 		for (ggg=0;ggg<pnt_resp_buffer;ggg++){
0x19C6	0x3501    ADDS	R5, #1
0x19C8	0xB22D    SXTH	R5, R5
;PhotoTransdModbusV2.c, 421 :: 		}
; pnt_resp_buffer end address is: 16 (R4)
; ggg end address is: 20 (R5)
0x19CA	0xE7F5    B	L_ReceiveOne40
L_ReceiveOne41:
;PhotoTransdModbusV2.c, 422 :: 		Dir_RS485=0;//прием
0x19CC	0x4A2E    LDR	R2, [PC, #184]
0x19CE	0x6810    LDR	R0, [R2, #0]
0x19D0	0x2180    MOVS	R1, #128
0x19D2	0x4388    BICS	R0, R1
0x19D4	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 426 :: 		} else  if (buffer[1]==0x04)
0x19D6	0xE20A    B	L_ReceiveOne43
L_ReceiveOne32:
; changed start address is: 24 (R6)
; creb start address is: 20 (R5)
0x19D8	0x4822    LDR	R0, [PC, #136]
0x19DA	0x7800    LDRB	R0, [R0, #0]
0x19DC	0x2804    CMP	R0, #4
0x19DE	0xD000    BEQ	#0
0x19E0	0xE0CC    B	L_ReceiveOne44
; creb end address is: 20 (R5)
; changed end address is: 24 (R6)
;PhotoTransdModbusV2.c, 429 :: 		resp_buffer[1]=0x04;//готовим ответ - функция чтения входа
0x19E2	0x2104    MOVS	R1, #4
0x19E4	0x4820    LDR	R0, [PC, #128]
0x19E6	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 431 :: 		reg_rd=buffer[3]+buffer[2]*0x100;
0x19E8	0x4820    LDR	R0, [PC, #128]
0x19EA	0x7800    LDRB	R0, [R0, #0]
0x19EC	0x0201    LSLS	R1, R0, #8
0x19EE	0xB209    SXTH	R1, R1
0x19F0	0x481F    LDR	R0, [PC, #124]
0x19F2	0x7800    LDRB	R0, [R0, #0]
0x19F4	0x1842    ADDS	R2, R0, R1
0x19F6	0x9202    STR	R2, [SP, #8]
;PhotoTransdModbusV2.c, 433 :: 		regs_count=buffer[5]+buffer[4]*0x100;
0x19F8	0x481E    LDR	R0, [PC, #120]
0x19FA	0x7800    LDRB	R0, [R0, #0]
0x19FC	0x0201    LSLS	R1, R0, #8
0x19FE	0xB209    SXTH	R1, R1
0x1A00	0x481D    LDR	R0, [PC, #116]
0x1A02	0x7800    LDRB	R0, [R0, #0]
0x1A04	0x1840    ADDS	R0, R0, R1
0x1A06	0x9003    STR	R0, [SP, #12]
;PhotoTransdModbusV2.c, 434 :: 		if (reg_rd>127){reg_rd=127;};//выход за границу
0x1A08	0xB290    UXTH	R0, R2
0x1A0A	0x287F    CMP	R0, #127
0x1A0C	0xD901    BLS	L_ReceiveOne45
0x1A0E	0x207F    MOVS	R0, #127
0x1A10	0x9002    STR	R0, [SP, #8]
L_ReceiveOne45:
;PhotoTransdModbusV2.c, 435 :: 		if ((reg_rd+regs_count)>127){regs_count=127-reg_rd;};//выход за границу
0x1A12	0x9903    LDR	R1, [SP, #12]
0x1A14	0xB289    UXTH	R1, R1
0x1A16	0x9802    LDR	R0, [SP, #8]
0x1A18	0xB280    UXTH	R0, R0
0x1A1A	0x1840    ADDS	R0, R0, R1
0x1A1C	0xB280    UXTH	R0, R0
0x1A1E	0x287F    CMP	R0, #127
0x1A20	0xD904    BLS	L_ReceiveOne46
0x1A22	0x9902    LDR	R1, [SP, #8]
0x1A24	0xB289    UXTH	R1, R1
0x1A26	0x207F    MOVS	R0, #127
0x1A28	0x1A40    SUBS	R0, R0, R1
0x1A2A	0x9003    STR	R0, [SP, #12]
L_ReceiveOne46:
;PhotoTransdModbusV2.c, 436 :: 		resp_buffer[2]=regs_count*2;//количество байт
0x1A2C	0x9803    LDR	R0, [SP, #12]
0x1A2E	0xE02D    B	#90
0x1A30	0x21280000  	?ICSReceiveOne_reg_rd_L0+0
0x1A34	0x38004001  	USART1_CR1+0
0x1A38	0x381C4001  	RXNE_USART1_ISR_bit+0
0x1A3C	0x38144001  	USART1_RTOR+0
0x1A40	0x38044001  	USART1_CR2+0
0x1A44	0x00662000  	_pnt_buffer+0
0x1A48	0x00B82000  	_buffer+0
0x1A4C	0x38244001  	USART1_RDR+0
0x1A50	0x381C4001  	RTOF_bit+0
0x1A54	0x38204001  	USART1_ICR+0
0x1A58	0x00682000  	_CRC+0
0x1A5C	0x00002000  	_dev_adress+0
0x1A60	0x01BC2000  	_resp_buffer+0
0x1A64	0x00B92000  	_buffer+1
0x1A68	0x01BD2000  	_resp_buffer+1
0x1A6C	0x00BA2000  	_buffer+2
0x1A70	0x00BB2000  	_buffer+3
0x1A74	0x00BC2000  	_buffer+4
0x1A78	0x00BD2000  	_buffer+5
0x1A7C	0x01BE2000  	_resp_buffer+2
0x1A80	0x00702000  	_ModbusRegister+0
0x1A84	0x00692000  	_CRC+1
0x1A88	0x00144800  	GPIOA_ODR+0
0x1A8C	0xB280    UXTH	R0, R0
0x1A8E	0x0041    LSLS	R1, R0, #1
0x1A90	0x48B4    LDR	R0, [PC, #720]
0x1A92	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 438 :: 		for (ggg=0;ggg<regs_count;ggg++){
; ggg start address is: 12 (R3)
0x1A94	0x2300    MOVS	R3, #0
; ggg end address is: 12 (R3)
L_ReceiveOne47:
; ggg start address is: 12 (R3)
0x1A96	0x9803    LDR	R0, [SP, #12]
0x1A98	0xB280    UXTH	R0, R0
0x1A9A	0x4283    CMP	R3, R0
0x1A9C	0xD23A    BCS	L_ReceiveOne48
;PhotoTransdModbusV2.c, 439 :: 		if ((ggg+reg_rd)==0)
0x1A9E	0x9802    LDR	R0, [SP, #8]
0x1AA0	0xB280    UXTH	R0, R0
0x1AA2	0x1818    ADDS	R0, R3, R0
0x1AA4	0xB280    UXTH	R0, R0
0x1AA6	0x2800    CMP	R0, #0
0x1AA8	0xD11F    BNE	L_ReceiveOne50
;PhotoTransdModbusV2.c, 441 :: 		tmp=ReadAdc();
0x1AAA	0x9300    STR	R3, [SP, #0]
0x1AAC	0xF7FFF8EA  BL	_ReadADC+0
0x1AB0	0x9B00    LDR	R3, [SP, #0]
0x1AB2	0xB21B    SXTH	R3, R3
0x1AB4	0x9004    STR	R0, [SP, #16]
;PhotoTransdModbusV2.c, 442 :: 		resp_buffer[3+2*ggg]=Hi(tmp);
0x1AB6	0x0058    LSLS	R0, R3, #1
0x1AB8	0xB200    SXTH	R0, R0
0x1ABA	0x1CC1    ADDS	R1, R0, #3
0x1ABC	0xB209    SXTH	R1, R1
0x1ABE	0x48AA    LDR	R0, [PC, #680]
0x1AC0	0x1841    ADDS	R1, R0, R1
0x1AC2	0x2210    MOVS	R2, #16
0x1AC4	0x446A    ADD	R2, SP, R2
0x1AC6	0x1C50    ADDS	R0, R2, #1
0x1AC8	0x7800    LDRB	R0, [R0, #0]
0x1ACA	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 443 :: 		resp_buffer[3+2*ggg+1]=Lo(tmp);
0x1ACC	0x0058    LSLS	R0, R3, #1
0x1ACE	0xB200    SXTH	R0, R0
0x1AD0	0x3003    ADDS	R0, #3
0x1AD2	0xB200    SXTH	R0, R0
0x1AD4	0x1C41    ADDS	R1, R0, #1
0x1AD6	0xB209    SXTH	R1, R1
0x1AD8	0x48A3    LDR	R0, [PC, #652]
0x1ADA	0x1841    ADDS	R1, R0, R1
0x1ADC	0x7810    LDRB	R0, [R2, #0]
0x1ADE	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 444 :: 		iii++;
0x1AE0	0x49A2    LDR	R1, [PC, #648]
0x1AE2	0x8808    LDRH	R0, [R1, #0]
0x1AE4	0x3001    ADDS	R0, #1
0x1AE6	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 445 :: 		}
0x1AE8	0xE011    B	L_ReceiveOne51
L_ReceiveOne50:
;PhotoTransdModbusV2.c, 454 :: 		resp_buffer[3+2*ggg]=0;
0x1AEA	0x0058    LSLS	R0, R3, #1
0x1AEC	0xB200    SXTH	R0, R0
0x1AEE	0x1CC1    ADDS	R1, R0, #3
0x1AF0	0xB209    SXTH	R1, R1
0x1AF2	0x489D    LDR	R0, [PC, #628]
0x1AF4	0x1841    ADDS	R1, R0, R1
0x1AF6	0x2000    MOVS	R0, #0
0x1AF8	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 455 :: 		resp_buffer[3+2*ggg+1]=0;//если выходим за границу - подставляем пустые
0x1AFA	0x0058    LSLS	R0, R3, #1
0x1AFC	0xB200    SXTH	R0, R0
0x1AFE	0x3003    ADDS	R0, #3
0x1B00	0xB200    SXTH	R0, R0
0x1B02	0x1C41    ADDS	R1, R0, #1
0x1B04	0xB209    SXTH	R1, R1
0x1B06	0x4898    LDR	R0, [PC, #608]
0x1B08	0x1841    ADDS	R1, R0, R1
0x1B0A	0x2000    MOVS	R0, #0
0x1B0C	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 456 :: 		}
L_ReceiveOne51:
;PhotoTransdModbusV2.c, 438 :: 		for (ggg=0;ggg<regs_count;ggg++){
0x1B0E	0x3301    ADDS	R3, #1
0x1B10	0xB21B    SXTH	R3, R3
;PhotoTransdModbusV2.c, 457 :: 		}
; ggg end address is: 12 (R3)
0x1B12	0xE7C0    B	L_ReceiveOne47
L_ReceiveOne48:
;PhotoTransdModbusV2.c, 458 :: 		pnt_resp_buffer=3+regs_count*2;//указатель на общее количество
0x1B14	0x9803    LDR	R0, [SP, #12]
0x1B16	0xB280    UXTH	R0, R0
0x1B18	0x0040    LSLS	R0, R0, #1
0x1B1A	0xB280    UXTH	R0, R0
0x1B1C	0x3003    ADDS	R0, #3
; pnt_resp_buffer start address is: 8 (R2)
0x1B1E	0xB282    UXTH	R2, R0
;PhotoTransdModbusV2.c, 459 :: 		CRC=crc16(resp_buffer,pnt_resp_buffer);
0x1B20	0x9200    STR	R2, [SP, #0]
0x1B22	0xB281    UXTH	R1, R0
0x1B24	0x4890    LDR	R0, [PC, #576]
0x1B26	0xF7FFFAD3  BL	PhotoTransdModbusV2_crc16+0
0x1B2A	0x9A00    LDR	R2, [SP, #0]
0x1B2C	0xB292    UXTH	R2, R2
0x1B2E	0x4990    LDR	R1, [PC, #576]
0x1B30	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 460 :: 		resp_buffer[pnt_resp_buffer]=Hi(CRC);
0x1B32	0x488D    LDR	R0, [PC, #564]
0x1B34	0x1881    ADDS	R1, R0, R2
0x1B36	0x488F    LDR	R0, [PC, #572]
0x1B38	0x7800    LDRB	R0, [R0, #0]
0x1B3A	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 461 :: 		resp_buffer[pnt_resp_buffer+1]=Lo(CRC);//контрольная сумма
0x1B3C	0x1C51    ADDS	R1, R2, #1
0x1B3E	0xB289    UXTH	R1, R1
0x1B40	0x4889    LDR	R0, [PC, #548]
0x1B42	0x1841    ADDS	R1, R0, R1
0x1B44	0x488A    LDR	R0, [PC, #552]
0x1B46	0x7800    LDRB	R0, [R0, #0]
0x1B48	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 464 :: 		pnt_resp_buffer+=2;
0x1B4A	0x1C90    ADDS	R0, R2, #2
; pnt_resp_buffer end address is: 8 (R2)
; pnt_resp_buffer start address is: 12 (R3)
0x1B4C	0xB283    UXTH	R3, R0
;PhotoTransdModbusV2.c, 466 :: 		Dir_RS485=1;//передача
0x1B4E	0x4A8A    LDR	R2, [PC, #552]
0x1B50	0x6810    LDR	R0, [R2, #0]
0x1B52	0x2180    MOVS	R1, #128
0x1B54	0x4308    ORRS	R0, R1
0x1B56	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 467 :: 		for (ggg=0;ggg<pnt_resp_buffer;ggg++){
; ggg start address is: 20 (R5)
0x1B58	0x2500    MOVS	R5, #0
; pnt_resp_buffer end address is: 12 (R3)
; ggg end address is: 20 (R5)
0x1B5A	0xB29C    UXTH	R4, R3
L_ReceiveOne52:
; ggg start address is: 20 (R5)
; pnt_resp_buffer start address is: 16 (R4)
0x1B5C	0x42A5    CMP	R5, R4
0x1B5E	0xD207    BCS	L_ReceiveOne53
;PhotoTransdModbusV2.c, 468 :: 		UART1_Write(resp_buffer[ggg]);
0x1B60	0x4881    LDR	R0, [PC, #516]
0x1B62	0x1940    ADDS	R0, R0, R5
0x1B64	0x7800    LDRB	R0, [R0, #0]
0x1B66	0xF7FFFAD7  BL	_UART1_Write+0
;PhotoTransdModbusV2.c, 467 :: 		for (ggg=0;ggg<pnt_resp_buffer;ggg++){
0x1B6A	0x3501    ADDS	R5, #1
0x1B6C	0xB22D    SXTH	R5, R5
;PhotoTransdModbusV2.c, 469 :: 		}
; pnt_resp_buffer end address is: 16 (R4)
; ggg end address is: 20 (R5)
0x1B6E	0xE7F5    B	L_ReceiveOne52
L_ReceiveOne53:
;PhotoTransdModbusV2.c, 470 :: 		Dir_RS485=0;//прием
0x1B70	0x4A81    LDR	R2, [PC, #516]
0x1B72	0x6810    LDR	R0, [R2, #0]
0x1B74	0x2180    MOVS	R1, #128
0x1B76	0x4388    BICS	R0, R1
0x1B78	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 472 :: 		}
0x1B7A	0xE138    B	L_ReceiveOne55
L_ReceiveOne44:
;PhotoTransdModbusV2.c, 474 :: 		else  if (buffer[1]==0x10)
; changed start address is: 24 (R6)
; creb start address is: 20 (R5)
0x1B7C	0x487F    LDR	R0, [PC, #508]
0x1B7E	0x7800    LDRB	R0, [R0, #0]
0x1B80	0x2810    CMP	R0, #16
0x1B82	0xD000    BEQ	#0
0x1B84	0xE133    B	L_ReceiveOne56
;PhotoTransdModbusV2.c, 476 :: 		resp_buffer[1]=0x10;//готовим ответ - функция записи холдингов
0x1B86	0x2110    MOVS	R1, #16
0x1B88	0x487D    LDR	R0, [PC, #500]
0x1B8A	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 478 :: 		reg_rd=buffer[3]+buffer[2]*0x100;
0x1B8C	0x487D    LDR	R0, [PC, #500]
0x1B8E	0x7800    LDRB	R0, [R0, #0]
0x1B90	0x0201    LSLS	R1, R0, #8
0x1B92	0xB209    SXTH	R1, R1
0x1B94	0x487C    LDR	R0, [PC, #496]
0x1B96	0x7800    LDRB	R0, [R0, #0]
0x1B98	0x1843    ADDS	R3, R0, R1
0x1B9A	0x9302    STR	R3, [SP, #8]
;PhotoTransdModbusV2.c, 480 :: 		regs_count=buffer[5]+buffer[4]*0x100;
0x1B9C	0x487B    LDR	R0, [PC, #492]
0x1B9E	0x7800    LDRB	R0, [R0, #0]
0x1BA0	0x0201    LSLS	R1, R0, #8
0x1BA2	0xB209    SXTH	R1, R1
0x1BA4	0x487A    LDR	R0, [PC, #488]
0x1BA6	0x7800    LDRB	R0, [R0, #0]
0x1BA8	0x1840    ADDS	R0, R0, R1
0x1BAA	0x9003    STR	R0, [SP, #12]
;PhotoTransdModbusV2.c, 482 :: 		resp_buffer[2]=Hi(reg_rd);
0x1BAC	0x2208    MOVS	R2, #8
0x1BAE	0x446A    ADD	R2, SP, R2
0x1BB0	0x1C50    ADDS	R0, R2, #1
0x1BB2	0x7801    LDRB	R1, [R0, #0]
0x1BB4	0x486B    LDR	R0, [PC, #428]
0x1BB6	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 483 :: 		resp_buffer[3]=Lo(reg_rd);
0x1BB8	0x7811    LDRB	R1, [R2, #0]
0x1BBA	0x4876    LDR	R0, [PC, #472]
0x1BBC	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 485 :: 		resp_buffer[4]=Hi(regs_count);
0x1BBE	0x220C    MOVS	R2, #12
0x1BC0	0x446A    ADD	R2, SP, R2
0x1BC2	0x1C50    ADDS	R0, R2, #1
0x1BC4	0x7801    LDRB	R1, [R0, #0]
0x1BC6	0x4874    LDR	R0, [PC, #464]
0x1BC8	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 486 :: 		resp_buffer[5]=Lo(regs_count);
0x1BCA	0x7811    LDRB	R1, [R2, #0]
0x1BCC	0x4873    LDR	R0, [PC, #460]
0x1BCE	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 489 :: 		if (reg_rd>127){reg_rd=127;};//выход за границу
0x1BD0	0xB298    UXTH	R0, R3
0x1BD2	0x287F    CMP	R0, #127
0x1BD4	0xD901    BLS	L_ReceiveOne57
0x1BD6	0x207F    MOVS	R0, #127
0x1BD8	0x9002    STR	R0, [SP, #8]
L_ReceiveOne57:
;PhotoTransdModbusV2.c, 490 :: 		if ((reg_rd+regs_count)>127){regs_count=127-reg_rd;};//выход за границу
0x1BDA	0x9903    LDR	R1, [SP, #12]
0x1BDC	0xB289    UXTH	R1, R1
0x1BDE	0x9802    LDR	R0, [SP, #8]
0x1BE0	0xB280    UXTH	R0, R0
0x1BE2	0x1840    ADDS	R0, R0, R1
0x1BE4	0xB280    UXTH	R0, R0
0x1BE6	0x287F    CMP	R0, #127
0x1BE8	0xD904    BLS	L_ReceiveOne58
0x1BEA	0x9902    LDR	R1, [SP, #8]
0x1BEC	0xB289    UXTH	R1, R1
0x1BEE	0x207F    MOVS	R0, #127
0x1BF0	0x1A40    SUBS	R0, R0, R1
0x1BF2	0x9003    STR	R0, [SP, #12]
L_ReceiveOne58:
;PhotoTransdModbusV2.c, 491 :: 		for (ggg=0;ggg<regs_count;ggg++){
; ggg start address is: 12 (R3)
0x1BF4	0x2300    MOVS	R3, #0
; creb end address is: 20 (R5)
; changed end address is: 24 (R6)
; ggg end address is: 12 (R3)
0x1BF6	0xB2EC    UXTB	R4, R5
0x1BF8	0xB2F5    UXTB	R5, R6
L_ReceiveOne59:
; ggg start address is: 12 (R3)
; changed start address is: 20 (R5)
; creb start address is: 16 (R4)
0x1BFA	0x9803    LDR	R0, [SP, #12]
0x1BFC	0xB280    UXTH	R0, R0
0x1BFE	0x4283    CMP	R3, R0
0x1C00	0xD300    BCC	#0
0x1C02	0xE07C    B	L_ReceiveOne60
;PhotoTransdModbusV2.c, 492 :: 		if ((ggg+reg_rd)==cmd_dev_adress)  //читаем адрес
0x1C04	0x9802    LDR	R0, [SP, #8]
0x1C06	0xB280    UXTH	R0, R0
0x1C08	0x1818    ADDS	R0, R3, R0
0x1C0A	0xB280    UXTH	R0, R0
0x1C0C	0x2803    CMP	R0, #3
0x1C0E	0xD112    BNE	L_ReceiveOne62
; changed end address is: 20 (R5)
;PhotoTransdModbusV2.c, 494 :: 		dev_adress=buffer[7+ggg*2]*0x100+buffer[7+ggg*2+1];
0x1C10	0x0058    LSLS	R0, R3, #1
0x1C12	0xB200    SXTH	R0, R0
0x1C14	0x1DC1    ADDS	R1, R0, #7
0x1C16	0xB209    SXTH	R1, R1
0x1C18	0x4861    LDR	R0, [PC, #388]
0x1C1A	0x1840    ADDS	R0, R0, R1
0x1C1C	0x7800    LDRB	R0, [R0, #0]
0x1C1E	0x0202    LSLS	R2, R0, #8
0x1C20	0xB212    SXTH	R2, R2
0x1C22	0x3101    ADDS	R1, #1
0x1C24	0xB209    SXTH	R1, R1
0x1C26	0x485E    LDR	R0, [PC, #376]
0x1C28	0x1840    ADDS	R0, R0, R1
0x1C2A	0x7800    LDRB	R0, [R0, #0]
0x1C2C	0x1811    ADDS	R1, R2, R0
0x1C2E	0x485D    LDR	R0, [PC, #372]
0x1C30	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 495 :: 		changed=1;
; changed start address is: 20 (R5)
0x1C32	0x2501    MOVS	R5, #1
;PhotoTransdModbusV2.c, 496 :: 		}
0x1C34	0xE060    B	L_ReceiveOne63
L_ReceiveOne62:
;PhotoTransdModbusV2.c, 498 :: 		if ((ggg+reg_rd)==cmd_baudrate)  //читаем битрейт
0x1C36	0x9802    LDR	R0, [SP, #8]
0x1C38	0xB280    UXTH	R0, R0
0x1C3A	0x1818    ADDS	R0, R3, R0
0x1C3C	0xB280    UXTH	R0, R0
0x1C3E	0x2804    CMP	R0, #4
0x1C40	0xD11D    BNE	L_ReceiveOne64
;PhotoTransdModbusV2.c, 500 :: 		fff=buffer[7+ggg*2]*0x100+buffer[7+ggg*2+1];
0x1C42	0x0058    LSLS	R0, R3, #1
0x1C44	0xB200    SXTH	R0, R0
0x1C46	0x1DC1    ADDS	R1, R0, #7
0x1C48	0xB209    SXTH	R1, R1
0x1C4A	0x4855    LDR	R0, [PC, #340]
0x1C4C	0x1840    ADDS	R0, R0, R1
0x1C4E	0x7800    LDRB	R0, [R0, #0]
0x1C50	0x0202    LSLS	R2, R0, #8
0x1C52	0xB212    SXTH	R2, R2
0x1C54	0x3101    ADDS	R1, #1
0x1C56	0xB209    SXTH	R1, R1
0x1C58	0x4851    LDR	R0, [PC, #324]
0x1C5A	0x1840    ADDS	R0, R0, R1
0x1C5C	0x7800    LDRB	R0, [R0, #0]
0x1C5E	0x1811    ADDS	R1, R2, R0
0x1C60	0x4851    LDR	R0, [PC, #324]
0x1C62	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 501 :: 		if (baudrate_test(fff))
0x1C64	0xB288    UXTH	R0, R1
0x1C66	0xF7FFF9D5  BL	_baudrate_test+0
0x1C6A	0x2800    CMP	R0, #0
0x1C6C	0xD006    BEQ	L__ReceiveOne89
; changed end address is: 20 (R5)
;PhotoTransdModbusV2.c, 503 :: 		baudrate=fff;       //меняем
0x1C6E	0x484E    LDR	R0, [PC, #312]
0x1C70	0x8801    LDRH	R1, [R0, #0]
0x1C72	0x484E    LDR	R0, [PC, #312]
0x1C74	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 504 :: 		changed=1;
; changed start address is: 0 (R0)
0x1C76	0x2001    MOVS	R0, #1
; changed end address is: 0 (R0)
0x1C78	0xB2C5    UXTB	R5, R0
;PhotoTransdModbusV2.c, 505 :: 		};
0x1C7A	0xE7FF    B	L_ReceiveOne65
L__ReceiveOne89:
;PhotoTransdModbusV2.c, 501 :: 		if (baudrate_test(fff))
;PhotoTransdModbusV2.c, 505 :: 		};
L_ReceiveOne65:
;PhotoTransdModbusV2.c, 506 :: 		}
; changed start address is: 20 (R5)
0x1C7C	0xE03C    B	L_ReceiveOne66
L_ReceiveOne64:
;PhotoTransdModbusV2.c, 508 :: 		if ((ggg+reg_rd)==cmd_command)  //читаем команду
0x1C7E	0x9802    LDR	R0, [SP, #8]
0x1C80	0xB280    UXTH	R0, R0
0x1C82	0x1818    ADDS	R0, R3, R0
0x1C84	0xB280    UXTH	R0, R0
0x1C86	0x2808    CMP	R0, #8
0x1C88	0xD132    BNE	L__ReceiveOne91
;PhotoTransdModbusV2.c, 510 :: 		fff=buffer[7+ggg*2]*0x100+buffer[7+ggg*2+1];
0x1C8A	0x0058    LSLS	R0, R3, #1
0x1C8C	0xB200    SXTH	R0, R0
0x1C8E	0x1DC1    ADDS	R1, R0, #7
0x1C90	0xB209    SXTH	R1, R1
0x1C92	0x4843    LDR	R0, [PC, #268]
0x1C94	0x1840    ADDS	R0, R0, R1
0x1C96	0x7800    LDRB	R0, [R0, #0]
0x1C98	0x0202    LSLS	R2, R0, #8
0x1C9A	0xB212    SXTH	R2, R2
0x1C9C	0x3101    ADDS	R1, #1
0x1C9E	0xB209    SXTH	R1, R1
0x1CA0	0x483F    LDR	R0, [PC, #252]
0x1CA2	0x1840    ADDS	R0, R0, R1
0x1CA4	0x7800    LDRB	R0, [R0, #0]
0x1CA6	0x1811    ADDS	R1, R2, R0
0x1CA8	0x483F    LDR	R0, [PC, #252]
0x1CAA	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 512 :: 		if (fff==cmd_reboot){creb=1;} else //флаг перезагрузки
0x1CAC	0xB288    UXTH	R0, R1
0x1CAE	0x2801    CMP	R0, #1
0x1CB0	0xD102    BNE	L_ReceiveOne68
; creb end address is: 16 (R4)
; creb start address is: 4 (R1)
0x1CB2	0x2101    MOVS	R1, #1
; creb end address is: 4 (R1)
0x1CB4	0xB2E8    UXTB	R0, R5
0x1CB6	0xE016    B	L_ReceiveOne69
L_ReceiveOne68:
;PhotoTransdModbusV2.c, 513 :: 		if (fff==cmd_counter_reset){iii=0;} else //сброс счетчика
; creb start address is: 16 (R4)
0x1CB8	0x483B    LDR	R0, [PC, #236]
0x1CBA	0x8800    LDRH	R0, [R0, #0]
0x1CBC	0x2802    CMP	R0, #2
0x1CBE	0xD104    BNE	L_ReceiveOne70
0x1CC0	0x2100    MOVS	R1, #0
0x1CC2	0x482A    LDR	R0, [PC, #168]
0x1CC4	0x8001    STRH	R1, [R0, #0]
0x1CC6	0xB2E8    UXTB	R0, R5
0x1CC8	0xE00C    B	L_ReceiveOne71
L_ReceiveOne70:
;PhotoTransdModbusV2.c, 514 :: 		if (fff==cmd_default_settings){dev_adress=default_dev_adress; baudrate=default_baudrate;changed=1;};
0x1CCA	0x4837    LDR	R0, [PC, #220]
0x1CCC	0x8800    LDRH	R0, [R0, #0]
0x1CCE	0x2802    CMP	R0, #2
0x1CD0	0xD107    BNE	L__ReceiveOne90
; changed end address is: 20 (R5)
0x1CD2	0x2101    MOVS	R1, #1
0x1CD4	0x4833    LDR	R0, [PC, #204]
0x1CD6	0x7001    STRB	R1, [R0, #0]
0x1CD8	0x2106    MOVS	R1, #6
0x1CDA	0x4834    LDR	R0, [PC, #208]
0x1CDC	0x8001    STRH	R1, [R0, #0]
; changed start address is: 0 (R0)
0x1CDE	0x2001    MOVS	R0, #1
; changed end address is: 0 (R0)
0x1CE0	0xE000    B	L_ReceiveOne72
L__ReceiveOne90:
0x1CE2	0xB2E8    UXTB	R0, R5
L_ReceiveOne72:
; changed start address is: 0 (R0)
; changed end address is: 0 (R0)
L_ReceiveOne71:
; changed start address is: 0 (R0)
0x1CE4	0xB2E1    UXTB	R1, R4
; changed end address is: 0 (R0)
; creb end address is: 16 (R4)
L_ReceiveOne69:
;PhotoTransdModbusV2.c, 515 :: 		}
; changed start address is: 0 (R0)
; creb start address is: 4 (R1)
0x1CE6	0x9100    STR	R1, [SP, #0]
; changed end address is: 0 (R0)
; creb end address is: 4 (R1)
0x1CE8	0xB2C1    UXTB	R1, R0
0x1CEA	0x9800    LDR	R0, [SP, #0]
0x1CEC	0xB2C0    UXTB	R0, R0
0x1CEE	0xE001    B	L_ReceiveOne67
L__ReceiveOne91:
;PhotoTransdModbusV2.c, 508 :: 		if ((ggg+reg_rd)==cmd_command)  //читаем команду
0x1CF0	0xB2E0    UXTB	R0, R4
0x1CF2	0xB2E9    UXTB	R1, R5
;PhotoTransdModbusV2.c, 515 :: 		}
L_ReceiveOne67:
; creb start address is: 0 (R0)
; changed start address is: 4 (R1)
0x1CF4	0xB2C4    UXTB	R4, R0
; creb end address is: 0 (R0)
; changed end address is: 4 (R1)
0x1CF6	0xB2CD    UXTB	R5, R1
L_ReceiveOne66:
; changed start address is: 20 (R5)
; creb start address is: 16 (R4)
; creb end address is: 16 (R4)
; changed end address is: 20 (R5)
L_ReceiveOne63:
;PhotoTransdModbusV2.c, 491 :: 		for (ggg=0;ggg<regs_count;ggg++){
; creb start address is: 16 (R4)
; changed start address is: 20 (R5)
0x1CF8	0x3301    ADDS	R3, #1
0x1CFA	0xB21B    SXTH	R3, R3
;PhotoTransdModbusV2.c, 516 :: 		}
; ggg end address is: 12 (R3)
0x1CFC	0xE77D    B	L_ReceiveOne59
L_ReceiveOne60:
;PhotoTransdModbusV2.c, 518 :: 		CRC=crc16(resp_buffer,6);
0x1CFE	0x9400    STR	R4, [SP, #0]
0x1D00	0x9501    STR	R5, [SP, #4]
0x1D02	0x2106    MOVS	R1, #6
0x1D04	0x4818    LDR	R0, [PC, #96]
0x1D06	0xF7FFF9E3  BL	PhotoTransdModbusV2_crc16+0
0x1D0A	0x9D01    LDR	R5, [SP, #4]
0x1D0C	0xB2ED    UXTB	R5, R5
0x1D0E	0x9C00    LDR	R4, [SP, #0]
0x1D10	0xB2E4    UXTB	R4, R4
0x1D12	0x4917    LDR	R1, [PC, #92]
0x1D14	0x8008    STRH	R0, [R1, #0]
;PhotoTransdModbusV2.c, 519 :: 		resp_buffer[6]=Hi(CRC);
0x1D16	0x4817    LDR	R0, [PC, #92]
0x1D18	0x7801    LDRB	R1, [R0, #0]
0x1D1A	0x4825    LDR	R0, [PC, #148]
0x1D1C	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 520 :: 		resp_buffer[7]=Lo(CRC);//контрольная сумма
0x1D1E	0x4814    LDR	R0, [PC, #80]
0x1D20	0x7801    LDRB	R1, [R0, #0]
0x1D22	0x4824    LDR	R0, [PC, #144]
0x1D24	0x7001    STRB	R1, [R0, #0]
;PhotoTransdModbusV2.c, 525 :: 		Dir_RS485=1;//передача
0x1D26	0x4A14    LDR	R2, [PC, #80]
0x1D28	0x6810    LDR	R0, [R2, #0]
0x1D2A	0x2180    MOVS	R1, #128
0x1D2C	0x4308    ORRS	R0, R1
0x1D2E	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 526 :: 		for (ggg=0;ggg<8;ggg++){
; ggg start address is: 0 (R0)
0x1D30	0x2000    MOVS	R0, #0
; creb end address is: 16 (R4)
; changed end address is: 20 (R5)
; ggg end address is: 0 (R0)
0x1D32	0xB2E3    UXTB	R3, R4
0x1D34	0xB2EC    UXTB	R4, R5
0x1D36	0xB205    SXTH	R5, R0
L_ReceiveOne73:
; ggg start address is: 20 (R5)
; creb start address is: 12 (R3)
; changed start address is: 16 (R4)
0x1D38	0x2D08    CMP	R5, #8
0x1D3A	0xDA0A    BGE	L_ReceiveOne74
;PhotoTransdModbusV2.c, 527 :: 		UART1_Write(resp_buffer[ggg]);
0x1D3C	0x480A    LDR	R0, [PC, #40]
0x1D3E	0x1940    ADDS	R0, R0, R5
0x1D40	0x7800    LDRB	R0, [R0, #0]
0x1D42	0x9300    STR	R3, [SP, #0]
0x1D44	0xF7FFF9E8  BL	_UART1_Write+0
0x1D48	0x9B00    LDR	R3, [SP, #0]
0x1D4A	0xB2DB    UXTB	R3, R3
;PhotoTransdModbusV2.c, 526 :: 		for (ggg=0;ggg<8;ggg++){
0x1D4C	0x3501    ADDS	R5, #1
0x1D4E	0xB22D    SXTH	R5, R5
;PhotoTransdModbusV2.c, 528 :: 		}
; ggg end address is: 20 (R5)
0x1D50	0xE7F2    B	L_ReceiveOne73
L_ReceiveOne74:
;PhotoTransdModbusV2.c, 529 :: 		Dir_RS485=0;//прием
0x1D52	0x4A09    LDR	R2, [PC, #36]
0x1D54	0x6810    LDR	R0, [R2, #0]
0x1D56	0x2180    MOVS	R1, #128
0x1D58	0x4388    BICS	R0, R1
0x1D5A	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 532 :: 		if (changed) {//пишем
0x1D5C	0x2C00    CMP	R4, #0
0x1D5E	0xD041    BEQ	L_ReceiveOne76
; changed end address is: 16 (R4)
;PhotoTransdModbusV2.c, 533 :: 		SaveSettings();
0x1D60	0x9300    STR	R3, [SP, #0]
0x1D62	0xE029    B	#82
0x1D64	0x01BE2000  	_resp_buffer+2
0x1D68	0x01BC2000  	_resp_buffer+0
0x1D6C	0x00082000  	_iii+0
0x1D70	0x00682000  	_CRC+0
0x1D74	0x00692000  	_CRC+1
0x1D78	0x00144800  	GPIOA_ODR+0
0x1D7C	0x00B92000  	_buffer+1
0x1D80	0x01BD2000  	_resp_buffer+1
0x1D84	0x00BA2000  	_buffer+2
0x1D88	0x00BB2000  	_buffer+3
0x1D8C	0x00BC2000  	_buffer+4
0x1D90	0x00BD2000  	_buffer+5
0x1D94	0x01BF2000  	_resp_buffer+3
0x1D98	0x01C02000  	_resp_buffer+4
0x1D9C	0x01C12000  	_resp_buffer+5
0x1DA0	0x00B82000  	_buffer+0
0x1DA4	0x00002000  	_dev_adress+0
0x1DA8	0x006A2000  	_fff+0
0x1DAC	0x00022000  	_baudrate+0
0x1DB0	0x01C22000  	_resp_buffer+6
0x1DB4	0x01C32000  	_resp_buffer+7
0x1DB8	0xF7FFF916  BL	_SaveSettings+0
0x1DBC	0x9B00    LDR	R3, [SP, #0]
0x1DBE	0xB2DB    UXTB	R3, R3
;PhotoTransdModbusV2.c, 534 :: 		UART1_Init(baudrate_bid(baudrate));//выставляем новую скорость
0x1DC0	0x4814    LDR	R0, [PC, #80]
0x1DC2	0x8800    LDRH	R0, [R0, #0]
0x1DC4	0xF7FFFAD2  BL	_baudrate_bid+0
0x1DC8	0x9300    STR	R3, [SP, #0]
0x1DCA	0xF7FFFB45  BL	_UART1_Init+0
0x1DCE	0x9B00    LDR	R3, [SP, #0]
0x1DD0	0xB2DB    UXTB	R3, R3
;PhotoTransdModbusV2.c, 535 :: 		USART1_RTOR= 35;//таймаут 3,5 длины символа - 1+8+1 бит на символ, 35 бит
0x1DD2	0x2123    MOVS	R1, #35
0x1DD4	0x4810    LDR	R0, [PC, #64]
0x1DD6	0x6001    STR	R1, [R0, #0]
;PhotoTransdModbusV2.c, 536 :: 		USART1_CR2.RTOEN=1;  //таймаут включен
0x1DD8	0x4A10    LDR	R2, [PC, #64]
0x1DDA	0x6810    LDR	R0, [R2, #0]
0x1DDC	0x2101    MOVS	R1, #1
0x1DDE	0x05C9    LSLS	R1, R1, #23
0x1DE0	0x4308    ORRS	R0, R1
0x1DE2	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 538 :: 		};
L_ReceiveOne76:
;PhotoTransdModbusV2.c, 539 :: 		if (creb) {//перезагружаемся
0x1DE4	0x2B00    CMP	R3, #0
0x1DE6	0xD001    BEQ	L_ReceiveOne77
; creb end address is: 12 (R3)
;PhotoTransdModbusV2.c, 541 :: 		SystemReset();
0x1DE8	0xF7FFF968  BL	_SystemReset+0
;PhotoTransdModbusV2.c, 542 :: 		};
L_ReceiveOne77:
;PhotoTransdModbusV2.c, 547 :: 		} else  {
0x1DEC	0xE7FF    B	L_ReceiveOne78
L_ReceiveOne56:
;PhotoTransdModbusV2.c, 549 :: 		};  //и выходим отседа
L_ReceiveOne78:
L_ReceiveOne55:
L_ReceiveOne43:
;PhotoTransdModbusV2.c, 551 :: 		}
0x1DEE	0xE7FF    B	L_ReceiveOne79
L_ReceiveOne31:
;PhotoTransdModbusV2.c, 555 :: 		};  //и выходим отседа
L_ReceiveOne79:
;PhotoTransdModbusV2.c, 556 :: 		}
0x1DF0	0xE7FF    B	L_ReceiveOne80
L_ReceiveOne30:
;PhotoTransdModbusV2.c, 560 :: 		};  //и выходим отседа
L_ReceiveOne80:
;PhotoTransdModbusV2.c, 562 :: 		pnt_buffer=0;
0x1DF2	0x2100    MOVS	R1, #0
0x1DF4	0x480A    LDR	R0, [PC, #40]
0x1DF6	0x8001    STRH	R1, [R0, #0]
;PhotoTransdModbusV2.c, 563 :: 		buffer[pnt_buffer]=0;//символ конца
0x1DF8	0x8801    LDRH	R1, [R0, #0]
0x1DFA	0x480A    LDR	R0, [PC, #40]
0x1DFC	0x1841    ADDS	R1, R0, R1
0x1DFE	0x2000    MOVS	R0, #0
0x1E00	0x7008    STRB	R0, [R1, #0]
;PhotoTransdModbusV2.c, 566 :: 		};
L_ReceiveOne29:
;PhotoTransdModbusV2.c, 567 :: 		USART1_CR1.RXNEIE = 1;             //бит разрешения прерывание от приемника
0x1E02	0x4A09    LDR	R2, [PC, #36]
0x1E04	0x6810    LDR	R0, [R2, #0]
0x1E06	0x2140    MOVS	R1, #64
0x1E08	0x4308    ORRS	R0, R1
0x1E0A	0x6010    STR	R0, [R2, #0]
;PhotoTransdModbusV2.c, 568 :: 		}
L_end_ReceiveOne:
0x1E0C	0xB006    ADD	SP, SP, #24
0x1E0E	0xBCF0    POP	(R4, R5, R6, R7)
0x1E10	0xBD00    POP	(R15)
0x1E12	0xBF00    NOP
0x1E14	0x00022000  	_baudrate+0
0x1E18	0x38144001  	USART1_RTOR+0
0x1E1C	0x38044001  	USART1_CR2+0
0x1E20	0x00662000  	_pnt_buffer+0
0x1E24	0x00B82000  	_buffer+0
0x1E28	0x38004001  	USART1_CR1+0
; end of _ReceiveOne
_SystemReset:
;__Lib_System.c, 284 :: 		
0x10BC	0xB500    PUSH	(R14)
;__Lib_System.c, 290 :: 		
0x10BE	0x4902    LDR	R1, [PC, #8]
0x10C0	0x4802    LDR	R0, [PC, #8]
0x10C2	0x6001    STR	R1, [R0, #0]
;__Lib_System.c, 295 :: 		
L_SystemReset17:
;__Lib_System.c, 297 :: 		
0x10C4	0xE7FE    B	L_SystemReset17
;__Lib_System.c, 298 :: 		
L_end_SystemReset:
0x10C6	0xBD00    POP	(R15)
0x10C8	0x000405FA  	#100270084
0x10CC	0xED0CE000  	SCB_AIRCR+0
; end of _SystemReset
PhotoTransdModbusV2_crc16:
;PhotoTransdModbusV2.c, 206 :: 		static unsigned int crc16(char *buffer, unsigned int buffer_length)     //процедура расчета контролькой суммы из чужого проекта
; buffer_length start address is: 4 (R1)
; buffer start address is: 0 (R0)
0x10D0	0xB500    PUSH	(R14)
0x10D2	0xB28A    UXTH	R2, R1
0x10D4	0x4601    MOV	R1, R0
; buffer_length end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 4 (R1)
; buffer_length start address is: 8 (R2)
;PhotoTransdModbusV2.c, 208 :: 		unsigned char crc_hi = 0xFF; /* high CRC byte initialized */
; crc_hi start address is: 20 (R5)
0x10D6	0x25FF    MOVS	R5, #255
;PhotoTransdModbusV2.c, 209 :: 		unsigned char crc_lo = 0xFF; /* low CRC byte initialized */
; crc_lo start address is: 0 (R0)
0x10D8	0x20FF    MOVS	R0, #255
; buffer end address is: 4 (R1)
; buffer_length end address is: 8 (R2)
; crc_hi end address is: 20 (R5)
; crc_lo end address is: 0 (R0)
0x10DA	0x460C    MOV	R4, R1
0x10DC	0xB291    UXTH	R1, R2
;PhotoTransdModbusV2.c, 213 :: 		while (buffer_length--) {
L_PhotoTransdModbusV2_crc1618:
; crc_lo start address is: 0 (R0)
; buffer_length start address is: 4 (R1)
; crc_hi start address is: 20 (R5)
; buffer_length start address is: 4 (R1)
; buffer start address is: 16 (R4)
0x10DE	0xB28B    UXTH	R3, R1
0x10E0	0x1E4A    SUBS	R2, R1, #1
0x10E2	0xB291    UXTH	R1, R2
; buffer_length end address is: 4 (R1)
0x10E4	0x2B00    CMP	R3, #0
0x10E6	0xD00E    BEQ	L_PhotoTransdModbusV2_crc1619
; buffer_length end address is: 4 (R1)
;PhotoTransdModbusV2.c, 214 :: 		i = crc_hi ^ *buffer++; /* calculate the CRC  */
; buffer_length start address is: 4 (R1)
0x10E8	0x7822    LDRB	R2, [R4, #0]
0x10EA	0x406A    EORS	R2, R5
0x10EC	0xB2D2    UXTB	R2, R2
; crc_hi end address is: 20 (R5)
; i start address is: 12 (R3)
0x10EE	0xB2D3    UXTB	R3, R2
0x10F0	0x3401    ADDS	R4, #1
;PhotoTransdModbusV2.c, 215 :: 		crc_hi = crc_lo ^ table_crc_hi[i];
0x10F2	0x4A07    LDR	R2, [PC, #28]
0x10F4	0x18D2    ADDS	R2, R2, R3
0x10F6	0x7812    LDRB	R2, [R2, #0]
0x10F8	0x4042    EORS	R2, R0
; crc_lo end address is: 0 (R0)
; crc_hi start address is: 20 (R5)
0x10FA	0xB2D5    UXTB	R5, R2
;PhotoTransdModbusV2.c, 216 :: 		crc_lo = table_crc_lo[i];
0x10FC	0x4A05    LDR	R2, [PC, #20]
0x10FE	0x18D2    ADDS	R2, R2, R3
; i end address is: 12 (R3)
0x1100	0x7812    LDRB	R2, [R2, #0]
; crc_lo start address is: 0 (R0)
0x1102	0xB2D0    UXTB	R0, R2
;PhotoTransdModbusV2.c, 217 :: 		}
; buffer_length end address is: 4 (R1)
; buffer end address is: 16 (R4)
0x1104	0xE7EB    B	L_PhotoTransdModbusV2_crc1618
L_PhotoTransdModbusV2_crc1619:
;PhotoTransdModbusV2.c, 219 :: 		return (crc_hi << 8 | crc_lo);
0x1106	0x022A    LSLS	R2, R5, #8
0x1108	0xB292    UXTH	R2, R2
; crc_hi end address is: 20 (R5)
0x110A	0x4302    ORRS	R2, R0
; crc_lo end address is: 0 (R0)
0x110C	0xB290    UXTH	R0, R2
;PhotoTransdModbusV2.c, 220 :: 		}
L_end_crc16:
0x110E	0xBD00    POP	(R15)
0x1110	0x1E320000  	PhotoTransdModbusV2_table_crc_hi+0
0x1114	0x1F320000  	PhotoTransdModbusV2_table_crc_lo+0
; end of PhotoTransdModbusV2_crc16
_UART1_Write:
;__Lib_UART_1.c, 43 :: 		
; _data start address is: 0 (R0)
0x1118	0xB500    PUSH	(R14)
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_1.c, 44 :: 		
0x111A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x111C	0x4801    LDR	R0, [PC, #4]
0x111E	0xF7FFFD9D  BL	__Lib_UART_1_UARTx_Write+0
;__Lib_UART_1.c, 45 :: 		
L_end_UART1_Write:
0x1122	0xBD00    POP	(R15)
0x1124	0x38004001  	USART1_CR1+0
; end of _UART1_Write
_SaveSettings:
;PhotoTransdModbusV2.c, 136 :: 		void SaveSettings()
0x0FE8	0xB500    PUSH	(R14)
;PhotoTransdModbusV2.c, 139 :: 		FLASH_ErasePage(flash_base_settings_adress);
0x0FEA	0x4807    LDR	R0, [PC, #28]
0x0FEC	0xF7FFFDAA  BL	_FLASH_ErasePage+0
;PhotoTransdModbusV2.c, 141 :: 		FLASH_Write_HalfWord(flash_dev_adress,default_dev_adress);  //пишем половинками
0x0FF0	0x2101    MOVS	R1, #1
0x0FF2	0x4805    LDR	R0, [PC, #20]
0x0FF4	0xF7FFFDFC  BL	_FLASH_Write_HalfWord+0
;PhotoTransdModbusV2.c, 143 :: 		FLASH_Write_HalfWord(flash_baudrate,baudrate);
0x0FF8	0x4804    LDR	R0, [PC, #16]
0x0FFA	0x8800    LDRH	R0, [R0, #0]
0x0FFC	0xB281    UXTH	R1, R0
0x0FFE	0x4804    LDR	R0, [PC, #16]
0x1000	0xF7FFFDF6  BL	_FLASH_Write_HalfWord+0
;PhotoTransdModbusV2.c, 145 :: 		}
L_end_SaveSettings:
0x1004	0xBD00    POP	(R15)
0x1006	0xBF00    NOP
0x1008	0x3C000800  	#134233088
0x100C	0x00022000  	_baudrate+0
0x1010	0x3C040800  	#134233092
; end of _SaveSettings
_FLASH_ErasePage:
;__Lib_FLASH_32F0x_16.c, 164 :: 		
; page start address is: 0 (R0)
0x0B44	0xB500    PUSH	(R14)
0x0B46	0x4604    MOV	R4, R0
; page end address is: 0 (R0)
; page start address is: 16 (R4)
;__Lib_FLASH_32F0x_16.c, 166 :: 		
;__Lib_FLASH_32F0x_16.c, 168 :: 		
0x0B48	0xF7FFFF1C  BL	__Lib_FLASH_32F0x_16_FLASH_ClearFlags+0
;__Lib_FLASH_32F0x_16.c, 169 :: 		
0x0B4C	0xF7FFFD2E  BL	_FLASH_Unlock+0
;__Lib_FLASH_32F0x_16.c, 172 :: 		
0x0B50	0xF7FFFCF6  BL	__Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation+0
; status start address is: 4 (R1)
0x0B54	0x4601    MOV	R1, R0
;__Lib_FLASH_32F0x_16.c, 174 :: 		
0x0B56	0x2800    CMP	R0, #0
0x0B58	0xD12C    BNE	L__FLASH_ErasePage42
; status end address is: 4 (R1)
;__Lib_FLASH_32F0x_16.c, 177 :: 		
0x0B5A	0x4B17    LDR	R3, [PC, #92]
0x0B5C	0x6819    LDR	R1, [R3, #0]
0x0B5E	0x2202    MOVS	R2, #2
0x0B60	0x4311    ORRS	R1, R2
0x0B62	0x6019    STR	R1, [R3, #0]
;__Lib_FLASH_32F0x_16.c, 178 :: 		
0x0B64	0x4915    LDR	R1, [PC, #84]
0x0B66	0x680A    LDR	R2, [R1, #0]
0x0B68	0x2100    MOVS	R1, #0
0x0B6A	0x400A    ANDS	R2, R1
0x0B6C	0x4913    LDR	R1, [PC, #76]
0x0B6E	0x600A    STR	R2, [R1, #0]
;__Lib_FLASH_32F0x_16.c, 179 :: 		
0x0B70	0x4912    LDR	R1, [PC, #72]
0x0B72	0x6809    LDR	R1, [R1, #0]
0x0B74	0x460A    MOV	R2, R1
0x0B76	0x4322    ORRS	R2, R4
; page end address is: 16 (R4)
0x0B78	0x4910    LDR	R1, [PC, #64]
0x0B7A	0x600A    STR	R2, [R1, #0]
;__Lib_FLASH_32F0x_16.c, 180 :: 		
0x0B7C	0x4B0E    LDR	R3, [PC, #56]
0x0B7E	0x6819    LDR	R1, [R3, #0]
0x0B80	0x2240    MOVS	R2, #64
0x0B82	0x4311    ORRS	R1, R2
0x0B84	0x6019    STR	R1, [R3, #0]
;__Lib_FLASH_32F0x_16.c, 181 :: 		
0x0B86	0xBF00    NOP
;__Lib_FLASH_32F0x_16.c, 184 :: 		
0x0B88	0xF7FFFCDA  BL	__Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation+0
; status start address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 187 :: 		
0x0B8C	0x490C    LDR	R1, [PC, #48]
0x0B8E	0x680A    LDR	R2, [R1, #0]
0x0B90	0x2120    MOVS	R1, #32
0x0B92	0x4011    ANDS	R1, R2
0x0B94	0x0949    LSRS	R1, R1, #5
0x0B96	0x2900    CMP	R1, #0
0x0B98	0xD00B    BEQ	L__FLASH_ErasePage41
0x0B9A	0x2800    CMP	R0, #0
0x0B9C	0xD109    BNE	L__FLASH_ErasePage40
L__FLASH_ErasePage39:
;__Lib_FLASH_32F0x_16.c, 189 :: 		
0x0B9E	0x4B08    LDR	R3, [PC, #32]
0x0BA0	0x6819    LDR	R1, [R3, #0]
0x0BA2	0x2220    MOVS	R2, #32
0x0BA4	0x4311    ORRS	R1, R2
0x0BA6	0x6019    STR	R1, [R3, #0]
;__Lib_FLASH_32F0x_16.c, 190 :: 		
0x0BA8	0x4B03    LDR	R3, [PC, #12]
0x0BAA	0x6819    LDR	R1, [R3, #0]
0x0BAC	0x2202    MOVS	R2, #2
0x0BAE	0x4391    BICS	R1, R2
0x0BB0	0x6019    STR	R1, [R3, #0]
;__Lib_FLASH_32F0x_16.c, 187 :: 		
L__FLASH_ErasePage41:
L__FLASH_ErasePage40:
;__Lib_FLASH_32F0x_16.c, 192 :: 		
0x0BB2	0xE000    B	L_FLASH_ErasePage10
; status end address is: 0 (R0)
L__FLASH_ErasePage42:
;__Lib_FLASH_32F0x_16.c, 174 :: 		
0x0BB4	0x4608    MOV	R0, R1
;__Lib_FLASH_32F0x_16.c, 192 :: 		
L_FLASH_ErasePage10:
;__Lib_FLASH_32F0x_16.c, 195 :: 		
; status start address is: 0 (R0)
; status end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 196 :: 		
L_end_FLASH_ErasePage:
0x0BB6	0xBD00    POP	(R15)
0x0BB8	0x20104002  	Flash_CR+0
0x0BBC	0x20144002  	Flash_AR+0
0x0BC0	0x200C4002  	Flash_SR+0
; end of _FLASH_ErasePage
__Lib_FLASH_32F0x_16_FLASH_ClearFlags:
;__Lib_FLASH_32F0x_16.c, 46 :: 		
0x0984	0xB081    SUB	SP, SP, #4
;__Lib_FLASH_32F0x_16.c, 48 :: 		
0x0986	0x4A08    LDR	R2, [PC, #32]
0x0988	0x6810    LDR	R0, [R2, #0]
0x098A	0x2120    MOVS	R1, #32
0x098C	0x4308    ORRS	R0, R1
0x098E	0x6010    STR	R0, [R2, #0]
;__Lib_FLASH_32F0x_16.c, 49 :: 		
0x0990	0x4A05    LDR	R2, [PC, #20]
0x0992	0x6810    LDR	R0, [R2, #0]
0x0994	0x2104    MOVS	R1, #4
0x0996	0x4308    ORRS	R0, R1
0x0998	0x6010    STR	R0, [R2, #0]
;__Lib_FLASH_32F0x_16.c, 50 :: 		
0x099A	0x4A03    LDR	R2, [PC, #12]
0x099C	0x6810    LDR	R0, [R2, #0]
0x099E	0x2110    MOVS	R1, #16
0x09A0	0x4308    ORRS	R0, R1
0x09A2	0x6010    STR	R0, [R2, #0]
;__Lib_FLASH_32F0x_16.c, 51 :: 		
L_end_FLASH_ClearFlags:
0x09A4	0xB001    ADD	SP, SP, #4
0x09A6	0x4770    BX	LR
0x09A8	0x200C4002  	Flash_SR+0
; end of __Lib_FLASH_32F0x_16_FLASH_ClearFlags
_FLASH_Unlock:
;__Lib_FLASH_32F0x_16.c, 132 :: 		
0x05AC	0xB500    PUSH	(R14)
;__Lib_FLASH_32F0x_16.c, 134 :: 		
0x05AE	0x4807    LDR	R0, [PC, #28]
0x05B0	0x6801    LDR	R1, [R0, #0]
0x05B2	0x2080    MOVS	R0, #128
0x05B4	0x4008    ANDS	R0, R1
0x05B6	0x09C0    LSRS	R0, R0, #7
0x05B8	0x2800    CMP	R0, #0
0x05BA	0xD005    BEQ	L_FLASH_Unlock8
;__Lib_FLASH_32F0x_16.c, 137 :: 		
0x05BC	0x4904    LDR	R1, [PC, #16]
0x05BE	0x4805    LDR	R0, [PC, #20]
0x05C0	0x6001    STR	R1, [R0, #0]
;__Lib_FLASH_32F0x_16.c, 138 :: 		
0x05C2	0x4905    LDR	R1, [PC, #20]
0x05C4	0x4803    LDR	R0, [PC, #12]
0x05C6	0x6001    STR	R1, [R0, #0]
;__Lib_FLASH_32F0x_16.c, 139 :: 		
L_FLASH_Unlock8:
;__Lib_FLASH_32F0x_16.c, 140 :: 		
L_end_FLASH_Unlock:
0x05C8	0xBD00    POP	(R15)
0x05CA	0xBF00    NOP
0x05CC	0x20104002  	Flash_CRbits+0
0x05D0	0x01234567  	#1164378403
0x05D4	0x20044002  	Flash_KEYR+0
0x05D8	0x89ABCDEF  	#-839939669
; end of _FLASH_Unlock
__Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation:
;__Lib_FLASH_32F0x_16.c, 102 :: 		
0x0540	0xB500    PUSH	(R14)
;__Lib_FLASH_32F0x_16.c, 104 :: 		
;__Lib_FLASH_32F0x_16.c, 107 :: 		
0x0542	0xF7FFFFDD  BL	__Lib_FLASH_32F0x_16_FLASH_GetStatus+0
; status start address is: 4 (R1)
0x0546	0x4601    MOV	R1, R0
; status end address is: 4 (R1)
0x0548	0x4608    MOV	R0, R1
;__Lib_FLASH_32F0x_16.c, 109 :: 		
L___Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation6:
; status start address is: 0 (R0)
0x054A	0x2801    CMP	R0, #1
0x054C	0xD102    BNE	L___Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation7
; status end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 111 :: 		
0x054E	0xF7FFFFD7  BL	__Lib_FLASH_32F0x_16_FLASH_GetStatus+0
; status start address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 112 :: 		
0x0552	0xE7FA    B	L___Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation6
L___Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation7:
;__Lib_FLASH_32F0x_16.c, 115 :: 		
; status end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 116 :: 		
L_end_FLASH_WaitForLastOperation:
0x0554	0xBD00    POP	(R15)
; end of __Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation
__Lib_FLASH_32F0x_16_FLASH_GetStatus:
;__Lib_FLASH_32F0x_16.c, 61 :: 		
0x0500	0xB500    PUSH	(R14)
;__Lib_FLASH_32F0x_16.c, 63 :: 		
;__Lib_FLASH_32F0x_16.c, 65 :: 		
0x0502	0x480E    LDR	R0, [PC, #56]
0x0504	0x6801    LDR	R1, [R0, #0]
0x0506	0x2001    MOVS	R0, #1
0x0508	0x4008    ANDS	R0, R1
0x050A	0x2800    CMP	R0, #0
0x050C	0xD001    BEQ	L___Lib_FLASH_32F0x_16_FLASH_GetStatus0
;__Lib_FLASH_32F0x_16.c, 67 :: 		
; flashstatus start address is: 0 (R0)
0x050E	0x2001    MOVS	R0, #1
;__Lib_FLASH_32F0x_16.c, 68 :: 		
; flashstatus end address is: 0 (R0)
0x0510	0xE012    B	L___Lib_FLASH_32F0x_16_FLASH_GetStatus1
L___Lib_FLASH_32F0x_16_FLASH_GetStatus0:
;__Lib_FLASH_32F0x_16.c, 71 :: 		
0x0512	0x480A    LDR	R0, [PC, #40]
0x0514	0x6801    LDR	R1, [R0, #0]
0x0516	0x2010    MOVS	R0, #16
0x0518	0x4008    ANDS	R0, R1
0x051A	0x0900    LSRS	R0, R0, #4
0x051C	0x2800    CMP	R0, #0
0x051E	0xD001    BEQ	L___Lib_FLASH_32F0x_16_FLASH_GetStatus2
;__Lib_FLASH_32F0x_16.c, 73 :: 		
; flashstatus start address is: 0 (R0)
0x0520	0x2003    MOVS	R0, #3
;__Lib_FLASH_32F0x_16.c, 74 :: 		
; flashstatus end address is: 0 (R0)
0x0522	0xE009    B	L___Lib_FLASH_32F0x_16_FLASH_GetStatus3
L___Lib_FLASH_32F0x_16_FLASH_GetStatus2:
;__Lib_FLASH_32F0x_16.c, 77 :: 		
0x0524	0x4805    LDR	R0, [PC, #20]
0x0526	0x6801    LDR	R1, [R0, #0]
0x0528	0x2004    MOVS	R0, #4
0x052A	0x4008    ANDS	R0, R1
0x052C	0x0880    LSRS	R0, R0, #2
0x052E	0x2800    CMP	R0, #0
0x0530	0xD001    BEQ	L___Lib_FLASH_32F0x_16_FLASH_GetStatus4
;__Lib_FLASH_32F0x_16.c, 79 :: 		
; flashstatus start address is: 0 (R0)
0x0532	0x2002    MOVS	R0, #2
;__Lib_FLASH_32F0x_16.c, 80 :: 		
; flashstatus end address is: 0 (R0)
0x0534	0xE000    B	L___Lib_FLASH_32F0x_16_FLASH_GetStatus5
L___Lib_FLASH_32F0x_16_FLASH_GetStatus4:
;__Lib_FLASH_32F0x_16.c, 83 :: 		
; flashstatus start address is: 0 (R0)
0x0536	0x2000    MOVS	R0, #0
; flashstatus end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 84 :: 		
L___Lib_FLASH_32F0x_16_FLASH_GetStatus5:
;__Lib_FLASH_32F0x_16.c, 85 :: 		
; flashstatus start address is: 0 (R0)
; flashstatus end address is: 0 (R0)
L___Lib_FLASH_32F0x_16_FLASH_GetStatus3:
;__Lib_FLASH_32F0x_16.c, 86 :: 		
; flashstatus start address is: 0 (R0)
; flashstatus end address is: 0 (R0)
L___Lib_FLASH_32F0x_16_FLASH_GetStatus1:
;__Lib_FLASH_32F0x_16.c, 89 :: 		
; flashstatus start address is: 0 (R0)
; flashstatus end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 90 :: 		
L_end_FLASH_GetStatus:
0x0538	0xBD00    POP	(R15)
0x053A	0xBF00    NOP
0x053C	0x200C4002  	Flash_SR+0
; end of __Lib_FLASH_32F0x_16_FLASH_GetStatus
_FLASH_Write_HalfWord:
;__Lib_FLASH_32F0x_16.c, 269 :: 		
; Data start address is: 4 (R1)
; address start address is: 0 (R0)
0x0BF0	0xB500    PUSH	(R14)
0x0BF2	0x4605    MOV	R5, R0
0x0BF4	0xB28E    UXTH	R6, R1
; Data end address is: 4 (R1)
; address end address is: 0 (R0)
; address start address is: 20 (R5)
; Data start address is: 24 (R6)
;__Lib_FLASH_32F0x_16.c, 271 :: 		
;__Lib_FLASH_32F0x_16.c, 273 :: 		
0x0BF6	0xF7FFFEC5  BL	__Lib_FLASH_32F0x_16_FLASH_ClearFlags+0
;__Lib_FLASH_32F0x_16.c, 274 :: 		
0x0BFA	0xF7FFFCD7  BL	_FLASH_Unlock+0
;__Lib_FLASH_32F0x_16.c, 277 :: 		
0x0BFE	0xF7FFFC9F  BL	__Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation+0
; status start address is: 4 (R1)
0x0C02	0x4601    MOV	R1, R0
;__Lib_FLASH_32F0x_16.c, 279 :: 		
0x0C04	0x2800    CMP	R0, #0
0x0C06	0xD11F    BNE	L__FLASH_Write_HalfWord53
; status end address is: 4 (R1)
;__Lib_FLASH_32F0x_16.c, 283 :: 		
0x0C08	0x4C10    LDR	R4, [PC, #64]
0x0C0A	0x6822    LDR	R2, [R4, #0]
0x0C0C	0x2301    MOVS	R3, #1
0x0C0E	0x431A    ORRS	R2, R3
0x0C10	0x6022    STR	R2, [R4, #0]
;__Lib_FLASH_32F0x_16.c, 286 :: 		
0x0C12	0x4A0F    LDR	R2, [PC, #60]
0x0C14	0x4295    CMP	R5, R2
0x0C16	0xD314    BCC	L__FLASH_Write_HalfWord52
0x0C18	0x4A0E    LDR	R2, [PC, #56]
0x0C1A	0x4295    CMP	R5, R2
0x0C1C	0xD811    BHI	L__FLASH_Write_HalfWord51
L__FLASH_Write_HalfWord48:
;__Lib_FLASH_32F0x_16.c, 288 :: 		
0x0C1E	0x802E    STRH	R6, [R5, #0]
; address end address is: 20 (R5)
; Data end address is: 24 (R6)
;__Lib_FLASH_32F0x_16.c, 291 :: 		
0x0C20	0xF7FFFC8E  BL	__Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation+0
; status start address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 294 :: 		
0x0C24	0x4A0C    LDR	R2, [PC, #48]
0x0C26	0x6813    LDR	R3, [R2, #0]
0x0C28	0x2220    MOVS	R2, #32
0x0C2A	0x401A    ANDS	R2, R3
0x0C2C	0x0952    LSRS	R2, R2, #5
0x0C2E	0x2A00    CMP	R2, #0
0x0C30	0xD006    BEQ	L__FLASH_Write_HalfWord50
0x0C32	0x2800    CMP	R0, #0
0x0C34	0xD104    BNE	L__FLASH_Write_HalfWord49
L__FLASH_Write_HalfWord47:
;__Lib_FLASH_32F0x_16.c, 295 :: 		
0x0C36	0x4C08    LDR	R4, [PC, #32]
0x0C38	0x6822    LDR	R2, [R4, #0]
0x0C3A	0x2320    MOVS	R3, #32
0x0C3C	0x431A    ORRS	R2, R3
0x0C3E	0x6022    STR	R2, [R4, #0]
;__Lib_FLASH_32F0x_16.c, 294 :: 		
L__FLASH_Write_HalfWord50:
L__FLASH_Write_HalfWord49:
;__Lib_FLASH_32F0x_16.c, 296 :: 		
; status end address is: 0 (R0)
0x0C40	0xE001    B	L_FLASH_Write_HalfWord28
;__Lib_FLASH_32F0x_16.c, 286 :: 		
L__FLASH_Write_HalfWord52:
L__FLASH_Write_HalfWord51:
;__Lib_FLASH_32F0x_16.c, 298 :: 		
; status start address is: 0 (R0)
0x0C42	0x2000    MOVS	R0, #0
0x0C44	0x43C0    MVN	R0, R0
; status end address is: 0 (R0)
L_FLASH_Write_HalfWord28:
;__Lib_FLASH_32F0x_16.c, 299 :: 		
; status start address is: 0 (R0)
; status end address is: 0 (R0)
0x0C46	0xE000    B	L_FLASH_Write_HalfWord21
L__FLASH_Write_HalfWord53:
;__Lib_FLASH_32F0x_16.c, 279 :: 		
0x0C48	0x4608    MOV	R0, R1
;__Lib_FLASH_32F0x_16.c, 299 :: 		
L_FLASH_Write_HalfWord21:
;__Lib_FLASH_32F0x_16.c, 302 :: 		
; status start address is: 0 (R0)
; status end address is: 0 (R0)
;__Lib_FLASH_32F0x_16.c, 303 :: 		
L_end_FLASH_Write_HalfWord:
0x0C4A	0xBD00    POP	(R15)
0x0C4C	0x20104002  	Flash_CR+0
0x0C50	0x00000800  	#134217728
0x0C54	0x3FFF0800  	#134234111
0x0C58	0x200C4002  	Flash_SR+0
; end of _FLASH_Write_HalfWord
;PhotoTransdModbusV2.c,0 :: ?ICS_baudrate [2]
0x0436	0x0006 ;?ICS_baudrate+0
; end of ?ICS_baudrate
;PhotoTransdModbusV2.c,0 :: ?ICS_dev_adress [1]
0x0556	0x01 ;?ICS_dev_adress+0
; end of ?ICS_dev_adress
;PhotoTransdModbusV2.c,2 :: PhotoTransdModbusV2_table_crc_hi [256]
0x1E32	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+0
0x1E36	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+4
0x1E3A	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+8
0x1E3E	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+12
0x1E42	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+16
0x1E46	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+20
0x1E4A	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+24
0x1E4E	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+28
0x1E52	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+32
0x1E56	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+36
0x1E5A	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+40
0x1E5E	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+44
0x1E62	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+48
0x1E66	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+52
0x1E6A	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+56
0x1E6E	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+60
0x1E72	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+64
0x1E76	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+68
0x1E7A	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+72
0x1E7E	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+76
0x1E82	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+80
0x1E86	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+84
0x1E8A	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+88
0x1E8E	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+92
0x1E92	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+96
0x1E96	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+100
0x1E9A	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+104
0x1E9E	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+108
0x1EA2	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+112
0x1EA6	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+116
0x1EAA	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+120
0x1EAE	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+124
0x1EB2	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+128
0x1EB6	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+132
0x1EBA	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+136
0x1EBE	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+140
0x1EC2	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+144
0x1EC6	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+148
0x1ECA	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+152
0x1ECE	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+156
0x1ED2	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+160
0x1ED6	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+164
0x1EDA	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+168
0x1EDE	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+172
0x1EE2	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+176
0x1EE6	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+180
0x1EEA	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+184
0x1EEE	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+188
0x1EF2	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+192
0x1EF6	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+196
0x1EFA	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+200
0x1EFE	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+204
0x1F02	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+208
0x1F06	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+212
0x1F0A	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+216
0x1F0E	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+220
0x1F12	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+224
0x1F16	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+228
0x1F1A	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+232
0x1F1E	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+236
0x1F22	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+240
0x1F26	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+244
0x1F2A	0x4180C001 ;PhotoTransdModbusV2_table_crc_hi+248
0x1F2E	0x4081C100 ;PhotoTransdModbusV2_table_crc_hi+252
; end of PhotoTransdModbusV2_table_crc_hi
;PhotoTransdModbusV2.c,32 :: PhotoTransdModbusV2_table_crc_lo [256]
0x1F32	0x01C1C000 ;PhotoTransdModbusV2_table_crc_lo+0
0x1F36	0xC20203C3 ;PhotoTransdModbusV2_table_crc_lo+4
0x1F3A	0xC70706C6 ;PhotoTransdModbusV2_table_crc_lo+8
0x1F3E	0x04C4C505 ;PhotoTransdModbusV2_table_crc_lo+12
0x1F42	0xCD0D0CCC ;PhotoTransdModbusV2_table_crc_lo+16
0x1F46	0x0ECECF0F ;PhotoTransdModbusV2_table_crc_lo+20
0x1F4A	0x0BCBCA0A ;PhotoTransdModbusV2_table_crc_lo+24
0x1F4E	0xC80809C9 ;PhotoTransdModbusV2_table_crc_lo+28
0x1F52	0xD91918D8 ;PhotoTransdModbusV2_table_crc_lo+32
0x1F56	0x1ADADB1B ;PhotoTransdModbusV2_table_crc_lo+36
0x1F5A	0x1FDFDE1E ;PhotoTransdModbusV2_table_crc_lo+40
0x1F5E	0xDC1C1DDD ;PhotoTransdModbusV2_table_crc_lo+44
0x1F62	0x15D5D414 ;PhotoTransdModbusV2_table_crc_lo+48
0x1F66	0xD61617D7 ;PhotoTransdModbusV2_table_crc_lo+52
0x1F6A	0xD31312D2 ;PhotoTransdModbusV2_table_crc_lo+56
0x1F6E	0x10D0D111 ;PhotoTransdModbusV2_table_crc_lo+60
0x1F72	0xF13130F0 ;PhotoTransdModbusV2_table_crc_lo+64
0x1F76	0x32F2F333 ;PhotoTransdModbusV2_table_crc_lo+68
0x1F7A	0x37F7F636 ;PhotoTransdModbusV2_table_crc_lo+72
0x1F7E	0xF43435F5 ;PhotoTransdModbusV2_table_crc_lo+76
0x1F82	0x3DFDFC3C ;PhotoTransdModbusV2_table_crc_lo+80
0x1F86	0xFE3E3FFF ;PhotoTransdModbusV2_table_crc_lo+84
0x1F8A	0xFB3B3AFA ;PhotoTransdModbusV2_table_crc_lo+88
0x1F8E	0x38F8F939 ;PhotoTransdModbusV2_table_crc_lo+92
0x1F92	0x29E9E828 ;PhotoTransdModbusV2_table_crc_lo+96
0x1F96	0xEA2A2BEB ;PhotoTransdModbusV2_table_crc_lo+100
0x1F9A	0xEF2F2EEE ;PhotoTransdModbusV2_table_crc_lo+104
0x1F9E	0x2CECED2D ;PhotoTransdModbusV2_table_crc_lo+108
0x1FA2	0xE52524E4 ;PhotoTransdModbusV2_table_crc_lo+112
0x1FA6	0x26E6E727 ;PhotoTransdModbusV2_table_crc_lo+116
0x1FAA	0x23E3E222 ;PhotoTransdModbusV2_table_crc_lo+120
0x1FAE	0xE02021E1 ;PhotoTransdModbusV2_table_crc_lo+124
0x1FB2	0xA16160A0 ;PhotoTransdModbusV2_table_crc_lo+128
0x1FB6	0x62A2A363 ;PhotoTransdModbusV2_table_crc_lo+132
0x1FBA	0x67A7A666 ;PhotoTransdModbusV2_table_crc_lo+136
0x1FBE	0xA46465A5 ;PhotoTransdModbusV2_table_crc_lo+140
0x1FC2	0x6DADAC6C ;PhotoTransdModbusV2_table_crc_lo+144
0x1FC6	0xAE6E6FAF ;PhotoTransdModbusV2_table_crc_lo+148
0x1FCA	0xAB6B6AAA ;PhotoTransdModbusV2_table_crc_lo+152
0x1FCE	0x68A8A969 ;PhotoTransdModbusV2_table_crc_lo+156
0x1FD2	0x79B9B878 ;PhotoTransdModbusV2_table_crc_lo+160
0x1FD6	0xBA7A7BBB ;PhotoTransdModbusV2_table_crc_lo+164
0x1FDA	0xBF7F7EBE ;PhotoTransdModbusV2_table_crc_lo+168
0x1FDE	0x7CBCBD7D ;PhotoTransdModbusV2_table_crc_lo+172
0x1FE2	0xB57574B4 ;PhotoTransdModbusV2_table_crc_lo+176
0x1FE6	0x76B6B777 ;PhotoTransdModbusV2_table_crc_lo+180
0x1FEA	0x73B3B272 ;PhotoTransdModbusV2_table_crc_lo+184
0x1FEE	0xB07071B1 ;PhotoTransdModbusV2_table_crc_lo+188
0x1FF2	0x51919050 ;PhotoTransdModbusV2_table_crc_lo+192
0x1FF6	0x92525393 ;PhotoTransdModbusV2_table_crc_lo+196
0x1FFA	0x97575696 ;PhotoTransdModbusV2_table_crc_lo+200
0x1FFE	0x54949555 ;PhotoTransdModbusV2_table_crc_lo+204
0x2002	0x9D5D5C9C ;PhotoTransdModbusV2_table_crc_lo+208
0x2006	0x5E9E9F5F ;PhotoTransdModbusV2_table_crc_lo+212
0x200A	0x5B9B9A5A ;PhotoTransdModbusV2_table_crc_lo+216
0x200E	0x98585999 ;PhotoTransdModbusV2_table_crc_lo+220
0x2012	0x89494888 ;PhotoTransdModbusV2_table_crc_lo+224
0x2016	0x4A8A8B4B ;PhotoTransdModbusV2_table_crc_lo+228
0x201A	0x4F8F8E4E ;PhotoTransdModbusV2_table_crc_lo+232
0x201E	0x8C4C4D8D ;PhotoTransdModbusV2_table_crc_lo+236
0x2022	0x45858444 ;PhotoTransdModbusV2_table_crc_lo+240
0x2026	0x86464787 ;PhotoTransdModbusV2_table_crc_lo+244
0x202A	0x83434282 ;PhotoTransdModbusV2_table_crc_lo+248
0x202E	0x40808141 ;PhotoTransdModbusV2_table_crc_lo+252
; end of PhotoTransdModbusV2_table_crc_lo
;__Lib_GPIO_32F030x46_Defs.c,297 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2034	0x00000109 ;__GPIO_MODULE_USART1_PA9_10+0
0x2038	0x0000010A ;__GPIO_MODULE_USART1_PA9_10+4
0x203C	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x2040	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2044	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2048	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x204C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x2050	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2054	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2058	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x205C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x2060	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2064	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2068	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x206C	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+56
0x2070	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2074	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2078	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x207C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x2080	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2084	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2088	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x208C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x2090	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2094	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2098	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x209C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;PhotoTransdModbusV2.c,0 :: ?ICS_packet_timeout_us [4]
0x20A0	0x000000B6 ;?ICS_packet_timeout_us+0
; end of ?ICS_packet_timeout_us
;PhotoTransdModbusV2.c,0 :: ?ICS_iii [2]
0x20A4	0x0000 ;?ICS_iii+0
; end of ?ICS_iii
;PhotoTransdModbusV2.c,0 :: ?ICS?lstr1_PhotoTransdModbusV2 [26]
0x20A6	0x65520A0D ;?ICS?lstr1_PhotoTransdModbusV2+0
0x20AA	0x2C796461 ;?ICS?lstr1_PhotoTransdModbusV2+4
0x20AE	0x43324920 ;?ICS?lstr1_PhotoTransdModbusV2+8
0x20B2	0x696E6920 ;?ICS?lstr1_PhotoTransdModbusV2+12
0x20B6	0x696C6174 ;?ICS?lstr1_PhotoTransdModbusV2+16
0x20BA	0x0D64657A ;?ICS?lstr1_PhotoTransdModbusV2+20
0x20BE	0x000A ;?ICS?lstr1_PhotoTransdModbusV2+24
; end of ?ICS?lstr1_PhotoTransdModbusV2
;PhotoTransdModbusV2.c,0 :: ?ICS?lstr2_PhotoTransdModbusV2 [10]
0x20C0	0x72644120 ;?ICS?lstr2_PhotoTransdModbusV2+0
0x20C4	0x3A737365 ;?ICS?lstr2_PhotoTransdModbusV2+4
0x20C8	0x0020 ;?ICS?lstr2_PhotoTransdModbusV2+8
; end of ?ICS?lstr2_PhotoTransdModbusV2
;PhotoTransdModbusV2.c,0 :: ?ICS?lstr3_PhotoTransdModbusV2 [12]
0x20CA	0x75616220 ;?ICS?lstr3_PhotoTransdModbusV2+0
0x20CE	0x74617264 ;?ICS?lstr3_PhotoTransdModbusV2+4
0x20D2	0x00203A65 ;?ICS?lstr3_PhotoTransdModbusV2+8
; end of ?ICS?lstr3_PhotoTransdModbusV2
;,0 :: _initBlock_10 [24]
; Containing: ?ICS?lstr4_PhotoTransdModbusV2 [21]
;             ?ICS?lstr5_PhotoTransdModbusV2 [3]
0x20D6	0x63617020 ;_initBlock_10+0 : ?ICS?lstr4_PhotoTransdModbusV2 at 0x20D6
0x20DA	0x5F74656B ;_initBlock_10+4
0x20DE	0x656D6974 ;_initBlock_10+8
0x20E2	0x5F74756F ;_initBlock_10+12
0x20E6	0x203A7375 ;_initBlock_10+16
0x20EA	0x000A0D00 ;_initBlock_10+20 : ?ICS?lstr5_PhotoTransdModbusV2 at 0x20EB
; end of _initBlock_10
;PhotoTransdModbusV2.c,0 :: ?ICS?lstr6_PhotoTransdModbusV2 [12]
0x20EE	0x67655220 ;?ICS?lstr6_PhotoTransdModbusV2+0
0x20F2	0x65747369 ;?ICS?lstr6_PhotoTransdModbusV2+4
0x20F6	0x00203A72 ;?ICS?lstr6_PhotoTransdModbusV2+8
; end of ?ICS?lstr6_PhotoTransdModbusV2
;,0 :: _initBlock_12 [8]
; Containing: ?ICS?lstr7_PhotoTransdModbusV2 [5]
;             ?ICS?lstr8_PhotoTransdModbusV2 [3]
0x20FA	0x203E3E20 ;_initBlock_12+0 : ?ICS?lstr7_PhotoTransdModbusV2 at 0x20FA
0x20FE	0x000A0D00 ;_initBlock_12+4 : ?ICS?lstr8_PhotoTransdModbusV2 at 0x20FF
; end of _initBlock_12
;PhotoTransdModbusV2.c,0 :: ?ICS_pnt_buffer [2]
0x2102	0x0000 ;?ICS_pnt_buffer+0
; end of ?ICS_pnt_buffer
;PhotoTransdModbusV2.c,0 :: ?ICS_CRC [2]
0x2104	0x0000 ;?ICS_CRC+0
; end of ?ICS_CRC
;PhotoTransdModbusV2.c,0 :: ?ICS_fff [2]
0x2106	0x0000 ;?ICS_fff+0
; end of ?ICS_fff
;__Lib_Conversions.c,3 :: __Lib_Conversions_Digits [16]
0x2108	0x33323130 ;__Lib_Conversions_Digits+0
0x210C	0x37363534 ;__Lib_Conversions_Digits+4
0x2110	0x42413938 ;__Lib_Conversions_Digits+8
0x2114	0x46454443 ;__Lib_Conversions_Digits+12
; end of __Lib_Conversions_Digits
;__Lib_System.c,397 :: __Lib_System_APBAHBPrescTable [16]
0x2118	0x00000000 ;__Lib_System_APBAHBPrescTable+0
0x211C	0x04030201 ;__Lib_System_APBAHBPrescTable+4
0x2120	0x04030201 ;__Lib_System_APBAHBPrescTable+8
0x2124	0x09080706 ;__Lib_System_APBAHBPrescTable+12
; end of __Lib_System_APBAHBPrescTable
;PhotoTransdModbusV2.c,0 :: ?ICSReceiveOne_reg_rd_L0 [4]
0x2128	0x00000000 ;?ICSReceiveOne_reg_rd_L0+0
; end of ?ICSReceiveOne_reg_rd_L0
;PhotoTransdModbusV2.c,0 :: ?ICSReceiveOne_regs_count_L0 [4]
0x212C	0x00000000 ;?ICSReceiveOne_regs_count_L0+0
; end of ?ICSReceiveOne_regs_count_L0
;PhotoTransdModbusV2.c,0 :: ?ICSReceiveOne_tmp_L0 [4]
0x2130	0x00000000 ;?ICSReceiveOne_tmp_L0+0
; end of ?ICSReceiveOne_tmp_L0
;__Lib_SoftI2C.c,0 :: ?ICSSoft_I2C_Read_result_L0 [4]
0x2134	0x00000000 ;?ICSSoft_I2C_Read_result_L0+0
; end of ?ICSSoft_I2C_Read_result_L0
;__Lib_SoftI2C.c,0 :: ?ICSSoft_I2C_Read_temp_L0 [4]
0x2138	0x00000080 ;?ICSSoft_I2C_Read_temp_L0+0
; end of ?ICSSoft_I2C_Read_temp_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x00C0     [144]    _GPIO_Clk_Enable
0x0150     [724]    _GPIO_Config
0x0424      [18]    _Delay_1us
0x0438      [12]    _Get_Fosc_kHz
0x0444     [188]    __Lib_GPIO_32F0xx_GPIO_Config_Pin_Alternate_Function
0x0500      [64]    __Lib_FLASH_32F0x_16_FLASH_GetStatus
0x0540      [22]    __Lib_FLASH_32F0x_16_FLASH_WaitForLastOperation
0x0558      [84]    _Soft_I2C_Start
0x05AC      [48]    _FLASH_Unlock
0x05DC      [68]    __Div_32x32_U
0x0620      [68]    _GPIO_Alternate_Function_Enable
0x0664     [176]    _RCC_GetClocksFrequency
0x0714     [124]    __Lib_MathDouble___Float_Aux
0x0790     [332]    _Soft_I2C_Read
0x08DC     [148]    _Soft_I2C_Stop
0x0970      [20]    __Lib_MathDouble___Fp
0x0984      [40]    __Lib_FLASH_32F0x_16_FLASH_ClearFlags
0x09AC     [408]    _Soft_I2C_Write
0x0B44     [128]    _FLASH_ErasePage
0x0BC4      [42]    __Lib_UART_1_UARTx_Write_Text
0x0BF0     [108]    _FLASH_Write_HalfWord
0x0C5C      [40]    __Lib_UART_1_UARTx_Write
0x0C84      [84]    _ReadADC
0x0CD8     [276]    __Lib_UART_1_UARTx_Init_Advanced
0x0DEC      [18]    __UnsignedIntegralToFloat
0x0E00      [46]    __FloatToUnsignedIntegral
0x0E30     [162]    __Div_FP
0x0ED4     [152]    __Lib_System_SystemClockSetDefault
0x0F6C      [60]    _NVIC_IntEnable
0x0FA8      [18]    ___CC2DW
0x0FBC      [42]    ___FillZeros
0x0FE8      [44]    _SaveSettings
0x1014      [36]    _baudrate_test
0x1038     [132]    _ReadSettings
0x10BC      [20]    _SystemReset
0x10D0      [72]    PhotoTransdModbusV2_crc16
0x1118      [16]    _UART1_Write
0x1128      [90]    _LongWordToStr
0x1184     [172]    _RegistersUpdate
0x1230      [96]    _ByteToStr
0x1290      [16]    _UART1_Write_Text
0x12A0     [204]    _Soft_I2C_Init
0x136C     [144]    _baudrate_bid
0x13FC      [92]    _WordToHex
0x1458      [36]    _UART1_Init
0x147C      [16]    _GPIO_Digital_Output
0x148C     [420]    _main
0x1630      [20]    __Lib_System_InitialSetUpFosc
0x1644     [284]    __Lib_System_InitialSetUpRCCRCC2
0x1760    [1740]    _ReceiveOne
0x1E2C       [6]    ___GenExcept
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [1]    _dev_adress
0x20000001       [1]    _Bait1
0x20000002       [2]    _baudrate
0x20000004       [4]    _packet_timeout_us
0x20000008       [2]    _iii
0x2000000A      [26]    ?lstr1_PhotoTransdModbusV2
0x20000024      [10]    ?lstr2_PhotoTransdModbusV2
0x2000002E      [12]    ?lstr3_PhotoTransdModbusV2
0x2000003A      [21]    ?lstr4_PhotoTransdModbusV2
0x2000004F       [3]    ?lstr5_PhotoTransdModbusV2
0x20000052      [12]    ?lstr6_PhotoTransdModbusV2
0x2000005E       [5]    ?lstr7_PhotoTransdModbusV2
0x20000063       [3]    ?lstr8_PhotoTransdModbusV2
0x20000066       [2]    _pnt_buffer
0x20000068       [2]    _CRC
0x2000006A       [2]    _fff
0x2000006C       [4]    _ptr
0x20000070      [32]    _ModbusRegister
0x20000090      [16]    _txt
0x200000A0       [1]    _Bait2
0x200000A1       [1]    _Bait3
0x200000A2       [0]    __Lib_SoftI2C___StopWaiting
0x200000A4       [4]    ___System_CLOCK_IN_KHZ
0x200000A8       [4]    _UART_Wr_Ptr
0x200000AC       [4]    _UART_Rd_Ptr
0x200000B0       [4]    _UART_Rdy_Ptr
0x200000B4       [4]    _UART_Tx_Idle_Ptr
0x200000B8     [260]    _buffer
0x200001BC     [260]    _resp_buffer
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0436       [2]    ?ICS_baudrate
0x0556       [1]    ?ICS_dev_adress
0x1E32     [256]    PhotoTransdModbusV2_table_crc_hi
0x1F32     [256]    PhotoTransdModbusV2_table_crc_lo
0x2034     [108]    __GPIO_MODULE_USART1_PA9_10
0x20A0       [4]    ?ICS_packet_timeout_us
0x20A4       [2]    ?ICS_iii
0x20A6      [26]    ?ICS?lstr1_PhotoTransdModbusV2
0x20C0      [10]    ?ICS?lstr2_PhotoTransdModbusV2
0x20CA      [12]    ?ICS?lstr3_PhotoTransdModbusV2
0x20D6      [21]    ?ICS?lstr4_PhotoTransdModbusV2
0x20EB       [3]    ?ICS?lstr5_PhotoTransdModbusV2
0x20EE      [12]    ?ICS?lstr6_PhotoTransdModbusV2
0x20FA       [5]    ?ICS?lstr7_PhotoTransdModbusV2
0x20FF       [3]    ?ICS?lstr8_PhotoTransdModbusV2
0x2102       [2]    ?ICS_pnt_buffer
0x2104       [2]    ?ICS_CRC
0x2106       [2]    ?ICS_fff
0x2108      [16]    __Lib_Conversions_Digits
0x2118      [16]    __Lib_System_APBAHBPrescTable
0x2128       [4]    ?ICSReceiveOne_reg_rd_L0
0x212C       [4]    ?ICSReceiveOne_regs_count_L0
0x2130       [4]    ?ICSReceiveOne_tmp_L0
0x2134       [4]    ?ICSSoft_I2C_Read_result_L0
0x2138       [4]    ?ICSSoft_I2C_Read_temp_L0
